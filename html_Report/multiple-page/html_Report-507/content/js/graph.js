/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 11223.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 25.0], [3.7, 25.0], [3.8, 114.0], [3.9, 114.0], [4.0, 156.0], [4.1, 156.0], [4.2, 194.0], [4.3, 194.0], [4.4, 201.0], [4.5, 201.0], [4.6, 203.0], [4.7, 203.0], [4.8, 206.0], [4.9, 206.0], [5.0, 207.0], [5.1, 207.0], [5.2, 212.0], [5.3, 212.0], [5.4, 217.0], [5.5, 217.0], [5.6, 390.0], [5.7, 390.0], [5.8, 390.0], [5.9, 390.0], [6.0, 393.0], [6.1, 393.0], [6.2, 394.0], [6.3, 394.0], [6.4, 401.0], [6.5, 401.0], [6.6, 405.0], [6.7, 405.0], [6.8, 405.0], [6.9, 405.0], [7.0, 407.0], [7.1, 407.0], [7.2, 407.0], [7.3, 408.0], [7.4, 408.0], [7.5, 409.0], [7.6, 409.0], [7.7, 409.0], [7.8, 409.0], [7.9, 410.0], [8.0, 410.0], [8.1, 412.0], [8.2, 412.0], [8.3, 412.0], [8.4, 412.0], [8.5, 413.0], [8.6, 413.0], [8.7, 415.0], [8.8, 415.0], [8.9, 418.0], [9.0, 418.0], [9.1, 418.0], [9.2, 418.0], [9.3, 418.0], [9.4, 418.0], [9.5, 419.0], [9.6, 419.0], [9.7, 419.0], [9.8, 419.0], [9.9, 420.0], [10.0, 420.0], [10.1, 421.0], [10.2, 421.0], [10.3, 422.0], [10.4, 422.0], [10.5, 423.0], [10.6, 423.0], [10.7, 423.0], [10.8, 423.0], [10.9, 424.0], [11.0, 424.0], [11.1, 424.0], [11.2, 424.0], [11.3, 425.0], [11.4, 425.0], [11.5, 425.0], [11.6, 425.0], [11.7, 425.0], [11.8, 425.0], [11.9, 426.0], [12.0, 426.0], [12.1, 426.0], [12.2, 426.0], [12.3, 427.0], [12.4, 427.0], [12.5, 427.0], [12.6, 427.0], [12.7, 428.0], [12.8, 428.0], [12.9, 428.0], [13.0, 428.0], [13.1, 429.0], [13.2, 429.0], [13.3, 429.0], [13.4, 429.0], [13.5, 429.0], [13.6, 429.0], [13.7, 429.0], [13.8, 429.0], [13.9, 431.0], [14.0, 431.0], [14.1, 431.0], [14.2, 431.0], [14.3, 431.0], [14.4, 431.0], [14.5, 431.0], [14.6, 432.0], [14.7, 432.0], [14.8, 433.0], [14.9, 433.0], [15.0, 435.0], [15.1, 435.0], [15.2, 438.0], [15.3, 438.0], [15.4, 443.0], [15.5, 443.0], [15.6, 444.0], [15.7, 444.0], [15.8, 448.0], [15.9, 448.0], [16.0, 450.0], [16.1, 450.0], [16.2, 455.0], [16.3, 455.0], [16.4, 580.0], [16.5, 580.0], [16.6, 605.0], [16.7, 605.0], [16.8, 607.0], [16.9, 607.0], [17.0, 616.0], [17.1, 616.0], [17.2, 621.0], [17.3, 621.0], [17.4, 625.0], [17.5, 625.0], [17.6, 630.0], [17.7, 630.0], [17.8, 632.0], [17.9, 632.0], [18.0, 633.0], [18.1, 633.0], [18.2, 634.0], [18.3, 634.0], [18.4, 639.0], [18.5, 639.0], [18.6, 643.0], [18.7, 643.0], [18.8, 644.0], [18.9, 644.0], [19.0, 649.0], [19.1, 649.0], [19.2, 659.0], [19.3, 659.0], [19.4, 661.0], [19.5, 661.0], [19.6, 671.0], [19.7, 671.0], [19.8, 682.0], [19.9, 682.0], [20.0, 1107.0], [20.1, 1107.0], [20.2, 1125.0], [20.3, 1125.0], [20.4, 1136.0], [20.5, 1136.0], [20.6, 1143.0], [20.7, 1143.0], [20.8, 1156.0], [20.9, 1156.0], [21.0, 1172.0], [21.1, 1172.0], [21.2, 1174.0], [21.3, 1174.0], [21.4, 1195.0], [21.5, 1198.0], [21.6, 1198.0], [21.7, 1205.0], [21.8, 1205.0], [21.9, 1220.0], [22.0, 1220.0], [22.1, 1225.0], [22.2, 1225.0], [22.3, 1226.0], [22.4, 1226.0], [22.5, 1234.0], [22.6, 1234.0], [22.7, 1239.0], [22.8, 1239.0], [22.9, 1245.0], [23.0, 1245.0], [23.1, 1262.0], [23.2, 1262.0], [23.3, 1273.0], [23.4, 1273.0], [23.5, 1287.0], [23.6, 1287.0], [23.7, 1290.0], [23.8, 1290.0], [23.9, 1300.0], [24.0, 1300.0], [24.1, 1303.0], [24.2, 1303.0], [24.3, 1314.0], [24.4, 1314.0], [24.5, 1318.0], [24.6, 1318.0], [24.7, 1322.0], [24.8, 1322.0], [24.9, 1335.0], [25.0, 1335.0], [25.1, 1360.0], [25.2, 1360.0], [25.3, 1360.0], [25.4, 1360.0], [25.5, 1372.0], [25.6, 1372.0], [25.7, 1378.0], [25.8, 1378.0], [25.9, 1387.0], [26.0, 1387.0], [26.1, 1388.0], [26.2, 1388.0], [26.3, 1401.0], [26.4, 1401.0], [26.5, 1414.0], [26.6, 1414.0], [26.7, 1420.0], [26.8, 1420.0], [26.9, 1427.0], [27.0, 1427.0], [27.1, 1437.0], [27.2, 1437.0], [27.3, 1444.0], [27.4, 1444.0], [27.5, 1458.0], [27.6, 1458.0], [27.7, 1465.0], [27.8, 1465.0], [27.9, 1506.0], [28.0, 1506.0], [28.1, 1529.0], [28.2, 1529.0], [28.3, 1550.0], [28.4, 1550.0], [28.5, 1550.0], [28.6, 1574.0], [28.7, 1574.0], [28.8, 1578.0], [28.9, 1578.0], [29.0, 1621.0], [29.1, 1621.0], [29.2, 1637.0], [29.3, 1637.0], [29.4, 1637.0], [29.5, 1637.0], [29.6, 1658.0], [29.7, 1658.0], [29.8, 1673.0], [29.9, 1673.0], [30.0, 1683.0], [30.1, 1683.0], [30.2, 1743.0], [30.3, 1743.0], [30.4, 1753.0], [30.5, 1753.0], [30.6, 1784.0], [30.7, 1784.0], [30.8, 1801.0], [30.9, 1801.0], [31.0, 1807.0], [31.1, 1807.0], [31.2, 1824.0], [31.3, 1824.0], [31.4, 1827.0], [31.5, 1827.0], [31.6, 1857.0], [31.7, 1857.0], [31.8, 1890.0], [31.9, 1890.0], [32.0, 1891.0], [32.1, 1891.0], [32.2, 1911.0], [32.3, 1911.0], [32.4, 1933.0], [32.5, 1933.0], [32.6, 1942.0], [32.7, 1942.0], [32.8, 1964.0], [32.9, 1964.0], [33.0, 1977.0], [33.1, 1977.0], [33.2, 1984.0], [33.3, 1984.0], [33.4, 2003.0], [33.5, 2003.0], [33.6, 2018.0], [33.7, 2018.0], [33.8, 2049.0], [33.9, 2049.0], [34.0, 2123.0], [34.1, 2123.0], [34.2, 2159.0], [34.3, 2159.0], [34.4, 2163.0], [34.5, 2163.0], [34.6, 2164.0], [34.7, 2164.0], [34.8, 2234.0], [34.9, 2234.0], [35.0, 2237.0], [35.1, 2237.0], [35.2, 2264.0], [35.3, 2264.0], [35.4, 2298.0], [35.5, 2298.0], [35.6, 2306.0], [35.7, 2306.0], [35.8, 2338.0], [35.9, 2340.0], [36.0, 2340.0], [36.1, 2346.0], [36.2, 2346.0], [36.3, 2359.0], [36.4, 2359.0], [36.5, 2368.0], [36.6, 2368.0], [36.7, 2400.0], [36.8, 2400.0], [36.9, 2444.0], [37.0, 2444.0], [37.1, 2448.0], [37.2, 2448.0], [37.3, 2464.0], [37.4, 2464.0], [37.5, 2469.0], [37.6, 2469.0], [37.7, 2472.0], [37.8, 2472.0], [37.9, 2487.0], [38.0, 2487.0], [38.1, 2504.0], [38.2, 2504.0], [38.3, 2511.0], [38.4, 2511.0], [38.5, 2521.0], [38.6, 2521.0], [38.7, 2524.0], [38.8, 2524.0], [38.9, 2556.0], [39.0, 2556.0], [39.1, 2564.0], [39.2, 2564.0], [39.3, 2585.0], [39.4, 2585.0], [39.5, 2597.0], [39.6, 2597.0], [39.7, 2624.0], [39.8, 2624.0], [39.9, 2628.0], [40.0, 2628.0], [40.1, 2670.0], [40.2, 2670.0], [40.3, 2693.0], [40.4, 2693.0], [40.5, 2706.0], [40.6, 2706.0], [40.7, 2716.0], [40.8, 2716.0], [40.9, 2745.0], [41.0, 2745.0], [41.1, 2766.0], [41.2, 2766.0], [41.3, 2778.0], [41.4, 2778.0], [41.5, 2798.0], [41.6, 2798.0], [41.7, 2823.0], [41.8, 2823.0], [41.9, 2860.0], [42.0, 2860.0], [42.1, 2861.0], [42.2, 2861.0], [42.3, 2870.0], [42.4, 2870.0], [42.5, 2904.0], [42.6, 2904.0], [42.7, 2904.0], [42.8, 2904.0], [42.9, 2918.0], [43.0, 2939.0], [43.1, 2939.0], [43.2, 2980.0], [43.3, 2980.0], [43.4, 3076.0], [43.5, 3076.0], [43.6, 3562.0], [43.7, 3562.0], [43.8, 3624.0], [43.9, 3624.0], [44.0, 3661.0], [44.1, 3661.0], [44.2, 3706.0], [44.3, 3706.0], [44.4, 3707.0], [44.5, 3707.0], [44.6, 3713.0], [44.7, 3713.0], [44.8, 3785.0], [44.9, 3785.0], [45.0, 3791.0], [45.1, 3791.0], [45.2, 3814.0], [45.3, 3814.0], [45.4, 3845.0], [45.5, 3845.0], [45.6, 3860.0], [45.7, 3860.0], [45.8, 3871.0], [45.9, 3871.0], [46.0, 3895.0], [46.1, 3895.0], [46.2, 3921.0], [46.3, 3921.0], [46.4, 3941.0], [46.5, 3941.0], [46.6, 3946.0], [46.7, 3946.0], [46.8, 3956.0], [46.9, 3956.0], [47.0, 4084.0], [47.1, 4084.0], [47.2, 4139.0], [47.3, 4139.0], [47.4, 4161.0], [47.5, 4161.0], [47.6, 4162.0], [47.7, 4162.0], [47.8, 4182.0], [47.9, 4182.0], [48.0, 4203.0], [48.1, 4203.0], [48.2, 4246.0], [48.3, 4246.0], [48.4, 4276.0], [48.5, 4276.0], [48.6, 4287.0], [48.7, 4287.0], [48.8, 4336.0], [48.9, 4336.0], [49.0, 4347.0], [49.1, 4347.0], [49.2, 4378.0], [49.3, 4378.0], [49.4, 4386.0], [49.5, 4386.0], [49.6, 4413.0], [49.7, 4413.0], [49.8, 4442.0], [49.9, 4442.0], [50.0, 4450.0], [50.1, 4503.0], [50.2, 4503.0], [50.3, 4503.0], [50.4, 4503.0], [50.5, 4508.0], [50.6, 4508.0], [50.7, 4544.0], [50.8, 4544.0], [50.9, 4582.0], [51.0, 4582.0], [51.1, 4607.0], [51.2, 4607.0], [51.3, 4633.0], [51.4, 4633.0], [51.5, 4639.0], [51.6, 4639.0], [51.7, 4646.0], [51.8, 4646.0], [51.9, 4648.0], [52.0, 4648.0], [52.1, 4673.0], [52.2, 4673.0], [52.3, 4727.0], [52.4, 4727.0], [52.5, 4786.0], [52.6, 4786.0], [52.7, 4809.0], [52.8, 4809.0], [52.9, 4832.0], [53.0, 4832.0], [53.1, 4846.0], [53.2, 4846.0], [53.3, 4856.0], [53.4, 4856.0], [53.5, 4871.0], [53.6, 4871.0], [53.7, 4927.0], [53.8, 4927.0], [53.9, 4940.0], [54.0, 4940.0], [54.1, 4954.0], [54.2, 4954.0], [54.3, 4962.0], [54.4, 4962.0], [54.5, 4969.0], [54.6, 4969.0], [54.7, 4975.0], [54.8, 4975.0], [54.9, 5084.0], [55.0, 5084.0], [55.1, 5099.0], [55.2, 5099.0], [55.3, 5101.0], [55.4, 5101.0], [55.5, 5115.0], [55.6, 5115.0], [55.7, 5118.0], [55.8, 5118.0], [55.9, 5125.0], [56.0, 5125.0], [56.1, 5126.0], [56.2, 5126.0], [56.3, 5128.0], [56.4, 5128.0], [56.5, 5130.0], [56.6, 5130.0], [56.7, 5135.0], [56.8, 5135.0], [56.9, 5154.0], [57.0, 5154.0], [57.1, 5174.0], [57.2, 5178.0], [57.3, 5178.0], [57.4, 5183.0], [57.5, 5183.0], [57.6, 5204.0], [57.7, 5204.0], [57.8, 5205.0], [57.9, 5205.0], [58.0, 5208.0], [58.1, 5208.0], [58.2, 5209.0], [58.3, 5209.0], [58.4, 5213.0], [58.5, 5213.0], [58.6, 5217.0], [58.7, 5217.0], [58.8, 5230.0], [58.9, 5230.0], [59.0, 5232.0], [59.1, 5232.0], [59.2, 5235.0], [59.3, 5235.0], [59.4, 5246.0], [59.5, 5246.0], [59.6, 5248.0], [59.7, 5248.0], [59.8, 5256.0], [59.9, 5256.0], [60.0, 5257.0], [60.1, 5257.0], [60.2, 5257.0], [60.3, 5257.0], [60.4, 5259.0], [60.5, 5259.0], [60.6, 5260.0], [60.7, 5260.0], [60.8, 5264.0], [60.9, 5264.0], [61.0, 5265.0], [61.1, 5265.0], [61.2, 5266.0], [61.3, 5266.0], [61.4, 5267.0], [61.5, 5267.0], [61.6, 5268.0], [61.7, 5268.0], [61.8, 5269.0], [61.9, 5269.0], [62.0, 5281.0], [62.1, 5281.0], [62.2, 5298.0], [62.3, 5298.0], [62.4, 5416.0], [62.5, 5416.0], [62.6, 5419.0], [62.7, 5419.0], [62.8, 5422.0], [62.9, 5422.0], [63.0, 5442.0], [63.1, 5442.0], [63.2, 5449.0], [63.3, 5449.0], [63.4, 5493.0], [63.5, 5493.0], [63.6, 5523.0], [63.7, 5523.0], [63.8, 5546.0], [63.9, 5546.0], [64.0, 5560.0], [64.1, 5560.0], [64.2, 5565.0], [64.3, 5603.0], [64.4, 5603.0], [64.5, 5626.0], [64.6, 5626.0], [64.7, 5627.0], [64.8, 5627.0], [64.9, 5637.0], [65.0, 5637.0], [65.1, 5647.0], [65.2, 5647.0], [65.3, 5650.0], [65.4, 5650.0], [65.5, 5666.0], [65.6, 5666.0], [65.7, 5673.0], [65.8, 5673.0], [65.9, 5746.0], [66.0, 5746.0], [66.1, 5759.0], [66.2, 5759.0], [66.3, 5772.0], [66.4, 5772.0], [66.5, 5780.0], [66.6, 5780.0], [66.7, 5798.0], [66.8, 5798.0], [66.9, 5801.0], [67.0, 5801.0], [67.1, 5805.0], [67.2, 5805.0], [67.3, 5814.0], [67.4, 5814.0], [67.5, 5825.0], [67.6, 5825.0], [67.7, 5840.0], [67.8, 5840.0], [67.9, 5847.0], [68.0, 5847.0], [68.1, 5862.0], [68.2, 5862.0], [68.3, 5868.0], [68.4, 5868.0], [68.5, 5887.0], [68.6, 5887.0], [68.7, 5894.0], [68.8, 5894.0], [68.9, 5899.0], [69.0, 5899.0], [69.1, 5910.0], [69.2, 5910.0], [69.3, 5919.0], [69.4, 5919.0], [69.5, 5932.0], [69.6, 5932.0], [69.7, 5947.0], [69.8, 5947.0], [69.9, 5955.0], [70.0, 5955.0], [70.1, 5996.0], [70.2, 5996.0], [70.3, 6004.0], [70.4, 6004.0], [70.5, 6006.0], [70.6, 6006.0], [70.7, 6016.0], [70.8, 6016.0], [70.9, 6036.0], [71.0, 6036.0], [71.1, 6055.0], [71.2, 6055.0], [71.3, 6074.0], [71.4, 6074.0], [71.5, 6076.0], [71.6, 6079.0], [71.7, 6079.0], [71.8, 6142.0], [71.9, 6142.0], [72.0, 6155.0], [72.1, 6155.0], [72.2, 6193.0], [72.3, 6193.0], [72.4, 6238.0], [72.5, 6238.0], [72.6, 6255.0], [72.7, 6255.0], [72.8, 6262.0], [72.9, 6262.0], [73.0, 6300.0], [73.1, 6300.0], [73.2, 6311.0], [73.3, 6311.0], [73.4, 6315.0], [73.5, 6315.0], [73.6, 6342.0], [73.7, 6342.0], [73.8, 6348.0], [73.9, 6348.0], [74.0, 6353.0], [74.1, 6353.0], [74.2, 6377.0], [74.3, 6377.0], [74.4, 6389.0], [74.5, 6389.0], [74.6, 6488.0], [74.7, 6488.0], [74.8, 6524.0], [74.9, 6524.0], [75.0, 6589.0], [75.1, 6589.0], [75.2, 6606.0], [75.3, 6606.0], [75.4, 6641.0], [75.5, 6641.0], [75.6, 6655.0], [75.7, 6655.0], [75.8, 6656.0], [75.9, 6656.0], [76.0, 6665.0], [76.1, 6665.0], [76.2, 6671.0], [76.3, 6671.0], [76.4, 6701.0], [76.5, 6701.0], [76.6, 6712.0], [76.7, 6712.0], [76.8, 6737.0], [76.9, 6737.0], [77.0, 6776.0], [77.1, 6776.0], [77.2, 6780.0], [77.3, 6780.0], [77.4, 6786.0], [77.5, 6786.0], [77.6, 6787.0], [77.7, 6787.0], [77.8, 6803.0], [77.9, 6803.0], [78.0, 6873.0], [78.1, 6873.0], [78.2, 6884.0], [78.3, 6884.0], [78.4, 6888.0], [78.5, 6888.0], [78.6, 6917.0], [78.7, 6973.0], [78.8, 6973.0], [78.9, 7082.0], [79.0, 7082.0], [79.1, 7350.0], [79.2, 7350.0], [79.3, 7428.0], [79.4, 7428.0], [79.5, 7446.0], [79.6, 7446.0], [79.7, 7458.0], [79.8, 7458.0], [79.9, 7484.0], [80.0, 7484.0], [80.1, 7555.0], [80.2, 7555.0], [80.3, 7556.0], [80.4, 7556.0], [80.5, 7625.0], [80.6, 7625.0], [80.7, 7664.0], [80.8, 7664.0], [80.9, 7691.0], [81.0, 7691.0], [81.1, 7726.0], [81.2, 7726.0], [81.3, 7825.0], [81.4, 7825.0], [81.5, 7842.0], [81.6, 7842.0], [81.7, 7860.0], [81.8, 7860.0], [81.9, 7867.0], [82.0, 7867.0], [82.1, 7873.0], [82.2, 7873.0], [82.3, 7924.0], [82.4, 7924.0], [82.5, 7951.0], [82.6, 7951.0], [82.7, 7988.0], [82.8, 7988.0], [82.9, 8005.0], [83.0, 8005.0], [83.1, 8013.0], [83.2, 8013.0], [83.3, 8024.0], [83.4, 8024.0], [83.5, 8027.0], [83.6, 8027.0], [83.7, 8030.0], [83.8, 8030.0], [83.9, 8043.0], [84.0, 8043.0], [84.1, 8062.0], [84.2, 8062.0], [84.3, 8063.0], [84.4, 8063.0], [84.5, 8069.0], [84.6, 8069.0], [84.7, 8089.0], [84.8, 8089.0], [84.9, 8101.0], [85.0, 8101.0], [85.1, 8109.0], [85.2, 8109.0], [85.3, 8125.0], [85.4, 8125.0], [85.5, 8142.0], [85.6, 8142.0], [85.7, 8170.0], [85.8, 8170.0], [85.9, 8170.0], [86.0, 8189.0], [86.1, 8189.0], [86.2, 8199.0], [86.3, 8199.0], [86.4, 8204.0], [86.5, 8204.0], [86.6, 8242.0], [86.7, 8242.0], [86.8, 8247.0], [86.9, 8247.0], [87.0, 8334.0], [87.1, 8334.0], [87.2, 8354.0], [87.3, 8354.0], [87.4, 8464.0], [87.5, 8464.0], [87.6, 8555.0], [87.7, 8555.0], [87.8, 8557.0], [87.9, 8557.0], [88.0, 8575.0], [88.1, 8575.0], [88.2, 8583.0], [88.3, 8583.0], [88.4, 8596.0], [88.5, 8596.0], [88.6, 8613.0], [88.7, 8613.0], [88.8, 8698.0], [88.9, 8698.0], [89.0, 8809.0], [89.1, 8809.0], [89.2, 9076.0], [89.3, 9076.0], [89.4, 9199.0], [89.5, 9199.0], [89.6, 9224.0], [89.7, 9224.0], [89.8, 9258.0], [89.9, 9258.0], [90.0, 9292.0], [90.1, 9292.0], [90.2, 9346.0], [90.3, 9346.0], [90.4, 9356.0], [90.5, 9356.0], [90.6, 9457.0], [90.7, 9457.0], [90.8, 9519.0], [90.9, 9519.0], [91.0, 9531.0], [91.1, 9531.0], [91.2, 9580.0], [91.3, 9580.0], [91.4, 9581.0], [91.5, 9581.0], [91.6, 9625.0], [91.7, 9625.0], [91.8, 9652.0], [91.9, 9652.0], [92.0, 9712.0], [92.1, 9712.0], [92.2, 9727.0], [92.3, 9727.0], [92.4, 9804.0], [92.5, 9804.0], [92.6, 9824.0], [92.7, 9824.0], [92.8, 9843.0], [92.9, 9872.0], [93.0, 9872.0], [93.1, 9885.0], [93.2, 9885.0], [93.3, 9887.0], [93.4, 9887.0], [93.5, 9947.0], [93.6, 9947.0], [93.7, 9955.0], [93.8, 9955.0], [93.9, 9958.0], [94.0, 9958.0], [94.1, 9963.0], [94.2, 9963.0], [94.3, 9973.0], [94.4, 9973.0], [94.5, 9998.0], [94.6, 9998.0], [94.7, 10007.0], [94.8, 10007.0], [94.9, 10008.0], [95.0, 10008.0], [95.1, 10009.0], [95.2, 10009.0], [95.3, 10011.0], [95.4, 10011.0], [95.5, 10030.0], [95.6, 10030.0], [95.7, 10033.0], [95.8, 10033.0], [95.9, 10079.0], [96.0, 10079.0], [96.1, 10136.0], [96.2, 10136.0], [96.3, 10141.0], [96.4, 10141.0], [96.5, 10143.0], [96.6, 10143.0], [96.7, 10152.0], [96.8, 10152.0], [96.9, 10163.0], [97.0, 10163.0], [97.1, 10167.0], [97.2, 10167.0], [97.3, 10192.0], [97.4, 10192.0], [97.5, 10194.0], [97.6, 10194.0], [97.7, 10195.0], [97.8, 10195.0], [97.9, 10202.0], [98.0, 10202.0], [98.1, 10205.0], [98.2, 10205.0], [98.3, 10208.0], [98.4, 10208.0], [98.5, 10216.0], [98.6, 10216.0], [98.7, 10225.0], [98.8, 10225.0], [98.9, 10236.0], [99.0, 10236.0], [99.1, 10240.0], [99.2, 10240.0], [99.3, 10368.0], [99.4, 10368.0], [99.5, 10504.0], [99.6, 10504.0], [99.7, 10674.0], [99.8, 10674.0], [99.9, 10681.0], [100.0, 10681.0]], "isOverall": false, "label": "contact Request", "isController": false}, {"data": [[0.0, 384.0], [0.1, 384.0], [0.2, 395.0], [0.3, 395.0], [0.4, 396.0], [0.5, 396.0], [0.6, 398.0], [0.7, 398.0], [0.8, 403.0], [0.9, 403.0], [1.0, 404.0], [1.1, 404.0], [1.2, 406.0], [1.3, 406.0], [1.4, 416.0], [1.5, 416.0], [1.6, 417.0], [1.7, 417.0], [1.8, 419.0], [1.9, 419.0], [2.0, 420.0], [2.1, 420.0], [2.2, 421.0], [2.3, 421.0], [2.4, 421.0], [2.5, 421.0], [2.6, 421.0], [2.7, 421.0], [2.8, 422.0], [2.9, 422.0], [3.0, 422.0], [3.1, 422.0], [3.2, 424.0], [3.3, 424.0], [3.4, 424.0], [3.5, 424.0], [3.6, 428.0], [3.7, 428.0], [3.8, 428.0], [3.9, 428.0], [4.0, 428.0], [4.1, 428.0], [4.2, 429.0], [4.3, 429.0], [4.4, 429.0], [4.5, 429.0], [4.6, 429.0], [4.7, 429.0], [4.8, 430.0], [4.9, 430.0], [5.0, 430.0], [5.1, 430.0], [5.2, 431.0], [5.3, 431.0], [5.4, 431.0], [5.5, 431.0], [5.6, 432.0], [5.7, 432.0], [5.8, 434.0], [5.9, 434.0], [6.0, 434.0], [6.1, 434.0], [6.2, 435.0], [6.3, 435.0], [6.4, 435.0], [6.5, 435.0], [6.6, 436.0], [6.7, 436.0], [6.8, 436.0], [6.9, 436.0], [7.0, 440.0], [7.1, 440.0], [7.2, 454.0], [7.3, 459.0], [7.4, 459.0], [7.5, 600.0], [7.6, 600.0], [7.7, 600.0], [7.8, 600.0], [7.9, 601.0], [8.0, 601.0], [8.1, 604.0], [8.2, 604.0], [8.3, 608.0], [8.4, 608.0], [8.5, 609.0], [8.6, 609.0], [8.7, 620.0], [8.8, 620.0], [8.9, 622.0], [9.0, 622.0], [9.1, 626.0], [9.2, 626.0], [9.3, 632.0], [9.4, 632.0], [9.5, 633.0], [9.6, 633.0], [9.7, 641.0], [9.8, 641.0], [9.9, 641.0], [10.0, 641.0], [10.1, 641.0], [10.2, 641.0], [10.3, 645.0], [10.4, 645.0], [10.5, 645.0], [10.6, 645.0], [10.7, 645.0], [10.8, 645.0], [10.9, 647.0], [11.0, 647.0], [11.1, 648.0], [11.2, 648.0], [11.3, 648.0], [11.4, 648.0], [11.5, 648.0], [11.6, 648.0], [11.7, 648.0], [11.8, 648.0], [11.9, 649.0], [12.0, 649.0], [12.1, 649.0], [12.2, 649.0], [12.3, 650.0], [12.4, 650.0], [12.5, 655.0], [12.6, 655.0], [12.7, 655.0], [12.8, 655.0], [12.9, 656.0], [13.0, 656.0], [13.1, 660.0], [13.2, 660.0], [13.3, 673.0], [13.4, 673.0], [13.5, 674.0], [13.6, 674.0], [13.7, 1296.0], [13.8, 1296.0], [13.9, 1387.0], [14.0, 1387.0], [14.1, 1394.0], [14.2, 1394.0], [14.3, 1411.0], [14.4, 1434.0], [14.5, 1434.0], [14.6, 1480.0], [14.7, 1480.0], [14.8, 1496.0], [14.9, 1496.0], [15.0, 1534.0], [15.1, 1534.0], [15.2, 1556.0], [15.3, 1556.0], [15.4, 1562.0], [15.5, 1562.0], [15.6, 1581.0], [15.7, 1581.0], [15.8, 1615.0], [15.9, 1615.0], [16.0, 1618.0], [16.1, 1618.0], [16.2, 1655.0], [16.3, 1655.0], [16.4, 1712.0], [16.5, 1712.0], [16.6, 1712.0], [16.7, 1712.0], [16.8, 1767.0], [16.9, 1767.0], [17.0, 1772.0], [17.1, 1772.0], [17.2, 1789.0], [17.3, 1789.0], [17.4, 1840.0], [17.5, 1840.0], [17.6, 1850.0], [17.7, 1850.0], [17.8, 1859.0], [17.9, 1859.0], [18.0, 1884.0], [18.1, 1884.0], [18.2, 1906.0], [18.3, 1906.0], [18.4, 1930.0], [18.5, 1930.0], [18.6, 1936.0], [18.7, 1936.0], [18.8, 1974.0], [18.9, 1974.0], [19.0, 1983.0], [19.1, 1983.0], [19.2, 2009.0], [19.3, 2009.0], [19.4, 2019.0], [19.5, 2019.0], [19.6, 2033.0], [19.7, 2033.0], [19.8, 2052.0], [19.9, 2052.0], [20.0, 2067.0], [20.1, 2067.0], [20.2, 2104.0], [20.3, 2104.0], [20.4, 2128.0], [20.5, 2128.0], [20.6, 2138.0], [20.7, 2138.0], [20.8, 2175.0], [20.9, 2175.0], [21.0, 2178.0], [21.1, 2178.0], [21.2, 2179.0], [21.3, 2179.0], [21.4, 2208.0], [21.5, 2234.0], [21.6, 2234.0], [21.7, 2270.0], [21.8, 2270.0], [21.9, 2308.0], [22.0, 2308.0], [22.1, 2311.0], [22.2, 2311.0], [22.3, 2316.0], [22.4, 2316.0], [22.5, 2329.0], [22.6, 2329.0], [22.7, 2417.0], [22.8, 2417.0], [22.9, 2457.0], [23.0, 2457.0], [23.1, 2471.0], [23.2, 2471.0], [23.3, 2504.0], [23.4, 2504.0], [23.5, 2541.0], [23.6, 2541.0], [23.7, 2551.0], [23.8, 2551.0], [23.9, 2598.0], [24.0, 2598.0], [24.1, 2604.0], [24.2, 2604.0], [24.3, 2638.0], [24.4, 2638.0], [24.5, 2639.0], [24.6, 2639.0], [24.7, 2709.0], [24.8, 2709.0], [24.9, 2721.0], [25.0, 2721.0], [25.1, 2763.0], [25.2, 2763.0], [25.3, 2766.0], [25.4, 2766.0], [25.5, 2795.0], [25.6, 2795.0], [25.7, 2840.0], [25.8, 2840.0], [25.9, 2878.0], [26.0, 2878.0], [26.1, 2940.0], [26.2, 2940.0], [26.3, 2964.0], [26.4, 2964.0], [26.5, 2986.0], [26.6, 2986.0], [26.7, 3013.0], [26.8, 3013.0], [26.9, 3031.0], [27.0, 3031.0], [27.1, 3089.0], [27.2, 3089.0], [27.3, 3106.0], [27.4, 3106.0], [27.5, 3116.0], [27.6, 3116.0], [27.7, 3188.0], [27.8, 3188.0], [27.9, 3197.0], [28.0, 3197.0], [28.1, 3209.0], [28.2, 3209.0], [28.3, 3321.0], [28.4, 3321.0], [28.5, 3325.0], [28.6, 3347.0], [28.7, 3347.0], [28.8, 3350.0], [28.9, 3350.0], [29.0, 3360.0], [29.1, 3360.0], [29.2, 3422.0], [29.3, 3422.0], [29.4, 3435.0], [29.5, 3435.0], [29.6, 3438.0], [29.7, 3438.0], [29.8, 3468.0], [29.9, 3468.0], [30.0, 3516.0], [30.1, 3516.0], [30.2, 3525.0], [30.3, 3525.0], [30.4, 3581.0], [30.5, 3581.0], [30.6, 3600.0], [30.7, 3600.0], [30.8, 3610.0], [30.9, 3610.0], [31.0, 3625.0], [31.1, 3625.0], [31.2, 3637.0], [31.3, 3637.0], [31.4, 3683.0], [31.5, 3683.0], [31.6, 3733.0], [31.7, 3733.0], [31.8, 3734.0], [31.9, 3734.0], [32.0, 3753.0], [32.1, 3753.0], [32.2, 3778.0], [32.3, 3778.0], [32.4, 3792.0], [32.5, 3792.0], [32.6, 3802.0], [32.7, 3802.0], [32.8, 3845.0], [32.9, 3845.0], [33.0, 3881.0], [33.1, 3881.0], [33.2, 3891.0], [33.3, 3891.0], [33.4, 3896.0], [33.5, 3896.0], [33.6, 3957.0], [33.7, 3957.0], [33.8, 3965.0], [33.9, 3965.0], [34.0, 3986.0], [34.1, 3986.0], [34.2, 4037.0], [34.3, 4037.0], [34.4, 4065.0], [34.5, 4065.0], [34.6, 4081.0], [34.7, 4081.0], [34.8, 4091.0], [34.9, 4091.0], [35.0, 4100.0], [35.1, 4100.0], [35.2, 4127.0], [35.3, 4127.0], [35.4, 4147.0], [35.5, 4147.0], [35.6, 4183.0], [35.7, 4183.0], [35.8, 4196.0], [35.9, 4214.0], [36.0, 4214.0], [36.1, 4240.0], [36.2, 4240.0], [36.3, 4278.0], [36.4, 4278.0], [36.5, 4286.0], [36.6, 4286.0], [36.7, 4301.0], [36.8, 4301.0], [36.9, 4316.0], [37.0, 4316.0], [37.1, 4359.0], [37.2, 4359.0], [37.3, 4392.0], [37.4, 4392.0], [37.5, 4399.0], [37.6, 4399.0], [37.7, 4408.0], [37.8, 4408.0], [37.9, 4447.0], [38.0, 4447.0], [38.1, 4464.0], [38.2, 4464.0], [38.3, 4476.0], [38.4, 4476.0], [38.5, 4506.0], [38.6, 4506.0], [38.7, 4635.0], [38.8, 4635.0], [38.9, 4641.0], [39.0, 4641.0], [39.1, 4652.0], [39.2, 4652.0], [39.3, 4653.0], [39.4, 4653.0], [39.5, 4700.0], [39.6, 4700.0], [39.7, 4718.0], [39.8, 4718.0], [39.9, 4732.0], [40.0, 4732.0], [40.1, 4769.0], [40.2, 4769.0], [40.3, 4782.0], [40.4, 4782.0], [40.5, 4791.0], [40.6, 4791.0], [40.7, 4853.0], [40.8, 4853.0], [40.9, 4887.0], [41.0, 4887.0], [41.1, 4891.0], [41.2, 4891.0], [41.3, 4910.0], [41.4, 4910.0], [41.5, 4935.0], [41.6, 4935.0], [41.7, 4937.0], [41.8, 4937.0], [41.9, 4983.0], [42.0, 4983.0], [42.1, 5035.0], [42.2, 5035.0], [42.3, 5047.0], [42.4, 5047.0], [42.5, 5069.0], [42.6, 5069.0], [42.7, 5090.0], [42.8, 5090.0], [42.9, 5156.0], [43.0, 5212.0], [43.1, 5212.0], [43.2, 5217.0], [43.3, 5217.0], [43.4, 5237.0], [43.5, 5237.0], [43.6, 5355.0], [43.7, 5355.0], [43.8, 5365.0], [43.9, 5365.0], [44.0, 5443.0], [44.1, 5443.0], [44.2, 5474.0], [44.3, 5474.0], [44.4, 5480.0], [44.5, 5480.0], [44.6, 5494.0], [44.7, 5494.0], [44.8, 5543.0], [44.9, 5543.0], [45.0, 5589.0], [45.1, 5589.0], [45.2, 5619.0], [45.3, 5619.0], [45.4, 5667.0], [45.5, 5667.0], [45.6, 5680.0], [45.7, 5680.0], [45.8, 5726.0], [45.9, 5726.0], [46.0, 5729.0], [46.1, 5729.0], [46.2, 5753.0], [46.3, 5753.0], [46.4, 5754.0], [46.5, 5754.0], [46.6, 5780.0], [46.7, 5780.0], [46.8, 5796.0], [46.9, 5796.0], [47.0, 5836.0], [47.1, 5836.0], [47.2, 5839.0], [47.3, 5839.0], [47.4, 5859.0], [47.5, 5859.0], [47.6, 5865.0], [47.7, 5865.0], [47.8, 5878.0], [47.9, 5878.0], [48.0, 5928.0], [48.1, 5928.0], [48.2, 5952.0], [48.3, 5952.0], [48.4, 5979.0], [48.5, 5979.0], [48.6, 5984.0], [48.7, 5984.0], [48.8, 6017.0], [48.9, 6017.0], [49.0, 6017.0], [49.1, 6017.0], [49.2, 6019.0], [49.3, 6019.0], [49.4, 6084.0], [49.5, 6084.0], [49.6, 6089.0], [49.7, 6089.0], [49.8, 6102.0], [49.9, 6102.0], [50.0, 6159.0], [50.1, 6174.0], [50.2, 6174.0], [50.3, 6189.0], [50.4, 6189.0], [50.5, 6229.0], [50.6, 6229.0], [50.7, 6278.0], [50.8, 6278.0], [50.9, 6305.0], [51.0, 6305.0], [51.1, 6333.0], [51.2, 6333.0], [51.3, 6378.0], [51.4, 6378.0], [51.5, 6411.0], [51.6, 6411.0], [51.7, 6417.0], [51.8, 6417.0], [51.9, 6451.0], [52.0, 6451.0], [52.1, 6482.0], [52.2, 6482.0], [52.3, 6484.0], [52.4, 6484.0], [52.5, 6485.0], [52.6, 6485.0], [52.7, 6560.0], [52.8, 6560.0], [52.9, 6576.0], [53.0, 6576.0], [53.1, 6586.0], [53.2, 6586.0], [53.3, 6618.0], [53.4, 6618.0], [53.5, 6676.0], [53.6, 6676.0], [53.7, 6686.0], [53.8, 6686.0], [53.9, 6716.0], [54.0, 6716.0], [54.1, 6761.0], [54.2, 6761.0], [54.3, 6772.0], [54.4, 6772.0], [54.5, 6793.0], [54.6, 6793.0], [54.7, 6798.0], [54.8, 6798.0], [54.9, 6886.0], [55.0, 6886.0], [55.1, 6891.0], [55.2, 6891.0], [55.3, 6904.0], [55.4, 6904.0], [55.5, 6955.0], [55.6, 6955.0], [55.7, 6983.0], [55.8, 6983.0], [55.9, 7007.0], [56.0, 7007.0], [56.1, 7022.0], [56.2, 7022.0], [56.3, 7047.0], [56.4, 7047.0], [56.5, 7074.0], [56.6, 7074.0], [56.7, 7079.0], [56.8, 7079.0], [56.9, 7086.0], [57.0, 7086.0], [57.1, 7133.0], [57.2, 7177.0], [57.3, 7177.0], [57.4, 7213.0], [57.5, 7213.0], [57.6, 7242.0], [57.7, 7242.0], [57.8, 7250.0], [57.9, 7250.0], [58.0, 7257.0], [58.1, 7257.0], [58.2, 7322.0], [58.3, 7322.0], [58.4, 7326.0], [58.5, 7326.0], [58.6, 7329.0], [58.7, 7329.0], [58.8, 7346.0], [58.9, 7346.0], [59.0, 7372.0], [59.1, 7372.0], [59.2, 7424.0], [59.3, 7424.0], [59.4, 7448.0], [59.5, 7448.0], [59.6, 7507.0], [59.7, 7507.0], [59.8, 7509.0], [59.9, 7509.0], [60.0, 7517.0], [60.1, 7517.0], [60.2, 7522.0], [60.3, 7522.0], [60.4, 7539.0], [60.5, 7539.0], [60.6, 7541.0], [60.7, 7541.0], [60.8, 7584.0], [60.9, 7584.0], [61.0, 7586.0], [61.1, 7586.0], [61.2, 7598.0], [61.3, 7598.0], [61.4, 7603.0], [61.5, 7603.0], [61.6, 7653.0], [61.7, 7653.0], [61.8, 7666.0], [61.9, 7666.0], [62.0, 7694.0], [62.1, 7694.0], [62.2, 7729.0], [62.3, 7729.0], [62.4, 7756.0], [62.5, 7756.0], [62.6, 7766.0], [62.7, 7766.0], [62.8, 7790.0], [62.9, 7790.0], [63.0, 7838.0], [63.1, 7838.0], [63.2, 7872.0], [63.3, 7872.0], [63.4, 7879.0], [63.5, 7879.0], [63.6, 7910.0], [63.7, 7910.0], [63.8, 7970.0], [63.9, 7970.0], [64.0, 7971.0], [64.1, 7971.0], [64.2, 8225.0], [64.3, 8372.0], [64.4, 8372.0], [64.5, 8670.0], [64.6, 8670.0], [64.7, 8996.0], [64.8, 8996.0], [64.9, 9009.0], [65.0, 9009.0], [65.1, 9071.0], [65.2, 9071.0], [65.3, 9251.0], [65.4, 9251.0], [65.5, 9352.0], [65.6, 9352.0], [65.7, 9366.0], [65.8, 9366.0], [65.9, 9376.0], [66.0, 9376.0], [66.1, 9382.0], [66.2, 9382.0], [66.3, 9383.0], [66.4, 9383.0], [66.5, 9385.0], [66.6, 9385.0], [66.7, 9392.0], [66.8, 9392.0], [66.9, 9400.0], [67.0, 9400.0], [67.1, 9410.0], [67.2, 9410.0], [67.3, 9410.0], [67.4, 9410.0], [67.5, 9414.0], [67.6, 9414.0], [67.7, 9419.0], [67.8, 9419.0], [67.9, 9423.0], [68.0, 9423.0], [68.1, 9430.0], [68.2, 9430.0], [68.3, 9448.0], [68.4, 9448.0], [68.5, 9449.0], [68.6, 9449.0], [68.7, 9449.0], [68.8, 9449.0], [68.9, 9454.0], [69.0, 9454.0], [69.1, 9455.0], [69.2, 9455.0], [69.3, 9460.0], [69.4, 9460.0], [69.5, 9460.0], [69.6, 9460.0], [69.7, 9469.0], [69.8, 9469.0], [69.9, 9472.0], [70.0, 9472.0], [70.1, 9477.0], [70.2, 9477.0], [70.3, 9487.0], [70.4, 9487.0], [70.5, 9488.0], [70.6, 9488.0], [70.7, 9491.0], [70.8, 9491.0], [70.9, 9492.0], [71.0, 9492.0], [71.1, 9495.0], [71.2, 9495.0], [71.3, 9498.0], [71.4, 9498.0], [71.5, 9504.0], [71.6, 9508.0], [71.7, 9508.0], [71.8, 9509.0], [71.9, 9509.0], [72.0, 9514.0], [72.1, 9514.0], [72.2, 9520.0], [72.3, 9520.0], [72.4, 9520.0], [72.5, 9520.0], [72.6, 9520.0], [72.7, 9520.0], [72.8, 9522.0], [72.9, 9522.0], [73.0, 9526.0], [73.1, 9526.0], [73.2, 9529.0], [73.3, 9529.0], [73.4, 9537.0], [73.5, 9537.0], [73.6, 9542.0], [73.7, 9542.0], [73.8, 9544.0], [73.9, 9544.0], [74.0, 9549.0], [74.1, 9549.0], [74.2, 9549.0], [74.3, 9549.0], [74.4, 9550.0], [74.5, 9550.0], [74.6, 9552.0], [74.7, 9552.0], [74.8, 9552.0], [74.9, 9552.0], [75.0, 9555.0], [75.1, 9555.0], [75.2, 9560.0], [75.3, 9560.0], [75.4, 9560.0], [75.5, 9560.0], [75.6, 9572.0], [75.7, 9572.0], [75.8, 9576.0], [75.9, 9576.0], [76.0, 9580.0], [76.1, 9580.0], [76.2, 9588.0], [76.3, 9588.0], [76.4, 9588.0], [76.5, 9588.0], [76.6, 9590.0], [76.7, 9590.0], [76.8, 9594.0], [76.9, 9594.0], [77.0, 9611.0], [77.1, 9611.0], [77.2, 9616.0], [77.3, 9616.0], [77.4, 9620.0], [77.5, 9620.0], [77.6, 9640.0], [77.7, 9640.0], [77.8, 9642.0], [77.9, 9642.0], [78.0, 9643.0], [78.1, 9643.0], [78.2, 9643.0], [78.3, 9643.0], [78.4, 9658.0], [78.5, 9658.0], [78.6, 9669.0], [78.7, 9680.0], [78.8, 9680.0], [78.9, 9697.0], [79.0, 9697.0], [79.1, 9706.0], [79.2, 9706.0], [79.3, 9713.0], [79.4, 9713.0], [79.5, 9713.0], [79.6, 9713.0], [79.7, 9720.0], [79.8, 9720.0], [79.9, 9723.0], [80.0, 9723.0], [80.1, 9742.0], [80.2, 9742.0], [80.3, 9772.0], [80.4, 9772.0], [80.5, 9775.0], [80.6, 9775.0], [80.7, 9786.0], [80.8, 9786.0], [80.9, 9792.0], [81.0, 9792.0], [81.1, 9830.0], [81.2, 9830.0], [81.3, 9835.0], [81.4, 9835.0], [81.5, 9847.0], [81.6, 9847.0], [81.7, 9862.0], [81.8, 9862.0], [81.9, 9896.0], [82.0, 9896.0], [82.1, 9915.0], [82.2, 9915.0], [82.3, 9924.0], [82.4, 9924.0], [82.5, 9967.0], [82.6, 9967.0], [82.7, 9968.0], [82.8, 9968.0], [82.9, 9978.0], [83.0, 9978.0], [83.1, 9987.0], [83.2, 9987.0], [83.3, 9992.0], [83.4, 9992.0], [83.5, 10006.0], [83.6, 10006.0], [83.7, 10008.0], [83.8, 10008.0], [83.9, 10105.0], [84.0, 10105.0], [84.1, 10118.0], [84.2, 10118.0], [84.3, 10124.0], [84.4, 10124.0], [84.5, 10152.0], [84.6, 10152.0], [84.7, 10168.0], [84.8, 10168.0], [84.9, 10193.0], [85.0, 10193.0], [85.1, 10237.0], [85.2, 10237.0], [85.3, 10268.0], [85.4, 10268.0], [85.5, 10334.0], [85.6, 10334.0], [85.7, 10337.0], [85.8, 10355.0], [85.9, 10355.0], [86.0, 10380.0], [86.1, 10380.0], [86.2, 10389.0], [86.3, 10389.0], [86.4, 10452.0], [86.5, 10452.0], [86.6, 10453.0], [86.7, 10453.0], [86.8, 10470.0], [86.9, 10470.0], [87.0, 10476.0], [87.1, 10476.0], [87.2, 10488.0], [87.3, 10488.0], [87.4, 10496.0], [87.5, 10496.0], [87.6, 10506.0], [87.7, 10506.0], [87.8, 10527.0], [87.9, 10527.0], [88.0, 10535.0], [88.1, 10535.0], [88.2, 10553.0], [88.3, 10553.0], [88.4, 10568.0], [88.5, 10568.0], [88.6, 10574.0], [88.7, 10574.0], [88.8, 10596.0], [88.9, 10596.0], [89.0, 10635.0], [89.1, 10635.0], [89.2, 10644.0], [89.3, 10644.0], [89.4, 10651.0], [89.5, 10651.0], [89.6, 10671.0], [89.7, 10671.0], [89.8, 10682.0], [89.9, 10682.0], [90.0, 10693.0], [90.1, 10693.0], [90.2, 10694.0], [90.3, 10694.0], [90.4, 10698.0], [90.5, 10698.0], [90.6, 10701.0], [90.7, 10701.0], [90.8, 10714.0], [90.9, 10714.0], [91.0, 10720.0], [91.1, 10720.0], [91.2, 10728.0], [91.3, 10728.0], [91.4, 10734.0], [91.5, 10734.0], [91.6, 10747.0], [91.7, 10747.0], [91.8, 10787.0], [91.9, 10787.0], [92.0, 10804.0], [92.1, 10804.0], [92.2, 10831.0], [92.3, 10831.0], [92.4, 10835.0], [92.5, 10835.0], [92.6, 10839.0], [92.7, 10839.0], [92.8, 10864.0], [92.9, 10880.0], [93.0, 10880.0], [93.1, 10895.0], [93.2, 10895.0], [93.3, 10902.0], [93.4, 10902.0], [93.5, 10903.0], [93.6, 10903.0], [93.7, 10906.0], [93.8, 10906.0], [93.9, 10922.0], [94.0, 10922.0], [94.1, 10938.0], [94.2, 10938.0], [94.3, 10947.0], [94.4, 10947.0], [94.5, 10948.0], [94.6, 10948.0], [94.7, 10954.0], [94.8, 10954.0], [94.9, 10960.0], [95.0, 10960.0], [95.1, 10962.0], [95.2, 10962.0], [95.3, 10972.0], [95.4, 10972.0], [95.5, 10973.0], [95.6, 10973.0], [95.7, 10977.0], [95.8, 10977.0], [95.9, 11003.0], [96.0, 11003.0], [96.1, 11011.0], [96.2, 11011.0], [96.3, 11018.0], [96.4, 11018.0], [96.5, 11030.0], [96.6, 11030.0], [96.7, 11038.0], [96.8, 11038.0], [96.9, 11039.0], [97.0, 11039.0], [97.1, 11068.0], [97.2, 11068.0], [97.3, 11081.0], [97.4, 11081.0], [97.5, 11109.0], [97.6, 11109.0], [97.7, 11113.0], [97.8, 11113.0], [97.9, 11120.0], [98.0, 11120.0], [98.1, 11140.0], [98.2, 11140.0], [98.3, 11141.0], [98.4, 11141.0], [98.5, 11142.0], [98.6, 11142.0], [98.7, 11153.0], [98.8, 11153.0], [98.9, 11157.0], [99.0, 11157.0], [99.1, 11158.0], [99.2, 11158.0], [99.3, 11164.0], [99.4, 11164.0], [99.5, 11186.0], [99.6, 11186.0], [99.7, 11208.0], [99.8, 11208.0], [99.9, 11223.0]], "isOverall": false, "label": "home Request", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 11.0], [19.5, 11.0], [19.6, 35.0], [19.7, 35.0], [19.8, 50.0], [19.9, 50.0], [20.0, 51.0], [20.1, 51.0], [20.2, 53.0], [20.3, 53.0], [20.4, 59.0], [20.5, 59.0], [20.6, 62.0], [20.7, 62.0], [20.8, 69.0], [20.9, 69.0], [21.0, 85.0], [21.1, 85.0], [21.2, 107.0], [21.3, 107.0], [21.4, 108.0], [21.5, 118.0], [21.6, 118.0], [21.7, 123.0], [21.8, 123.0], [21.9, 124.0], [22.0, 124.0], [22.1, 129.0], [22.2, 129.0], [22.3, 130.0], [22.4, 130.0], [22.5, 131.0], [22.6, 131.0], [22.7, 132.0], [22.8, 132.0], [22.9, 140.0], [23.0, 140.0], [23.1, 140.0], [23.2, 140.0], [23.3, 142.0], [23.4, 142.0], [23.5, 142.0], [23.6, 142.0], [23.7, 142.0], [23.8, 142.0], [23.9, 144.0], [24.0, 144.0], [24.1, 148.0], [24.2, 148.0], [24.3, 152.0], [24.4, 152.0], [24.5, 154.0], [24.6, 154.0], [24.7, 154.0], [24.8, 154.0], [24.9, 155.0], [25.0, 155.0], [25.1, 157.0], [25.2, 157.0], [25.3, 158.0], [25.4, 158.0], [25.5, 159.0], [25.6, 159.0], [25.7, 160.0], [25.8, 160.0], [25.9, 161.0], [26.0, 161.0], [26.1, 161.0], [26.2, 161.0], [26.3, 162.0], [26.4, 162.0], [26.5, 162.0], [26.6, 162.0], [26.7, 162.0], [26.8, 162.0], [26.9, 164.0], [27.0, 164.0], [27.1, 165.0], [27.2, 165.0], [27.3, 168.0], [27.4, 168.0], [27.5, 168.0], [27.6, 168.0], [27.7, 171.0], [27.8, 171.0], [27.9, 175.0], [28.0, 175.0], [28.1, 175.0], [28.2, 175.0], [28.3, 176.0], [28.4, 176.0], [28.5, 180.0], [28.6, 186.0], [28.7, 186.0], [28.8, 188.0], [28.9, 188.0], [29.0, 191.0], [29.1, 191.0], [29.2, 192.0], [29.3, 192.0], [29.4, 195.0], [29.5, 195.0], [29.6, 197.0], [29.7, 197.0], [29.8, 199.0], [29.9, 199.0], [30.0, 200.0], [30.1, 200.0], [30.2, 202.0], [30.3, 202.0], [30.4, 202.0], [30.5, 202.0], [30.6, 203.0], [30.7, 203.0], [30.8, 206.0], [30.9, 206.0], [31.0, 208.0], [31.1, 208.0], [31.2, 216.0], [31.3, 216.0], [31.4, 218.0], [31.5, 218.0], [31.6, 218.0], [31.7, 218.0], [31.8, 220.0], [31.9, 220.0], [32.0, 224.0], [32.1, 224.0], [32.2, 229.0], [32.3, 229.0], [32.4, 284.0], [32.5, 284.0], [32.6, 399.0], [32.7, 399.0], [32.8, 401.0], [32.9, 401.0], [33.0, 406.0], [33.1, 406.0], [33.2, 408.0], [33.3, 408.0], [33.4, 408.0], [33.5, 408.0], [33.6, 412.0], [33.7, 412.0], [33.8, 412.0], [33.9, 412.0], [34.0, 415.0], [34.1, 415.0], [34.2, 416.0], [34.3, 416.0], [34.4, 416.0], [34.5, 416.0], [34.6, 419.0], [34.7, 419.0], [34.8, 419.0], [34.9, 419.0], [35.0, 419.0], [35.1, 419.0], [35.2, 423.0], [35.3, 423.0], [35.4, 423.0], [35.5, 423.0], [35.6, 423.0], [35.7, 423.0], [35.8, 424.0], [35.9, 424.0], [36.0, 424.0], [36.1, 425.0], [36.2, 425.0], [36.3, 425.0], [36.4, 425.0], [36.5, 427.0], [36.6, 427.0], [36.7, 427.0], [36.8, 427.0], [36.9, 427.0], [37.0, 427.0], [37.1, 427.0], [37.2, 427.0], [37.3, 428.0], [37.4, 428.0], [37.5, 428.0], [37.6, 428.0], [37.7, 429.0], [37.8, 429.0], [37.9, 429.0], [38.0, 429.0], [38.1, 430.0], [38.2, 430.0], [38.3, 430.0], [38.4, 430.0], [38.5, 430.0], [38.6, 430.0], [38.7, 431.0], [38.8, 431.0], [38.9, 431.0], [39.0, 431.0], [39.1, 431.0], [39.2, 431.0], [39.3, 433.0], [39.4, 433.0], [39.5, 438.0], [39.6, 438.0], [39.7, 439.0], [39.8, 439.0], [39.9, 442.0], [40.0, 442.0], [40.1, 443.0], [40.2, 443.0], [40.3, 444.0], [40.4, 444.0], [40.5, 445.0], [40.6, 445.0], [40.7, 455.0], [40.8, 455.0], [40.9, 460.0], [41.0, 460.0], [41.1, 604.0], [41.2, 604.0], [41.3, 614.0], [41.4, 614.0], [41.5, 614.0], [41.6, 614.0], [41.7, 617.0], [41.8, 617.0], [41.9, 643.0], [42.0, 643.0], [42.1, 644.0], [42.2, 644.0], [42.3, 646.0], [42.4, 646.0], [42.5, 648.0], [42.6, 648.0], [42.7, 652.0], [42.8, 652.0], [42.9, 1630.0], [43.0, 1761.0], [43.1, 1761.0], [43.2, 1902.0], [43.3, 1902.0], [43.4, 1949.0], [43.5, 1949.0], [43.6, 2067.0], [43.7, 2067.0], [43.8, 2080.0], [43.9, 2080.0], [44.0, 2093.0], [44.1, 2093.0], [44.2, 2212.0], [44.3, 2212.0], [44.4, 2220.0], [44.5, 2220.0], [44.6, 2228.0], [44.7, 2228.0], [44.8, 2376.0], [44.9, 2376.0], [45.0, 2379.0], [45.1, 2379.0], [45.2, 2503.0], [45.3, 2503.0], [45.4, 2594.0], [45.5, 2594.0], [45.6, 2633.0], [45.7, 2633.0], [45.8, 2723.0], [45.9, 2723.0], [46.0, 2822.0], [46.1, 2822.0], [46.2, 2853.0], [46.3, 2853.0], [46.4, 2890.0], [46.5, 2890.0], [46.6, 2943.0], [46.7, 2943.0], [46.8, 3024.0], [46.9, 3024.0], [47.0, 3045.0], [47.1, 3045.0], [47.2, 3156.0], [47.3, 3156.0], [47.4, 3180.0], [47.5, 3180.0], [47.6, 3194.0], [47.7, 3194.0], [47.8, 3302.0], [47.9, 3302.0], [48.0, 3342.0], [48.1, 3342.0], [48.2, 3354.0], [48.3, 3354.0], [48.4, 3415.0], [48.5, 3415.0], [48.6, 3428.0], [48.7, 3428.0], [48.8, 3452.0], [48.9, 3452.0], [49.0, 3511.0], [49.1, 3511.0], [49.2, 3543.0], [49.3, 3543.0], [49.4, 3630.0], [49.5, 3630.0], [49.6, 3641.0], [49.7, 3641.0], [49.8, 3672.0], [49.9, 3672.0], [50.0, 3739.0], [50.1, 3778.0], [50.2, 3778.0], [50.3, 3811.0], [50.4, 3811.0], [50.5, 3829.0], [50.6, 3829.0], [50.7, 4047.0], [50.8, 4047.0], [50.9, 4057.0], [51.0, 4057.0], [51.1, 4132.0], [51.2, 4132.0], [51.3, 4147.0], [51.4, 4147.0], [51.5, 4181.0], [51.6, 4181.0], [51.7, 4257.0], [51.8, 4257.0], [51.9, 4390.0], [52.0, 4390.0], [52.1, 4425.0], [52.2, 4425.0], [52.3, 4491.0], [52.4, 4491.0], [52.5, 4686.0], [52.6, 4686.0], [52.7, 4717.0], [52.8, 4717.0], [52.9, 4842.0], [53.0, 4842.0], [53.1, 4941.0], [53.2, 4941.0], [53.3, 4986.0], [53.4, 4986.0], [53.5, 4993.0], [53.6, 4993.0], [53.7, 4999.0], [53.8, 4999.0], [53.9, 5165.0], [54.0, 5165.0], [54.1, 5197.0], [54.2, 5197.0], [54.3, 5219.0], [54.4, 5219.0], [54.5, 5320.0], [54.6, 5320.0], [54.7, 5334.0], [54.8, 5334.0], [54.9, 5456.0], [55.0, 5456.0], [55.1, 5471.0], [55.2, 5471.0], [55.3, 5579.0], [55.4, 5579.0], [55.5, 5701.0], [55.6, 5701.0], [55.7, 5725.0], [55.8, 5725.0], [55.9, 5779.0], [56.0, 5779.0], [56.1, 5855.0], [56.2, 5855.0], [56.3, 5956.0], [56.4, 5956.0], [56.5, 6009.0], [56.6, 6009.0], [56.7, 6055.0], [56.8, 6055.0], [56.9, 6128.0], [57.0, 6128.0], [57.1, 6130.0], [57.2, 6240.0], [57.3, 6240.0], [57.4, 6425.0], [57.5, 6425.0], [57.6, 6449.0], [57.7, 6449.0], [57.8, 6480.0], [57.9, 6480.0], [58.0, 6491.0], [58.1, 6491.0], [58.2, 6573.0], [58.3, 6573.0], [58.4, 6576.0], [58.5, 6576.0], [58.6, 6584.0], [58.7, 6584.0], [58.8, 6586.0], [58.9, 6586.0], [59.0, 6628.0], [59.1, 6628.0], [59.2, 6660.0], [59.3, 6660.0], [59.4, 6673.0], [59.5, 6673.0], [59.6, 6689.0], [59.7, 6689.0], [59.8, 6702.0], [59.9, 6702.0], [60.0, 6737.0], [60.1, 6737.0], [60.2, 6740.0], [60.3, 6740.0], [60.4, 6744.0], [60.5, 6744.0], [60.6, 6746.0], [60.7, 6746.0], [60.8, 6766.0], [60.9, 6766.0], [61.0, 6800.0], [61.1, 6800.0], [61.2, 6834.0], [61.3, 6834.0], [61.4, 6869.0], [61.5, 6869.0], [61.6, 6875.0], [61.7, 6875.0], [61.8, 6878.0], [61.9, 6878.0], [62.0, 6895.0], [62.1, 6895.0], [62.2, 6913.0], [62.3, 6913.0], [62.4, 6924.0], [62.5, 6924.0], [62.6, 6927.0], [62.7, 6927.0], [62.8, 6934.0], [62.9, 6934.0], [63.0, 6970.0], [63.1, 6970.0], [63.2, 6970.0], [63.3, 6970.0], [63.4, 6980.0], [63.5, 6980.0], [63.6, 7002.0], [63.7, 7002.0], [63.8, 7026.0], [63.9, 7026.0], [64.0, 7030.0], [64.1, 7030.0], [64.2, 7037.0], [64.3, 7045.0], [64.4, 7045.0], [64.5, 7061.0], [64.6, 7061.0], [64.7, 7062.0], [64.8, 7062.0], [64.9, 7071.0], [65.0, 7071.0], [65.1, 7077.0], [65.2, 7077.0], [65.3, 7082.0], [65.4, 7082.0], [65.5, 7087.0], [65.6, 7087.0], [65.7, 7089.0], [65.8, 7089.0], [65.9, 7098.0], [66.0, 7098.0], [66.1, 7109.0], [66.2, 7109.0], [66.3, 7125.0], [66.4, 7125.0], [66.5, 7135.0], [66.6, 7135.0], [66.7, 7141.0], [66.8, 7141.0], [66.9, 7154.0], [67.0, 7154.0], [67.1, 7160.0], [67.2, 7160.0], [67.3, 7163.0], [67.4, 7163.0], [67.5, 7182.0], [67.6, 7182.0], [67.7, 7229.0], [67.8, 7229.0], [67.9, 7238.0], [68.0, 7238.0], [68.1, 7402.0], [68.2, 7402.0], [68.3, 7414.0], [68.4, 7414.0], [68.5, 7437.0], [68.6, 7437.0], [68.7, 7511.0], [68.8, 7511.0], [68.9, 7521.0], [69.0, 7521.0], [69.1, 7542.0], [69.2, 7542.0], [69.3, 7552.0], [69.4, 7552.0], [69.5, 7553.0], [69.6, 7553.0], [69.7, 7557.0], [69.8, 7557.0], [69.9, 7564.0], [70.0, 7564.0], [70.1, 7577.0], [70.2, 7577.0], [70.3, 7585.0], [70.4, 7585.0], [70.5, 7615.0], [70.6, 7615.0], [70.7, 7646.0], [70.8, 7646.0], [70.9, 7668.0], [71.0, 7668.0], [71.1, 7692.0], [71.2, 7692.0], [71.3, 7707.0], [71.4, 7707.0], [71.5, 7713.0], [71.6, 7715.0], [71.7, 7715.0], [71.8, 7808.0], [71.9, 7808.0], [72.0, 7843.0], [72.1, 7843.0], [72.2, 7846.0], [72.3, 7846.0], [72.4, 7847.0], [72.5, 7847.0], [72.6, 7855.0], [72.7, 7855.0], [72.8, 7864.0], [72.9, 7864.0], [73.0, 7869.0], [73.1, 7869.0], [73.2, 7898.0], [73.3, 7898.0], [73.4, 7916.0], [73.5, 7916.0], [73.6, 7929.0], [73.7, 7929.0], [73.8, 7945.0], [73.9, 7945.0], [74.0, 8011.0], [74.1, 8011.0], [74.2, 8023.0], [74.3, 8023.0], [74.4, 8046.0], [74.5, 8046.0], [74.6, 8046.0], [74.7, 8046.0], [74.8, 8075.0], [74.9, 8075.0], [75.0, 8091.0], [75.1, 8091.0], [75.2, 8104.0], [75.3, 8104.0], [75.4, 8111.0], [75.5, 8111.0], [75.6, 8133.0], [75.7, 8133.0], [75.8, 8143.0], [75.9, 8143.0], [76.0, 8153.0], [76.1, 8153.0], [76.2, 8155.0], [76.3, 8155.0], [76.4, 8169.0], [76.5, 8169.0], [76.6, 8180.0], [76.7, 8180.0], [76.8, 8180.0], [76.9, 8180.0], [77.0, 8182.0], [77.1, 8182.0], [77.2, 8187.0], [77.3, 8187.0], [77.4, 8190.0], [77.5, 8190.0], [77.6, 8199.0], [77.7, 8199.0], [77.8, 8207.0], [77.9, 8207.0], [78.0, 8211.0], [78.1, 8211.0], [78.2, 8220.0], [78.3, 8220.0], [78.4, 8225.0], [78.5, 8225.0], [78.6, 8227.0], [78.7, 8227.0], [78.8, 8227.0], [78.9, 8228.0], [79.0, 8228.0], [79.1, 8229.0], [79.2, 8229.0], [79.3, 8231.0], [79.4, 8231.0], [79.5, 8235.0], [79.6, 8235.0], [79.7, 8240.0], [79.8, 8240.0], [79.9, 8240.0], [80.0, 8240.0], [80.1, 8240.0], [80.2, 8240.0], [80.3, 8242.0], [80.4, 8242.0], [80.5, 8244.0], [80.6, 8244.0], [80.7, 8244.0], [80.8, 8244.0], [80.9, 8244.0], [81.0, 8244.0], [81.1, 8245.0], [81.2, 8245.0], [81.3, 8248.0], [81.4, 8248.0], [81.5, 8249.0], [81.6, 8249.0], [81.7, 8252.0], [81.8, 8252.0], [81.9, 8252.0], [82.0, 8252.0], [82.1, 8258.0], [82.2, 8258.0], [82.3, 8261.0], [82.4, 8261.0], [82.5, 8262.0], [82.6, 8262.0], [82.7, 8263.0], [82.8, 8263.0], [82.9, 8264.0], [83.0, 8264.0], [83.1, 8265.0], [83.2, 8265.0], [83.3, 8266.0], [83.4, 8266.0], [83.5, 8266.0], [83.6, 8266.0], [83.7, 8271.0], [83.8, 8271.0], [83.9, 8273.0], [84.0, 8273.0], [84.1, 8274.0], [84.2, 8274.0], [84.3, 8283.0], [84.4, 8283.0], [84.5, 8291.0], [84.6, 8291.0], [84.7, 8304.0], [84.8, 8304.0], [84.9, 8329.0], [85.0, 8329.0], [85.1, 8333.0], [85.2, 8333.0], [85.3, 8346.0], [85.4, 8346.0], [85.5, 8350.0], [85.6, 8350.0], [85.7, 8352.0], [85.8, 8391.0], [85.9, 8391.0], [86.0, 8393.0], [86.1, 8393.0], [86.2, 8410.0], [86.3, 8410.0], [86.4, 8460.0], [86.5, 8460.0], [86.6, 8466.0], [86.7, 8466.0], [86.8, 8497.0], [86.9, 8497.0], [87.0, 8530.0], [87.1, 8530.0], [87.2, 8590.0], [87.3, 8590.0], [87.4, 8624.0], [87.5, 8624.0], [87.6, 8628.0], [87.7, 8628.0], [87.8, 8641.0], [87.9, 8641.0], [88.0, 8654.0], [88.1, 8654.0], [88.2, 8655.0], [88.3, 8655.0], [88.4, 8674.0], [88.5, 8674.0], [88.6, 8676.0], [88.7, 8676.0], [88.8, 8706.0], [88.9, 8706.0], [89.0, 8764.0], [89.1, 8764.0], [89.2, 8770.0], [89.3, 8770.0], [89.4, 8773.0], [89.5, 8773.0], [89.6, 8776.0], [89.7, 8776.0], [89.8, 8808.0], [89.9, 8808.0], [90.0, 8815.0], [90.1, 8815.0], [90.2, 8815.0], [90.3, 8815.0], [90.4, 8820.0], [90.5, 8820.0], [90.6, 8821.0], [90.7, 8821.0], [90.8, 8828.0], [90.9, 8828.0], [91.0, 8845.0], [91.1, 8845.0], [91.2, 8881.0], [91.3, 8881.0], [91.4, 9028.0], [91.5, 9028.0], [91.6, 9054.0], [91.7, 9054.0], [91.8, 9060.0], [91.9, 9060.0], [92.0, 9083.0], [92.1, 9083.0], [92.2, 9100.0], [92.3, 9100.0], [92.4, 9103.0], [92.5, 9103.0], [92.6, 9180.0], [92.7, 9180.0], [92.8, 9240.0], [92.9, 9245.0], [93.0, 9245.0], [93.1, 9265.0], [93.2, 9265.0], [93.3, 9364.0], [93.4, 9364.0], [93.5, 9391.0], [93.6, 9391.0], [93.7, 9470.0], [93.8, 9470.0], [93.9, 9576.0], [94.0, 9576.0], [94.1, 9596.0], [94.2, 9596.0], [94.3, 9599.0], [94.4, 9599.0], [94.5, 9662.0], [94.6, 9662.0], [94.7, 9778.0], [94.8, 9778.0], [94.9, 9878.0], [95.0, 9878.0], [95.1, 9920.0], [95.2, 9920.0], [95.3, 9952.0], [95.4, 9952.0], [95.5, 9964.0], [95.6, 9964.0], [95.7, 9991.0], [95.8, 9991.0], [95.9, 9996.0], [96.0, 9996.0], [96.1, 10006.0], [96.2, 10006.0], [96.3, 10296.0], [96.4, 10296.0], [96.5, 10384.0], [96.6, 10384.0], [96.7, 10390.0], [96.8, 10390.0], [96.9, 10399.0], [97.0, 10399.0], [97.1, 10400.0], [97.2, 10400.0], [97.3, 10426.0], [97.4, 10426.0], [97.5, 10446.0], [97.6, 10446.0], [97.7, 10449.0], [97.8, 10449.0], [97.9, 10449.0], [98.0, 10449.0], [98.1, 10458.0], [98.2, 10458.0], [98.3, 10458.0], [98.4, 10458.0], [98.5, 10484.0], [98.6, 10484.0], [98.7, 10484.0], [98.8, 10484.0], [98.9, 10489.0], [99.0, 10489.0], [99.1, 10562.0], [99.2, 10562.0], [99.3, 10757.0], [99.4, 10757.0], [99.5, 10762.0], [99.6, 10762.0], [99.7, 10775.0], [99.8, 10775.0], [99.9, 10891.0], [100.0, 10891.0]], "isOverall": false, "label": "about Request", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 2.0], [9.2, 2.0], [9.3, 10.0], [9.4, 10.0], [9.5, 13.0], [9.6, 13.0], [9.7, 14.0], [9.8, 14.0], [9.9, 17.0], [10.0, 17.0], [10.1, 20.0], [10.2, 20.0], [10.3, 23.0], [10.4, 23.0], [10.5, 24.0], [10.6, 24.0], [10.7, 27.0], [10.8, 27.0], [10.9, 28.0], [11.0, 28.0], [11.1, 32.0], [11.2, 32.0], [11.3, 32.0], [11.4, 32.0], [11.5, 33.0], [11.6, 33.0], [11.7, 41.0], [11.8, 41.0], [11.9, 42.0], [12.0, 42.0], [12.1, 48.0], [12.2, 48.0], [12.3, 63.0], [12.4, 63.0], [12.5, 79.0], [12.6, 79.0], [12.7, 82.0], [12.8, 82.0], [12.9, 84.0], [13.0, 84.0], [13.1, 88.0], [13.2, 88.0], [13.3, 101.0], [13.4, 101.0], [13.5, 107.0], [13.6, 107.0], [13.7, 112.0], [13.8, 112.0], [13.9, 123.0], [14.0, 123.0], [14.1, 134.0], [14.2, 134.0], [14.3, 168.0], [14.4, 170.0], [14.5, 170.0], [14.6, 204.0], [14.7, 204.0], [14.8, 218.0], [14.9, 218.0], [15.0, 289.0], [15.1, 289.0], [15.2, 306.0], [15.3, 306.0], [15.4, 390.0], [15.5, 390.0], [15.6, 395.0], [15.7, 395.0], [15.8, 395.0], [15.9, 395.0], [16.0, 396.0], [16.1, 396.0], [16.2, 397.0], [16.3, 397.0], [16.4, 397.0], [16.5, 397.0], [16.6, 397.0], [16.7, 397.0], [16.8, 399.0], [16.9, 399.0], [17.0, 400.0], [17.1, 400.0], [17.2, 404.0], [17.3, 404.0], [17.4, 407.0], [17.5, 407.0], [17.6, 407.0], [17.7, 407.0], [17.8, 407.0], [17.9, 407.0], [18.0, 408.0], [18.1, 408.0], [18.2, 408.0], [18.3, 408.0], [18.4, 408.0], [18.5, 408.0], [18.6, 408.0], [18.7, 408.0], [18.8, 409.0], [18.9, 409.0], [19.0, 410.0], [19.1, 410.0], [19.2, 411.0], [19.3, 411.0], [19.4, 412.0], [19.5, 412.0], [19.6, 412.0], [19.7, 412.0], [19.8, 415.0], [19.9, 415.0], [20.0, 415.0], [20.1, 415.0], [20.2, 416.0], [20.3, 416.0], [20.4, 416.0], [20.5, 416.0], [20.6, 416.0], [20.7, 416.0], [20.8, 417.0], [20.9, 417.0], [21.0, 418.0], [21.1, 418.0], [21.2, 418.0], [21.3, 418.0], [21.4, 419.0], [21.5, 421.0], [21.6, 421.0], [21.7, 422.0], [21.8, 422.0], [21.9, 422.0], [22.0, 422.0], [22.1, 423.0], [22.2, 423.0], [22.3, 424.0], [22.4, 424.0], [22.5, 424.0], [22.6, 424.0], [22.7, 424.0], [22.8, 424.0], [22.9, 424.0], [23.0, 424.0], [23.1, 426.0], [23.2, 426.0], [23.3, 427.0], [23.4, 427.0], [23.5, 427.0], [23.6, 427.0], [23.7, 428.0], [23.8, 428.0], [23.9, 428.0], [24.0, 428.0], [24.1, 429.0], [24.2, 429.0], [24.3, 429.0], [24.4, 429.0], [24.5, 430.0], [24.6, 430.0], [24.7, 431.0], [24.8, 431.0], [24.9, 431.0], [25.0, 431.0], [25.1, 431.0], [25.2, 431.0], [25.3, 432.0], [25.4, 432.0], [25.5, 432.0], [25.6, 432.0], [25.7, 437.0], [25.8, 437.0], [25.9, 437.0], [26.0, 437.0], [26.1, 437.0], [26.2, 437.0], [26.3, 440.0], [26.4, 440.0], [26.5, 440.0], [26.6, 440.0], [26.7, 441.0], [26.8, 441.0], [26.9, 446.0], [27.0, 446.0], [27.1, 596.0], [27.2, 596.0], [27.3, 602.0], [27.4, 602.0], [27.5, 604.0], [27.6, 604.0], [27.7, 606.0], [27.8, 606.0], [27.9, 606.0], [28.0, 606.0], [28.1, 627.0], [28.2, 627.0], [28.3, 630.0], [28.4, 630.0], [28.5, 635.0], [28.6, 636.0], [28.7, 636.0], [28.8, 638.0], [28.9, 638.0], [29.0, 640.0], [29.1, 640.0], [29.2, 641.0], [29.3, 641.0], [29.4, 642.0], [29.5, 642.0], [29.6, 644.0], [29.7, 644.0], [29.8, 645.0], [29.9, 645.0], [30.0, 645.0], [30.1, 645.0], [30.2, 647.0], [30.3, 647.0], [30.4, 649.0], [30.5, 649.0], [30.6, 654.0], [30.7, 654.0], [30.8, 681.0], [30.9, 681.0], [31.0, 685.0], [31.1, 685.0], [31.2, 3476.0], [31.3, 3476.0], [31.4, 3609.0], [31.5, 3609.0], [31.6, 3631.0], [31.7, 3631.0], [31.8, 3633.0], [31.9, 3633.0], [32.0, 3660.0], [32.1, 3660.0], [32.2, 3722.0], [32.3, 3722.0], [32.4, 3757.0], [32.5, 3757.0], [32.6, 3795.0], [32.7, 3795.0], [32.8, 3802.0], [32.9, 3802.0], [33.0, 3815.0], [33.1, 3815.0], [33.2, 3837.0], [33.3, 3837.0], [33.4, 3866.0], [33.5, 3866.0], [33.6, 3886.0], [33.7, 3886.0], [33.8, 3900.0], [33.9, 3900.0], [34.0, 3916.0], [34.1, 3916.0], [34.2, 3936.0], [34.3, 3936.0], [34.4, 3953.0], [34.5, 3953.0], [34.6, 3959.0], [34.7, 3959.0], [34.8, 3968.0], [34.9, 3968.0], [35.0, 3968.0], [35.1, 3968.0], [35.2, 4049.0], [35.3, 4049.0], [35.4, 4094.0], [35.5, 4094.0], [35.6, 4127.0], [35.7, 4127.0], [35.8, 4131.0], [35.9, 4155.0], [36.0, 4155.0], [36.1, 4160.0], [36.2, 4160.0], [36.3, 4164.0], [36.4, 4164.0], [36.5, 4187.0], [36.6, 4187.0], [36.7, 4192.0], [36.8, 4192.0], [36.9, 4199.0], [37.0, 4199.0], [37.1, 4200.0], [37.2, 4200.0], [37.3, 4244.0], [37.4, 4244.0], [37.5, 4298.0], [37.6, 4298.0], [37.7, 4298.0], [37.8, 4298.0], [37.9, 4308.0], [38.0, 4308.0], [38.1, 4315.0], [38.2, 4315.0], [38.3, 4363.0], [38.4, 4363.0], [38.5, 4400.0], [38.6, 4400.0], [38.7, 4421.0], [38.8, 4421.0], [38.9, 4445.0], [39.0, 4445.0], [39.1, 4471.0], [39.2, 4471.0], [39.3, 4536.0], [39.4, 4536.0], [39.5, 4555.0], [39.6, 4555.0], [39.7, 4560.0], [39.8, 4560.0], [39.9, 4597.0], [40.0, 4597.0], [40.1, 4608.0], [40.2, 4608.0], [40.3, 4622.0], [40.4, 4622.0], [40.5, 4626.0], [40.6, 4626.0], [40.7, 4635.0], [40.8, 4635.0], [40.9, 4636.0], [41.0, 4636.0], [41.1, 4641.0], [41.2, 4641.0], [41.3, 4643.0], [41.4, 4643.0], [41.5, 4667.0], [41.6, 4667.0], [41.7, 4671.0], [41.8, 4671.0], [41.9, 4700.0], [42.0, 4700.0], [42.1, 4752.0], [42.2, 4752.0], [42.3, 4775.0], [42.4, 4775.0], [42.5, 4790.0], [42.6, 4790.0], [42.7, 4815.0], [42.8, 4815.0], [42.9, 4856.0], [43.0, 4869.0], [43.1, 4869.0], [43.2, 4938.0], [43.3, 4938.0], [43.4, 4951.0], [43.5, 4951.0], [43.6, 4951.0], [43.7, 4951.0], [43.8, 4955.0], [43.9, 4955.0], [44.0, 4969.0], [44.1, 4969.0], [44.2, 4977.0], [44.3, 4977.0], [44.4, 4990.0], [44.5, 4990.0], [44.6, 4998.0], [44.7, 4998.0], [44.8, 5040.0], [44.9, 5040.0], [45.0, 5062.0], [45.1, 5062.0], [45.2, 5068.0], [45.3, 5068.0], [45.4, 5083.0], [45.5, 5083.0], [45.6, 5087.0], [45.7, 5087.0], [45.8, 5124.0], [45.9, 5124.0], [46.0, 5129.0], [46.1, 5129.0], [46.2, 5156.0], [46.3, 5156.0], [46.4, 5157.0], [46.5, 5157.0], [46.6, 5159.0], [46.7, 5159.0], [46.8, 5164.0], [46.9, 5164.0], [47.0, 5166.0], [47.1, 5166.0], [47.2, 5171.0], [47.3, 5171.0], [47.4, 5173.0], [47.5, 5173.0], [47.6, 5174.0], [47.7, 5174.0], [47.8, 5180.0], [47.9, 5180.0], [48.0, 5185.0], [48.1, 5185.0], [48.2, 5185.0], [48.3, 5185.0], [48.4, 5198.0], [48.5, 5198.0], [48.6, 5200.0], [48.7, 5200.0], [48.8, 5201.0], [48.9, 5201.0], [49.0, 5202.0], [49.1, 5202.0], [49.2, 5203.0], [49.3, 5203.0], [49.4, 5219.0], [49.5, 5219.0], [49.6, 5224.0], [49.7, 5224.0], [49.8, 5228.0], [49.9, 5228.0], [50.0, 5237.0], [50.1, 5242.0], [50.2, 5242.0], [50.3, 5243.0], [50.4, 5243.0], [50.5, 5244.0], [50.6, 5244.0], [50.7, 5246.0], [50.8, 5246.0], [50.9, 5250.0], [51.0, 5250.0], [51.1, 5250.0], [51.2, 5250.0], [51.3, 5251.0], [51.4, 5251.0], [51.5, 5253.0], [51.6, 5253.0], [51.7, 5253.0], [51.8, 5253.0], [51.9, 5256.0], [52.0, 5256.0], [52.1, 5256.0], [52.2, 5256.0], [52.3, 5256.0], [52.4, 5256.0], [52.5, 5258.0], [52.6, 5258.0], [52.7, 5259.0], [52.8, 5259.0], [52.9, 5269.0], [53.0, 5269.0], [53.1, 5269.0], [53.2, 5269.0], [53.3, 5273.0], [53.4, 5273.0], [53.5, 5275.0], [53.6, 5275.0], [53.7, 5276.0], [53.8, 5276.0], [53.9, 5278.0], [54.0, 5278.0], [54.1, 5278.0], [54.2, 5278.0], [54.3, 5282.0], [54.4, 5282.0], [54.5, 5288.0], [54.6, 5288.0], [54.7, 5288.0], [54.8, 5288.0], [54.9, 5291.0], [55.0, 5291.0], [55.1, 5291.0], [55.2, 5291.0], [55.3, 5296.0], [55.4, 5296.0], [55.5, 5297.0], [55.6, 5297.0], [55.7, 5298.0], [55.8, 5298.0], [55.9, 5302.0], [56.0, 5302.0], [56.1, 5307.0], [56.2, 5307.0], [56.3, 5315.0], [56.4, 5315.0], [56.5, 5356.0], [56.6, 5356.0], [56.7, 5415.0], [56.8, 5415.0], [56.9, 5428.0], [57.0, 5428.0], [57.1, 5580.0], [57.2, 5761.0], [57.3, 5761.0], [57.4, 5837.0], [57.5, 5837.0], [57.6, 5898.0], [57.7, 5898.0], [57.8, 6113.0], [57.9, 6113.0], [58.0, 6267.0], [58.1, 6267.0], [58.2, 6312.0], [58.3, 6312.0], [58.4, 6332.0], [58.5, 6332.0], [58.6, 6340.0], [58.7, 6340.0], [58.8, 6346.0], [58.9, 6346.0], [59.0, 6386.0], [59.1, 6386.0], [59.2, 6404.0], [59.3, 6404.0], [59.4, 6439.0], [59.5, 6439.0], [59.6, 6450.0], [59.7, 6450.0], [59.8, 6452.0], [59.9, 6452.0], [60.0, 6472.0], [60.1, 6472.0], [60.2, 6503.0], [60.3, 6503.0], [60.4, 6511.0], [60.5, 6511.0], [60.6, 6577.0], [60.7, 6577.0], [60.8, 6579.0], [60.9, 6579.0], [61.0, 6595.0], [61.1, 6595.0], [61.2, 6617.0], [61.3, 6617.0], [61.4, 6658.0], [61.5, 6658.0], [61.6, 6714.0], [61.7, 6714.0], [61.8, 6727.0], [61.9, 6727.0], [62.0, 6735.0], [62.1, 6735.0], [62.2, 6883.0], [62.3, 6883.0], [62.4, 6945.0], [62.5, 6945.0], [62.6, 6983.0], [62.7, 6983.0], [62.8, 7011.0], [62.9, 7011.0], [63.0, 7126.0], [63.1, 7126.0], [63.2, 7164.0], [63.3, 7164.0], [63.4, 7187.0], [63.5, 7187.0], [63.6, 7189.0], [63.7, 7189.0], [63.8, 7216.0], [63.9, 7216.0], [64.0, 7227.0], [64.1, 7227.0], [64.2, 7235.0], [64.3, 7252.0], [64.4, 7252.0], [64.5, 7286.0], [64.6, 7286.0], [64.7, 7311.0], [64.8, 7311.0], [64.9, 7312.0], [65.0, 7312.0], [65.1, 7315.0], [65.2, 7315.0], [65.3, 7320.0], [65.4, 7320.0], [65.5, 7323.0], [65.6, 7323.0], [65.7, 7349.0], [65.8, 7349.0], [65.9, 7350.0], [66.0, 7350.0], [66.1, 7351.0], [66.2, 7351.0], [66.3, 7353.0], [66.4, 7353.0], [66.5, 7371.0], [66.6, 7371.0], [66.7, 7401.0], [66.8, 7401.0], [66.9, 7440.0], [67.0, 7440.0], [67.1, 7482.0], [67.2, 7482.0], [67.3, 7571.0], [67.4, 7571.0], [67.5, 7604.0], [67.6, 7604.0], [67.7, 7649.0], [67.8, 7649.0], [67.9, 7779.0], [68.0, 7779.0], [68.1, 7787.0], [68.2, 7787.0], [68.3, 7815.0], [68.4, 7815.0], [68.5, 7829.0], [68.6, 7829.0], [68.7, 7869.0], [68.8, 7869.0], [68.9, 7885.0], [69.0, 7885.0], [69.1, 7886.0], [69.2, 7886.0], [69.3, 7905.0], [69.4, 7905.0], [69.5, 7906.0], [69.6, 7906.0], [69.7, 7924.0], [69.8, 7924.0], [69.9, 7951.0], [70.0, 7951.0], [70.1, 7951.0], [70.2, 7951.0], [70.3, 7974.0], [70.4, 7974.0], [70.5, 7974.0], [70.6, 7974.0], [70.7, 7986.0], [70.8, 7986.0], [70.9, 7990.0], [71.0, 7990.0], [71.1, 8000.0], [71.2, 8000.0], [71.3, 8027.0], [71.4, 8027.0], [71.5, 8036.0], [71.6, 8039.0], [71.7, 8039.0], [71.8, 8043.0], [71.9, 8043.0], [72.0, 8050.0], [72.1, 8050.0], [72.2, 8050.0], [72.3, 8050.0], [72.4, 8054.0], [72.5, 8054.0], [72.6, 8065.0], [72.7, 8065.0], [72.8, 8070.0], [72.9, 8070.0], [73.0, 8073.0], [73.1, 8073.0], [73.2, 8077.0], [73.3, 8077.0], [73.4, 8083.0], [73.5, 8083.0], [73.6, 8100.0], [73.7, 8100.0], [73.8, 8103.0], [73.9, 8103.0], [74.0, 8126.0], [74.1, 8126.0], [74.2, 8133.0], [74.3, 8133.0], [74.4, 8167.0], [74.5, 8167.0], [74.6, 8176.0], [74.7, 8176.0], [74.8, 8185.0], [74.9, 8185.0], [75.0, 8187.0], [75.1, 8187.0], [75.2, 8200.0], [75.3, 8200.0], [75.4, 8207.0], [75.5, 8207.0], [75.6, 8216.0], [75.7, 8216.0], [75.8, 8238.0], [75.9, 8238.0], [76.0, 8263.0], [76.1, 8263.0], [76.2, 8265.0], [76.3, 8265.0], [76.4, 8275.0], [76.5, 8275.0], [76.6, 8308.0], [76.7, 8308.0], [76.8, 8312.0], [76.9, 8312.0], [77.0, 8321.0], [77.1, 8321.0], [77.2, 8323.0], [77.3, 8323.0], [77.4, 8325.0], [77.5, 8325.0], [77.6, 8346.0], [77.7, 8346.0], [77.8, 8347.0], [77.9, 8347.0], [78.0, 8351.0], [78.1, 8351.0], [78.2, 8378.0], [78.3, 8378.0], [78.4, 8382.0], [78.5, 8382.0], [78.6, 8393.0], [78.7, 8404.0], [78.8, 8404.0], [78.9, 8406.0], [79.0, 8406.0], [79.1, 8409.0], [79.2, 8409.0], [79.3, 8452.0], [79.4, 8452.0], [79.5, 8452.0], [79.6, 8452.0], [79.7, 8476.0], [79.8, 8476.0], [79.9, 8478.0], [80.0, 8478.0], [80.1, 8499.0], [80.2, 8499.0], [80.3, 8509.0], [80.4, 8509.0], [80.5, 8517.0], [80.6, 8517.0], [80.7, 8518.0], [80.8, 8518.0], [80.9, 8528.0], [81.0, 8528.0], [81.1, 8533.0], [81.2, 8533.0], [81.3, 8535.0], [81.4, 8535.0], [81.5, 8548.0], [81.6, 8548.0], [81.7, 8550.0], [81.8, 8550.0], [81.9, 8567.0], [82.0, 8567.0], [82.1, 8586.0], [82.2, 8586.0], [82.3, 8589.0], [82.4, 8589.0], [82.5, 8610.0], [82.6, 8610.0], [82.7, 8631.0], [82.8, 8631.0], [82.9, 8769.0], [83.0, 8769.0], [83.1, 8787.0], [83.2, 8787.0], [83.3, 8954.0], [83.4, 8954.0], [83.5, 8961.0], [83.6, 8961.0], [83.7, 9011.0], [83.8, 9011.0], [83.9, 9065.0], [84.0, 9065.0], [84.1, 9112.0], [84.2, 9112.0], [84.3, 9118.0], [84.4, 9118.0], [84.5, 9120.0], [84.6, 9120.0], [84.7, 9367.0], [84.8, 9367.0], [84.9, 9368.0], [85.0, 9368.0], [85.1, 9392.0], [85.2, 9392.0], [85.3, 9406.0], [85.4, 9406.0], [85.5, 9440.0], [85.6, 9440.0], [85.7, 9467.0], [85.8, 9476.0], [85.9, 9476.0], [86.0, 9489.0], [86.1, 9489.0], [86.2, 9504.0], [86.3, 9504.0], [86.4, 9510.0], [86.5, 9510.0], [86.6, 9544.0], [86.7, 9544.0], [86.8, 9546.0], [86.9, 9546.0], [87.0, 9559.0], [87.1, 9559.0], [87.2, 9568.0], [87.3, 9568.0], [87.4, 9571.0], [87.5, 9571.0], [87.6, 9572.0], [87.7, 9572.0], [87.8, 9582.0], [87.9, 9582.0], [88.0, 9600.0], [88.1, 9600.0], [88.2, 9603.0], [88.3, 9603.0], [88.4, 9606.0], [88.5, 9606.0], [88.6, 9624.0], [88.7, 9624.0], [88.8, 9624.0], [88.9, 9624.0], [89.0, 9635.0], [89.1, 9635.0], [89.2, 9659.0], [89.3, 9659.0], [89.4, 9689.0], [89.5, 9689.0], [89.6, 9766.0], [89.7, 9766.0], [89.8, 9767.0], [89.9, 9767.0], [90.0, 9770.0], [90.1, 9770.0], [90.2, 9791.0], [90.3, 9791.0], [90.4, 9807.0], [90.5, 9807.0], [90.6, 9810.0], [90.7, 9810.0], [90.8, 9851.0], [90.9, 9851.0], [91.0, 9863.0], [91.1, 9863.0], [91.2, 9868.0], [91.3, 9868.0], [91.4, 9872.0], [91.5, 9872.0], [91.6, 9876.0], [91.7, 9876.0], [91.8, 9879.0], [91.9, 9879.0], [92.0, 9890.0], [92.1, 9890.0], [92.2, 9913.0], [92.3, 9913.0], [92.4, 9947.0], [92.5, 9947.0], [92.6, 9968.0], [92.7, 9968.0], [92.8, 9971.0], [92.9, 9994.0], [93.0, 9994.0], [93.1, 10014.0], [93.2, 10014.0], [93.3, 10027.0], [93.4, 10027.0], [93.5, 10032.0], [93.6, 10032.0], [93.7, 10044.0], [93.8, 10044.0], [93.9, 10059.0], [94.0, 10059.0], [94.1, 10125.0], [94.2, 10125.0], [94.3, 10141.0], [94.4, 10141.0], [94.5, 10178.0], [94.6, 10178.0], [94.7, 10182.0], [94.8, 10182.0], [94.9, 10186.0], [95.0, 10186.0], [95.1, 10203.0], [95.2, 10203.0], [95.3, 10213.0], [95.4, 10213.0], [95.5, 10215.0], [95.6, 10215.0], [95.7, 10221.0], [95.8, 10221.0], [95.9, 10224.0], [96.0, 10224.0], [96.1, 10229.0], [96.2, 10229.0], [96.3, 10253.0], [96.4, 10253.0], [96.5, 10254.0], [96.6, 10254.0], [96.7, 10256.0], [96.8, 10256.0], [96.9, 10256.0], [97.0, 10256.0], [97.1, 10307.0], [97.2, 10307.0], [97.3, 10344.0], [97.4, 10344.0], [97.5, 10360.0], [97.6, 10360.0], [97.7, 10381.0], [97.8, 10381.0], [97.9, 10382.0], [98.0, 10382.0], [98.1, 10405.0], [98.2, 10405.0], [98.3, 10446.0], [98.4, 10446.0], [98.5, 10517.0], [98.6, 10517.0], [98.7, 10536.0], [98.8, 10536.0], [98.9, 10604.0], [99.0, 10604.0], [99.1, 10632.0], [99.2, 10632.0], [99.3, 10662.0], [99.4, 10662.0], [99.5, 10664.0], [99.6, 10664.0], [99.7, 10671.0], [99.8, 10671.0], [99.9, 10689.0], [100.0, 10689.0]], "isOverall": false, "label": "services Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 107.0, "series": [{"data": [[0.0, 19.0], [600.0, 17.0], [1100.0, 9.0], [1200.0, 11.0], [1300.0, 12.0], [1400.0, 8.0], [1500.0, 6.0], [1600.0, 6.0], [1700.0, 3.0], [1800.0, 7.0], [1900.0, 6.0], [2000.0, 3.0], [2100.0, 4.0], [2300.0, 6.0], [2200.0, 4.0], [2400.0, 7.0], [2500.0, 8.0], [2600.0, 4.0], [2800.0, 4.0], [2700.0, 6.0], [2900.0, 5.0], [3000.0, 1.0], [3500.0, 1.0], [3700.0, 5.0], [3600.0, 2.0], [3800.0, 5.0], [3900.0, 4.0], [4000.0, 1.0], [4300.0, 4.0], [4200.0, 4.0], [4100.0, 4.0], [4600.0, 6.0], [4500.0, 5.0], [4400.0, 3.0], [4800.0, 5.0], [4700.0, 2.0], [5100.0, 12.0], [5000.0, 2.0], [4900.0, 6.0], [5200.0, 24.0], [5600.0, 8.0], [5500.0, 4.0], [5400.0, 6.0], [5800.0, 11.0], [5700.0, 5.0], [6100.0, 3.0], [6000.0, 8.0], [5900.0, 6.0], [6300.0, 8.0], [6200.0, 3.0], [6600.0, 6.0], [6500.0, 2.0], [6400.0, 1.0], [6800.0, 4.0], [6900.0, 2.0], [6700.0, 7.0], [7000.0, 1.0], [7400.0, 4.0], [7300.0, 1.0], [7600.0, 3.0], [7500.0, 2.0], [7900.0, 3.0], [7800.0, 5.0], [7700.0, 1.0], [8000.0, 10.0], [8100.0, 8.0], [8600.0, 2.0], [8500.0, 5.0], [8200.0, 3.0], [8400.0, 1.0], [8300.0, 2.0], [9200.0, 3.0], [8800.0, 1.0], [9100.0, 1.0], [9000.0, 1.0], [9300.0, 2.0], [9700.0, 2.0], [9600.0, 2.0], [9500.0, 4.0], [9400.0, 1.0], [10200.0, 7.0], [10100.0, 9.0], [10000.0, 7.0], [9900.0, 6.0], [9800.0, 6.0], [10600.0, 2.0], [10500.0, 1.0], [10300.0, 1.0], [100.0, 3.0], [200.0, 6.0], [300.0, 4.0], [400.0, 51.0], [500.0, 1.0]], "isOverall": false, "label": "contact Request", "isController": false}, {"data": [[300.0, 4.0], [400.0, 34.0], [600.0, 31.0], [1200.0, 1.0], [1300.0, 2.0], [1400.0, 4.0], [1500.0, 4.0], [1600.0, 3.0], [1700.0, 5.0], [1800.0, 4.0], [1900.0, 5.0], [2000.0, 5.0], [2100.0, 6.0], [2200.0, 3.0], [2300.0, 4.0], [2400.0, 3.0], [2500.0, 4.0], [2600.0, 3.0], [2700.0, 5.0], [2800.0, 2.0], [2900.0, 3.0], [3000.0, 3.0], [3100.0, 4.0], [3200.0, 1.0], [3300.0, 5.0], [3400.0, 4.0], [3500.0, 3.0], [3600.0, 5.0], [3700.0, 5.0], [3800.0, 5.0], [3900.0, 3.0], [4000.0, 4.0], [4100.0, 5.0], [4200.0, 4.0], [4300.0, 5.0], [4400.0, 4.0], [4500.0, 1.0], [4600.0, 4.0], [4700.0, 6.0], [4800.0, 3.0], [4900.0, 4.0], [5000.0, 4.0], [5100.0, 1.0], [5200.0, 3.0], [5300.0, 2.0], [5400.0, 4.0], [5500.0, 2.0], [5600.0, 3.0], [5700.0, 6.0], [5800.0, 5.0], [5900.0, 4.0], [6000.0, 5.0], [6100.0, 4.0], [6200.0, 2.0], [6300.0, 3.0], [6400.0, 6.0], [6500.0, 3.0], [6600.0, 3.0], [6700.0, 5.0], [6800.0, 2.0], [6900.0, 3.0], [7000.0, 6.0], [7100.0, 2.0], [7200.0, 4.0], [7300.0, 5.0], [7400.0, 2.0], [7500.0, 9.0], [7600.0, 4.0], [7700.0, 4.0], [7800.0, 3.0], [7900.0, 3.0], [8200.0, 1.0], [8300.0, 1.0], [8600.0, 1.0], [8900.0, 1.0], [9200.0, 1.0], [9000.0, 2.0], [9300.0, 7.0], [9500.0, 28.0], [9400.0, 23.0], [9700.0, 10.0], [9600.0, 11.0], [9800.0, 5.0], [10000.0, 2.0], [9900.0, 7.0], [10100.0, 6.0], [10200.0, 2.0], [10300.0, 5.0], [10400.0, 6.0], [10500.0, 7.0], [10600.0, 8.0], [10700.0, 7.0], [10800.0, 7.0], [10900.0, 13.0], [11000.0, 8.0], [11100.0, 11.0], [11200.0, 2.0]], "isOverall": false, "label": "home Request", "isController": false}, {"data": [[0.0, 107.0], [600.0, 9.0], [1600.0, 1.0], [1700.0, 1.0], [1900.0, 2.0], [2000.0, 3.0], [2200.0, 3.0], [2300.0, 2.0], [2500.0, 2.0], [2600.0, 1.0], [2700.0, 1.0], [2800.0, 3.0], [2900.0, 1.0], [3000.0, 2.0], [3100.0, 3.0], [3300.0, 3.0], [3400.0, 3.0], [3500.0, 2.0], [3600.0, 3.0], [3700.0, 2.0], [3800.0, 2.0], [4000.0, 2.0], [4100.0, 3.0], [4200.0, 1.0], [4300.0, 1.0], [4400.0, 2.0], [4600.0, 1.0], [4700.0, 1.0], [4800.0, 1.0], [4900.0, 4.0], [5100.0, 2.0], [5200.0, 1.0], [5300.0, 2.0], [5400.0, 2.0], [5500.0, 1.0], [5700.0, 3.0], [5800.0, 1.0], [5900.0, 1.0], [6000.0, 2.0], [6100.0, 2.0], [6200.0, 1.0], [6400.0, 4.0], [6500.0, 4.0], [6600.0, 4.0], [6700.0, 6.0], [6800.0, 6.0], [6900.0, 7.0], [7000.0, 13.0], [7100.0, 8.0], [7200.0, 2.0], [7400.0, 3.0], [7500.0, 9.0], [7600.0, 4.0], [7800.0, 8.0], [7900.0, 3.0], [7700.0, 3.0], [8000.0, 6.0], [8100.0, 13.0], [8300.0, 8.0], [8600.0, 7.0], [8400.0, 4.0], [8700.0, 5.0], [8500.0, 2.0], [8200.0, 35.0], [8800.0, 8.0], [9000.0, 4.0], [9100.0, 3.0], [9200.0, 3.0], [9300.0, 2.0], [9400.0, 1.0], [9500.0, 3.0], [9600.0, 1.0], [9700.0, 1.0], [9800.0, 1.0], [9900.0, 5.0], [10000.0, 1.0], [10200.0, 1.0], [10500.0, 1.0], [10700.0, 3.0], [10400.0, 10.0], [10300.0, 3.0], [10800.0, 1.0], [100.0, 45.0], [200.0, 13.0], [300.0, 1.0], [400.0, 42.0]], "isOverall": false, "label": "about Request", "isController": false}, {"data": [[0.0, 67.0], [600.0, 20.0], [3400.0, 1.0], [3700.0, 3.0], [3600.0, 4.0], [3800.0, 5.0], [3900.0, 7.0], [4000.0, 2.0], [4100.0, 8.0], [4200.0, 4.0], [4300.0, 3.0], [4600.0, 9.0], [4500.0, 4.0], [4400.0, 4.0], [4700.0, 4.0], [4800.0, 3.0], [5000.0, 5.0], [5100.0, 14.0], [4900.0, 8.0], [5300.0, 4.0], [5200.0, 37.0], [5400.0, 2.0], [5500.0, 1.0], [5700.0, 1.0], [5800.0, 2.0], [6100.0, 1.0], [6300.0, 5.0], [6200.0, 1.0], [6400.0, 5.0], [6600.0, 2.0], [6500.0, 5.0], [6700.0, 3.0], [6800.0, 1.0], [6900.0, 2.0], [7000.0, 1.0], [7100.0, 4.0], [7400.0, 3.0], [7300.0, 10.0], [7200.0, 5.0], [7600.0, 2.0], [7500.0, 1.0], [7900.0, 9.0], [7700.0, 2.0], [7800.0, 5.0], [8000.0, 13.0], [8100.0, 8.0], [8200.0, 7.0], [8500.0, 11.0], [8400.0, 8.0], [8300.0, 11.0], [8700.0, 2.0], [8600.0, 2.0], [8900.0, 2.0], [9000.0, 2.0], [9100.0, 3.0], [9400.0, 5.0], [9500.0, 9.0], [9600.0, 8.0], [9700.0, 4.0], [9300.0, 3.0], [9800.0, 9.0], [10200.0, 10.0], [10100.0, 5.0], [10000.0, 5.0], [9900.0, 5.0], [10600.0, 6.0], [10500.0, 2.0], [10400.0, 2.0], [10300.0, 5.0], [100.0, 7.0], [200.0, 3.0], [300.0, 9.0], [400.0, 51.0], [500.0, 1.0]], "isOverall": false, "label": "services Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 11200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 47.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1436.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 47.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1436.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 545.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 260.4110360360361, "minX": 1.71704634E12, "maxY": 404.02894736842075, "series": [{"data": [[1.7170464E12, 260.4110360360361], [1.71704634E12, 404.02894736842075]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7170464E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 11155.5, "series": [{"data": [[2.0, 1125.0], [3.0, 1156.0], [4.0, 1143.0], [5.0, 1136.0], [6.0, 1195.0], [7.0, 1198.0], [8.0, 1172.0], [9.0, 1220.0], [10.0, 1174.0], [11.0, 1205.0], [12.0, 1234.0], [13.0, 1226.0], [14.0, 1225.0], [15.0, 1239.0], [16.0, 1245.0], [17.0, 1262.0], [18.0, 1287.0], [19.0, 1300.0], [20.0, 1314.0], [21.0, 1290.0], [22.0, 1273.0], [23.0, 1318.0], [24.0, 1303.0], [25.0, 1360.0], [26.0, 1360.0], [27.0, 1322.0], [28.0, 1335.0], [29.0, 1378.0], [30.0, 1372.0], [31.0, 1387.0], [33.0, 1437.0], [32.0, 1388.0], [35.0, 1401.0], [34.0, 1420.0], [37.0, 1444.0], [36.0, 1427.0], [39.0, 1465.0], [38.0, 1414.0], [41.0, 1506.0], [40.0, 1458.0], [43.0, 1529.0], [42.0, 1550.0], [45.0, 1637.0], [44.0, 1578.0], [47.0, 1550.0], [46.0, 1574.0], [49.0, 1621.0], [48.0, 1637.0], [50.0, 1658.0], [124.0, 1673.0], [135.0, 3956.0], [134.0, 3921.0], [133.0, 3895.0], [132.0, 3860.0], [131.0, 2552.7999999999993], [143.0, 4182.0], [142.0, 4203.0], [141.0, 4139.0], [140.0, 4162.0], [139.0, 4161.0], [138.0, 4084.0], [137.0, 3941.0], [136.0, 3946.0], [151.0, 4413.0], [150.0, 4347.0], [149.0, 4386.0], [148.0, 4336.0], [147.0, 4378.0], [146.0, 4287.0], [145.0, 4276.0], [144.0, 4246.0], [159.0, 4607.0], [158.0, 4582.0], [157.0, 4508.0], [156.0, 4544.0], [155.0, 4503.0], [154.0, 4476.5], [152.0, 4442.0], [167.0, 4809.0], [166.0, 4786.0], [165.0, 4727.0], [164.0, 4633.0], [163.0, 4648.0], [162.0, 4673.0], [161.0, 4646.0], [160.0, 4639.0], [175.0, 4962.0], [174.0, 4969.0], [173.0, 4940.0], [172.0, 4927.0], [171.0, 4871.0], [170.0, 4856.0], [169.0, 4832.0], [168.0, 4846.0], [183.0, 5135.0], [182.0, 5118.0], [181.0, 5099.0], [180.0, 5130.0], [179.0, 5101.0], [178.0, 5154.0], [177.0, 4954.0], [176.0, 4975.0], [191.0, 5208.0], [190.0, 5213.0], [189.0, 5248.0], [188.0, 5128.0], [187.0, 5126.0], [186.0, 5125.0], [185.0, 5084.0], [184.0, 5115.0], [199.0, 5232.0], [198.0, 5257.0], [197.0, 5230.0], [196.0, 5183.0], [195.0, 5204.0], [194.0, 5205.0], [193.0, 5235.0], [192.0, 5217.0], [207.0, 5257.0], [206.0, 5264.0], [205.0, 5260.0], [204.0, 5265.0], [203.0, 5281.0], [202.0, 5174.0], [201.0, 5178.0], [200.0, 5209.0], [215.0, 5266.0], [214.0, 5298.0], [213.0, 5259.0], [212.0, 5268.0], [211.0, 5269.0], [210.0, 5256.0], [209.0, 5267.0], [208.0, 5246.0], [223.0, 5523.0], [222.0, 5546.0], [221.0, 5493.0], [220.0, 5416.0], [219.0, 5442.0], [218.0, 5422.0], [217.0, 5419.0], [216.0, 5449.0], [231.0, 5626.0], [230.0, 5673.0], [229.0, 5637.0], [228.0, 5650.0], [227.0, 5603.0], [226.0, 5627.0], [225.0, 5560.0], [224.0, 5565.0], [239.0, 5798.0], [238.0, 5814.0], [237.0, 5780.0], [236.0, 5772.0], [235.0, 5759.0], [234.0, 5746.0], [233.0, 5666.0], [232.0, 5647.0], [247.0, 5887.0], [246.0, 5862.0], [245.0, 5894.0], [244.0, 5840.0], [243.0, 5805.0], [242.0, 5868.0], [241.0, 5825.0], [240.0, 5801.0], [251.0, 5932.5], [249.0, 5919.0], [248.0, 5847.0], [287.0, 6737.0], [286.0, 6656.0], [285.0, 7082.0], [284.0, 6269.757575757577], [302.0, 7458.0], [303.0, 7428.0], [301.0, 7446.0], [300.0, 6888.0], [299.0, 6884.0], [298.0, 6873.0], [297.0, 6917.0], [296.0, 6803.0], [295.0, 6780.0], [289.0, 6701.0], [288.0, 6712.0], [291.0, 6655.0], [290.0, 6671.0], [294.0, 6786.0], [293.0, 6606.0], [292.0, 6641.0], [318.0, 7625.0], [319.0, 8101.0], [317.0, 8063.0], [316.0, 7988.0], [315.0, 7484.0], [314.0, 7951.0], [313.0, 7842.0], [312.0, 7860.0], [311.0, 7867.0], [305.0, 7555.0], [304.0, 7556.0], [307.0, 7726.0], [306.0, 7664.0], [310.0, 7350.0], [309.0, 7758.0], [334.0, 8464.0], [335.0, 8027.0], [333.0, 8062.0], [332.0, 8583.0], [331.0, 7924.0], [330.0, 8334.0], [329.0, 8354.0], [328.0, 7873.0], [327.0, 8189.0], [321.0, 8125.0], [320.0, 8142.0], [323.0, 8204.0], [322.0, 8069.0], [326.0, 8247.0], [325.0, 8170.0], [324.0, 8199.0], [350.0, 8557.0], [351.0, 8596.0], [349.0, 8555.0], [348.0, 9346.0], [347.0, 9258.0], [346.0, 9199.0], [345.0, 9076.0], [344.0, 8242.0], [343.0, 8005.0], [337.0, 8109.0], [336.0, 8030.0], [339.0, 8089.0], [338.0, 8170.0], [342.0, 8043.0], [341.0, 8024.0], [340.0, 8013.0], [366.0, 9843.0], [367.0, 9804.0], [365.0, 9887.0], [364.0, 9824.0], [363.0, 9712.0], [362.0, 9727.0], [361.0, 9652.0], [360.0, 9625.0], [359.0, 9580.0], [353.0, 9292.0], [352.0, 8575.0], [355.0, 9519.0], [354.0, 9457.0], [358.0, 9531.0], [357.0, 8809.0], [356.0, 9581.0], [382.0, 10008.0], [383.0, 10167.0], [381.0, 9955.0], [380.0, 9947.0], [379.0, 10007.0], [378.0, 9963.0], [377.0, 10030.0], [376.0, 10079.0], [375.0, 9998.0], [368.0, 9872.0], [371.0, 9958.0], [370.0, 9929.0], [374.0, 10033.0], [373.0, 10009.0], [372.0, 10011.0], [398.0, 217.0], [399.0, 10236.0], [397.0, 10194.0], [396.0, 10143.0], [395.0, 10205.0], [394.0, 10192.0], [393.0, 10195.0], [392.0, 10216.0], [391.0, 10202.0], [385.0, 10141.0], [384.0, 10136.0], [387.0, 10225.0], [386.0, 10240.0], [390.0, 10163.0], [389.0, 10208.0], [388.0, 10152.0], [413.0, 8613.0], [415.0, 1.0], [412.0, 8698.0], [403.0, 10681.0], [402.0, 10504.0], [401.0, 206.0], [400.0, 10368.0], [411.0, 212.0], [410.0, 201.0], [409.0, 156.0], [408.0, 9224.0], [407.0, 9356.0], [406.0, 207.0], [405.0, 194.0], [404.0, 10674.0], [431.0, 429.0], [422.0, 105.66666666666666], [421.0, 671.0], [420.0, 634.0], [424.0, 316.0], [430.0, 0.0], [429.0, 616.0], [428.0, 401.0], [419.0, 659.0], [418.0, 1.0], [417.0, 0.0], [416.0, 0.0], [423.0, 429.0], [427.0, 0.0], [426.0, 433.0], [425.0, 431.0], [445.0, 1.0], [447.0, 0.0], [436.0, 1.0], [435.0, 427.0], [434.0, 428.0], [433.0, 435.0], [432.0, 621.0], [451.0, 443.0], [452.0, 426.0], [459.0, 513.3333333333334], [463.0, 0.0], [476.0, 426.3333333333333], [466.0, 441.0], [467.0, 1.0], [469.0, 425.0], [472.0, 546.0], [471.0, 426.0], [470.0, 431.0], [474.0, 431.0], [473.0, 440.3783783783784], [475.0, 420.0], [477.0, 411.0], [478.0, 415.5], [479.0, 0.0], [1.0, 1107.0]], "isOverall": false, "label": "contact Request", "isController": false}, {"data": [[260.9625246548323, 4319.331360946748]], "isOverall": false, "label": "contact Request-Aggregated", "isController": false}, {"data": [[68.0, 1296.0], [71.0, 1411.0], [72.0, 1387.0], [75.0, 1394.0], [76.0, 1496.0], [79.0, 1480.0], [81.0, 1434.0], [84.0, 1556.0], [86.0, 1562.0], [87.0, 1534.0], [89.0, 1618.0], [91.0, 1581.0], [96.0, 1635.0], [97.0, 1712.0], [103.0, 1712.0], [104.0, 1789.0], [105.0, 1767.0], [108.0, 1772.0], [111.0, 1850.0], [113.0, 1840.0], [115.0, 1859.0], [118.0, 1936.0], [119.0, 1884.0], [122.0, 1906.0], [124.0, 2009.0], [125.0, 1983.0], [126.0, 1930.0], [129.0, 2026.0], [133.0, 1974.0], [134.0, 2059.5], [139.0, 2138.0], [140.0, 2128.0], [141.0, 2104.0], [145.0, 2178.0], [148.0, 2193.5], [149.0, 2175.0], [153.0, 2252.0], [158.0, 2311.0], [159.0, 2308.0], [160.0, 2316.0], [164.0, 2329.0], [167.0, 2417.0], [168.0, 2457.0], [173.0, 2471.0], [176.0, 2541.0], [177.0, 2504.0], [181.0, 2551.0], [183.0, 2639.0], [184.0, 2638.0], [186.0, 2604.0], [187.0, 2598.0], [190.0, 2709.0], [195.0, 2763.0], [196.0, 2721.0], [198.0, 2795.0], [202.0, 2766.0], [203.0, 2840.0], [204.0, 2878.0], [210.0, 2940.0], [213.0, 2964.0], [216.0, 2999.5], [219.0, 3031.0], [223.0, 3089.0], [225.0, 3116.0], [227.0, 3106.0], [230.0, 3188.0], [232.0, 3197.0], [234.0, 3209.0], [241.0, 3321.0], [244.0, 3355.0], [245.0, 3325.0], [247.0, 3347.0], [249.0, 3422.0], [252.0, 3438.0], [255.0, 3468.0], [256.0, 3435.0], [259.0, 3520.5], [265.0, 3581.0], [266.0, 3600.0], [268.0, 3610.0], [270.0, 3637.0], [273.0, 3625.0], [274.0, 3683.0], [277.0, 3734.0], [280.0, 3753.0], [282.0, 3778.0], [285.0, 3775.6666666666665], [289.0, 3845.0], [292.0, 3896.0], [294.0, 3881.0], [297.0, 3891.0], [298.0, 3957.0], [300.0, 3965.0], [303.0, 3986.0], [308.0, 4037.0], [309.0, 4073.0], [313.0, 4100.0], [316.0, 4121.666666666667], [320.0, 4183.0], [323.0, 4214.0], [324.0, 4196.0], [326.0, 4240.0], [329.0, 4278.0], [331.0, 4286.0], [333.0, 4316.0], [336.0, 4301.0], [337.0, 4359.0], [341.0, 4419.5], [342.0, 4399.0], [344.0, 4408.0], [348.0, 4476.0], [349.0, 4464.0], [355.0, 4506.0], [358.0, 4635.0], [360.0, 4652.0], [363.0, 4641.0], [364.0, 4676.5], [371.0, 4739.666666666667], [376.0, 4822.0], [380.0, 4782.0], [382.0, 4906.25], [390.0, 4935.0], [394.0, 9247.25], [395.0, 7864.5], [399.0, 9563.75], [398.0, 11028.5], [397.0, 10800.4], [396.0, 10747.0], [388.0, 10835.0], [415.0, 7226.8], [402.0, 9596.75], [404.0, 10613.846153846154], [405.0, 10428.190476190475], [407.0, 9930.77777777778], [401.0, 11155.5], [400.0, 11138.2], [406.0, 10074.714285714286], [410.0, 8915.583333333334], [413.0, 9175.5], [412.0, 9517.937500000002], [403.0, 11114.333333333334], [411.0, 9501.000000000002], [409.0, 9719.5], [408.0, 9813.75], [419.0, 5355.0], [421.0, 5365.0], [420.0, 7349.0], [424.0, 5474.0], [426.0, 6272.0], [429.0, 5494.0], [430.0, 7060.5], [425.0, 7191.25], [423.0, 7250.0], [418.0, 7376.5], [416.0, 7561.615384615385], [422.0, 7308.333333333333], [444.0, 545.0], [432.0, 5393.4], [435.0, 600.0], [436.0, 5589.0], [438.0, 5619.0], [442.0, 5667.0], [443.0, 5680.0], [446.0, 2636.4], [447.0, 3193.0], [450.0, 5753.0], [449.0, 5796.0], [451.0, 1589.2], [460.0, 5952.0], [461.0, 661.0], [462.0, 2275.0], [463.0, 3286.5], [452.0, 608.0], [453.0, 2376.3333333333335], [454.0, 428.0], [456.0, 5849.0], [457.0, 5878.0], [458.0, 435.0], [459.0, 2230.6666666666665], [466.0, 1880.0000000000002], [465.0, 3231.5], [467.0, 648.0], [476.0, 3865.1428571428573], [477.0, 1439.1666666666665], [479.0, 3445.0], [478.0, 428.6666666666667], [468.0, 3190.0], [469.0, 2388.0], [470.0, 4296.333333333333], [471.0, 2321.666666666667], [473.0, 3930.916666666666], [474.0, 403.5], [475.0, 649.0]], "isOverall": false, "label": "home Request", "isController": false}, {"data": [[372.1124260355033, 6040.857988165682]], "isOverall": false, "label": "home Request-Aggregated", "isController": false}, {"data": [[153.0, 1630.0], [156.0, 1761.0], [167.0, 1902.0], [173.0, 1949.0], [180.0, 2080.0], [182.0, 2067.0], [186.0, 2093.0], [196.0, 2220.0], [198.0, 2220.0], [208.0, 2376.0], [210.0, 2379.0], [222.0, 2503.0], [226.0, 2594.0], [229.0, 2633.0], [239.0, 2723.0], [245.0, 2822.0], [249.0, 2890.0], [251.0, 2853.0], [258.0, 2943.0], [265.0, 3045.0], [267.0, 3024.0], [277.0, 3180.0], [278.0, 3194.0], [280.0, 3156.0], [287.0, 7019.5], [284.0, 6780.111111111111], [291.0, 3322.0], [292.0, 5843.333333333333], [300.0, 6826.625], [301.0, 3428.0], [302.0, 7577.0], [299.0, 7045.0], [297.0, 7195.0], [295.0, 7089.666666666667], [289.0, 7028.0], [294.0, 7061.0], [306.0, 5497.0], [309.0, 6827.8], [311.0, 3543.0], [317.0, 7847.0], [316.0, 7869.0], [313.0, 7850.5], [310.0, 7699.5], [307.0, 7558.0], [332.0, 6750.666666666667], [321.0, 7085.0], [322.0, 6943.25], [324.0, 3672.0], [334.0, 8245.40909090909], [331.0, 8231.6], [330.0, 8220.4], [328.0, 8143.0], [326.0, 8097.5], [325.0, 8111.0], [336.0, 6777.333333333333], [339.0, 7367.0], [340.0, 7538.333333333334], [349.0, 9028.0], [343.0, 8650.0], [338.0, 8258.0], [337.0, 8245.0], [355.0, 4047.0], [356.0, 4057.0], [365.0, 4132.0], [366.0, 4147.0], [369.0, 4181.0], [377.0, 4257.0], [382.0, 4407.5], [379.0, 10762.0], [398.0, 4491.0], [397.0, 7357.9], [395.0, 10466.5], [392.0, 10426.0], [391.0, 10484.0], [389.0, 10387.0], [384.0, 10399.0], [415.0, 1433.0], [411.0, 2342.0625000000005], [413.0, 5821.150000000001], [412.0, 4959.777777777777], [410.0, 7599.5], [409.0, 158.66666666666666], [408.0, 6971.25], [407.0, 4730.833333333333], [400.0, 10698.0], [403.0, 132.5], [401.0, 5533.0], [406.0, 4853.5], [405.0, 5321.0], [404.0, 166.3125], [429.0, 1.0], [421.0, 3908.666666666667], [420.0, 0.0], [422.0, 2249.6666666666665], [423.0, 43.0], [418.0, 0.0], [416.0, 2451.4], [425.0, 1112.0], [426.0, 1315.2], [427.0, 4941.0], [431.0, 4986.0], [430.0, 3243.0], [444.0, 5165.0], [432.0, 1907.0], [434.0, 4999.0], [436.0, 3213.0], [438.0, 1.0], [442.0, 0.0], [443.0, 1.0], [446.0, 0.0], [447.0, 0.0], [460.0, 1.0], [449.0, 2598.5], [450.0, 2609.5], [452.0, 214.0], [453.0, 0.0], [456.0, 0.5], [457.0, 2667.0], [459.0, 204.0], [458.0, 5320.0], [461.0, 214.0], [462.0, 212.5], [463.0, 215.5], [465.0, 0.5], [464.0, 5456.0], [466.0, 1198.0], [467.0, 414.0], [468.0, 0.0], [469.0, 0.0], [470.0, 143.33333333333331], [472.0, 2205.6666666666665], [479.0, 115.0], [478.0, 2316.333333333333], [476.0, 773.5833333333335], [477.0, 3835.0], [473.0, 1005.9347826086957], [474.0, 419.5], [475.0, 423.5], [471.0, 227.5]], "isOverall": false, "label": "about Request", "isController": false}, {"data": [[389.5877712031559, 4143.875739644968]], "isOverall": false, "label": "about Request-Aggregated", "isController": false}, {"data": [[135.0, 3968.0], [132.0, 3926.8], [131.0, 3706.0], [142.0, 4193.0], [140.0, 4160.0], [138.0, 4148.666666666667], [137.0, 4060.5], [151.0, 4445.666666666667], [150.0, 4400.0], [149.0, 4363.0], [147.0, 4315.0], [146.0, 4308.0], [145.0, 4298.0], [144.0, 4298.0], [156.0, 4560.0], [154.0, 4562.666666666667], [165.0, 4802.5], [163.0, 4683.25], [160.0, 4628.4], [173.0, 4952.666666666667], [172.0, 4951.0], [171.0, 4990.0], [170.0, 4856.0], [169.0, 4869.0], [183.0, 5124.0], [181.0, 5129.0], [180.0, 5162.5], [179.0, 5173.0], [178.0, 5156.5], [177.0, 5024.5], [176.0, 4977.0], [189.0, 5244.666666666667], [188.0, 5256.0], [198.0, 5246.0], [197.0, 5242.0], [196.0, 5249.0], [195.0, 5253.0], [193.0, 5199.333333333333], [207.0, 5296.0], [206.0, 5276.0], [204.0, 5302.0], [203.0, 5292.333333333333], [202.0, 5295.0], [201.0, 5182.25], [200.0, 5192.0], [215.0, 5356.0], [214.0, 5255.0], [213.0, 5259.666666666667], [211.0, 5282.0], [210.0, 5264.0], [209.0, 5251.0], [208.0, 5276.5], [218.0, 5428.0], [224.0, 5580.0], [287.0, 6735.0], [284.0, 6569.529411764706], [296.0, 7282.0], [300.0, 7349.428571428572], [299.0, 7328.5], [298.0, 7401.0], [297.0, 7333.0], [295.0, 7225.5], [294.0, 7189.0], [293.0, 6595.0], [292.0, 7227.0], [317.0, 8027.0], [318.0, 8083.0], [316.0, 7986.0], [315.0, 7905.5], [314.0, 7951.0], [313.0, 7951.0], [310.0, 7824.0], [309.0, 7843.0], [306.0, 7649.0], [305.0, 7571.0], [304.0, 7604.0], [334.0, 8027.625], [335.0, 8126.0], [333.0, 8519.666666666666], [331.0, 8454.0], [330.0, 8346.42857142857], [329.0, 8306.0], [328.0, 8333.5], [322.0, 8202.5], [321.0, 8103.0], [339.0, 8053.0], [349.0, 8817.333333333334], [344.0, 3837.0], [348.0, 8548.0], [347.0, 9368.0], [343.0, 8784.2], [342.0, 8050.0], [340.0, 8065.0], [338.0, 8116.5], [337.0, 8176.0], [336.0, 8176.0], [364.0, 9863.666666666666], [352.0, 7313.0], [354.0, 9522.666666666666], [353.0, 9188.666666666666], [363.0, 9741.0], [362.0, 9681.0], [361.0, 9601.5], [360.0, 9643.333333333334], [359.0, 9591.666666666666], [358.0, 9543.666666666666], [357.0, 9476.0], [380.0, 9971.0], [377.0, 4199.0], [382.0, 8137.666666666667], [383.0, 10207.5], [376.0, 10026.5], [374.0, 10027.0], [371.0, 9990.25], [370.0, 9879.0], [368.0, 9885.5], [399.0, 10256.0], [397.0, 7730.0], [396.0, 3509.3333333333335], [395.0, 10224.0], [392.0, 10221.0], [389.0, 10182.0], [388.0, 10195.5], [385.0, 10203.0], [413.0, 5410.260869565217], [412.0, 4626.0], [403.0, 10663.0], [402.0, 10641.666666666666], [401.0, 5284.0], [400.0, 10381.25], [415.0, 4784.0], [411.0, 4455.75], [410.0, 3423.000000000001], [408.0, 2303.5], [407.0, 13.666666666666666], [406.0, 3171.0], [405.0, 2473.4166666666665], [404.0, 10671.0], [418.0, 6727.0], [423.0, 1963.6666666666665], [417.0, 5707.0], [416.0, 876.5], [421.0, 1.0], [427.0, 3226.0], [431.0, 1.0], [430.0, 2150.3333333333335], [426.0, 301.0], [425.0, 0.0], [422.0, 2219.6666666666665], [432.0, 357.1666666666667], [434.0, 273.3333333333333], [442.0, 446.0], [445.0, 5040.0], [444.0, 0.0], [446.0, 437.0], [447.0, 5077.5], [436.0, 3170.0], [450.0, 1.0], [449.0, 0.0], [451.0, 440.0], [455.0, 431.0], [457.0, 0.0], [458.0, 340.5], [459.0, 424.0], [462.0, 415.0], [463.0, 5315.0], [467.0, 2915.0], [464.0, 0.0], [466.0, 344.66666666666663], [465.0, 441.0], [469.0, 409.0], [472.0, 204.0], [479.0, 5761.0], [478.0, 364.5], [473.0, 744.6730769230769], [474.0, 401.5], [477.0, 213.75], [476.0, 374.8888888888889]], "isOverall": false, "label": "services Request", "isController": false}, {"data": [[341.90927021696257, 4975.850098619323]], "isOverall": false, "label": "services Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 479.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1394.2666666666667, "minX": 1.71704634E12, "maxY": 1026455.4, "series": [{"data": [[1.7170464E12, 501879.56666666665], [1.71704634E12, 1026455.4]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7170464E12, 1845.6333333333334], [1.71704634E12, 1394.2666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7170464E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 697.3300970873787, "minX": 1.71704634E12, "maxY": 10985.285714285716, "series": [{"data": [[1.7170464E12, 5242.762376237619], [1.71704634E12, 697.3300970873787]], "isOverall": false, "label": "contact Request", "isController": false}, {"data": [[1.7170464E12, 10985.285714285716], [1.71704634E12, 5674.216101694918]], "isOverall": false, "label": "home Request", "isController": false}, {"data": [[1.7170464E12, 7701.142857142859], [1.71704634E12, 2691.3249999999985]], "isOverall": false, "label": "about Request", "isController": false}, {"data": [[1.7170464E12, 7008.549668874168], [1.71704634E12, 1981.336585365853]], "isOverall": false, "label": "services Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7170464E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 459.3203883495145, "minX": 1.71704634E12, "maxY": 10568.65714285714, "series": [{"data": [[1.7170464E12, 5239.460396039603], [1.71704634E12, 459.3203883495145]], "isOverall": false, "label": "contact Request", "isController": false}, {"data": [[1.7170464E12, 10568.65714285714], [1.71704634E12, 5203.218220338982]], "isOverall": false, "label": "home Request", "isController": false}, {"data": [[1.7170464E12, 7495.530612244897], [1.71704634E12, 2515.249999999999]], "isOverall": false, "label": "about Request", "isController": false}, {"data": [[1.7170464E12, 7005.748344370863], [1.71704634E12, 1840.0878048780492]], "isOverall": false, "label": "services Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7170464E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 54.76190476190482, "minX": 1.71704634E12, "maxY": 432.2285714285714, "series": [{"data": [[1.7170464E12, 98.65594059405953], [1.71704634E12, 299.6019417475729]], "isOverall": false, "label": "contact Request", "isController": false}, {"data": [[1.7170464E12, 432.2285714285714], [1.71704634E12, 425.3961864406784]], "isOverall": false, "label": "home Request", "isController": false}, {"data": [[1.7170464E12, 54.76190476190482], [1.71704634E12, 59.055555555555536]], "isOverall": false, "label": "about Request", "isController": false}, {"data": [[1.7170464E12, 213.20198675496673], [1.71704634E12, 163.99024390243906]], "isOverall": false, "label": "services Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7170464E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1107.0, "minX": 1.71704634E12, "maxY": 11223.0, "series": [{"data": [[1.7170464E12, 11223.0], [1.71704634E12, 10973.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7170464E12, 1107.0], [1.71704634E12, 1296.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7170464E12, 10206.5], [1.71704634E12, 9920.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7170464E12, 11141.25], [1.71704634E12, 10905.7]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7170464E12, 6793.5], [1.71704634E12, 6689.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.7170464E12, 10653.75], [1.71704634E12, 10482.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7170464E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 9.0, "maxY": 10833.0, "series": [{"data": [[33.0, 4006.0], [35.0, 4100.0], [38.0, 9161.0], [51.0, 10728.0], [52.0, 10345.5], [54.0, 8603.0], [56.0, 7560.5], [59.0, 8079.0], [60.0, 10833.0], [63.0, 8453.0], [67.0, 5212.0], [66.0, 8230.0], [70.0, 5193.0], [69.0, 9628.0], [78.0, 6005.0], [87.0, 9460.0], [90.0, 4160.5], [109.0, 1933.0], [115.0, 6969.0], [9.0, 1156.0], [170.0, 5859.0], [187.0, 6414.0], [15.0, 1534.0], [25.0, 1983.0], [26.0, 7875.0], [29.0, 3013.0], [31.0, 2329.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[67.0, 1.0], [70.0, 0.0], [69.0, 88.0], [170.0, 421.0], [87.0, 185.5], [187.0, 423.0], [51.0, 153.0], [26.0, 85.5], [52.0, 165.0], [115.0, 395.0], [59.0, 134.0], [60.0, 197.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 187.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 9.0, "maxY": 10620.5, "series": [{"data": [[33.0, 3698.5], [35.0, 3733.0], [38.0, 8166.5], [51.0, 10304.0], [52.0, 10220.0], [54.0, 8576.5], [56.0, 7443.5], [59.0, 7956.0], [60.0, 10620.5], [63.0, 8452.5], [67.0, 4925.0], [66.0, 8058.0], [70.0, 5192.5], [69.0, 9227.0], [78.0, 6004.0], [87.0, 8737.0], [90.0, 4160.0], [109.0, 1932.0], [115.0, 6606.0], [9.0, 1155.0], [170.0, 5468.0], [187.0, 6038.0], [15.0, 1122.0], [25.0, 1578.0], [26.0, 7577.5], [29.0, 2653.0], [31.0, 2011.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[67.0, 0.0], [70.0, 0.0], [69.0, 0.0], [170.0, 0.0], [87.0, 0.0], [187.0, 0.0], [51.0, 0.0], [26.0, 0.0], [52.0, 0.0], [115.0, 0.0], [59.0, 0.0], [60.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 187.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 8.066666666666666, "minX": 1.71704634E12, "maxY": 25.733333333333334, "series": [{"data": [[1.7170464E12, 8.066666666666666], [1.71704634E12, 25.733333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7170464E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.23333333333333334, "minX": 1.71704634E12, "maxY": 14.566666666666666, "series": [{"data": [[1.7170464E12, 14.566666666666666], [1.71704634E12, 10.15]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.71704634E12, 3.216666666666667]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLHandshakeException", "isController": false}, {"data": [[1.71704634E12, 1.3166666666666667]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.7170464E12, 0.23333333333333334], [1.71704634E12, 4.316666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7170464E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.71704634E12, "maxY": 6.716666666666667, "series": [{"data": [[1.7170464E12, 0.06666666666666667], [1.71704634E12, 2.566666666666667]], "isOverall": false, "label": "services Request-failure", "isController": false}, {"data": [[1.7170464E12, 0.5833333333333334], [1.71704634E12, 6.716666666666667]], "isOverall": false, "label": "home Request-success", "isController": false}, {"data": [[1.7170464E12, 4.966666666666667], [1.71704634E12, 0.85]], "isOverall": false, "label": "services Request-success", "isController": false}, {"data": [[1.71704634E12, 1.15]], "isOverall": false, "label": "home Request-failure", "isController": false}, {"data": [[1.7170464E12, 0.03333333333333333], [1.71704634E12, 1.65]], "isOverall": false, "label": "contact Request-failure", "isController": false}, {"data": [[1.7170464E12, 0.13333333333333333], [1.71704634E12, 3.4833333333333334]], "isOverall": false, "label": "about Request-failure", "isController": false}, {"data": [[1.7170464E12, 2.316666666666667], [1.71704634E12, 2.5166666666666666]], "isOverall": false, "label": "about Request-success", "isController": false}, {"data": [[1.7170464E12, 6.7], [1.71704634E12, 0.06666666666666667]], "isOverall": false, "label": "contact Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7170464E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.23333333333333334, "minX": 1.71704634E12, "maxY": 14.566666666666666, "series": [{"data": [[1.7170464E12, 14.566666666666666], [1.71704634E12, 10.15]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.7170464E12, 0.23333333333333334], [1.71704634E12, 8.85]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7170464E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

