/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 11847.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 11.0], [3.9, 11.0], [4.0, 84.0], [4.1, 84.0], [4.2, 96.0], [4.3, 96.0], [4.4, 156.0], [4.5, 156.0], [4.6, 162.0], [4.7, 162.0], [4.8, 166.0], [4.9, 166.0], [5.0, 180.0], [5.1, 211.0], [5.2, 211.0], [5.3, 211.0], [5.4, 211.0], [5.5, 392.0], [5.6, 392.0], [5.7, 395.0], [5.8, 395.0], [5.9, 395.0], [6.0, 395.0], [6.1, 397.0], [6.2, 397.0], [6.3, 398.0], [6.4, 398.0], [6.5, 398.0], [6.6, 398.0], [6.7, 404.0], [6.8, 404.0], [6.9, 407.0], [7.0, 407.0], [7.1, 407.0], [7.2, 407.0], [7.3, 413.0], [7.4, 413.0], [7.5, 415.0], [7.6, 415.0], [7.7, 422.0], [7.8, 422.0], [7.9, 422.0], [8.0, 422.0], [8.1, 423.0], [8.2, 423.0], [8.3, 423.0], [8.4, 423.0], [8.5, 423.0], [8.6, 423.0], [8.7, 425.0], [8.8, 425.0], [8.9, 426.0], [9.0, 426.0], [9.1, 426.0], [9.2, 426.0], [9.3, 426.0], [9.4, 426.0], [9.5, 427.0], [9.6, 427.0], [9.7, 427.0], [9.8, 427.0], [9.9, 428.0], [10.0, 428.0], [10.1, 429.0], [10.2, 429.0], [10.3, 429.0], [10.4, 430.0], [10.5, 430.0], [10.6, 432.0], [10.7, 432.0], [10.8, 433.0], [10.9, 433.0], [11.0, 438.0], [11.1, 438.0], [11.2, 438.0], [11.3, 438.0], [11.4, 443.0], [11.5, 443.0], [11.6, 443.0], [11.7, 443.0], [11.8, 443.0], [11.9, 443.0], [12.0, 445.0], [12.1, 445.0], [12.2, 457.0], [12.3, 457.0], [12.4, 461.0], [12.5, 461.0], [12.6, 462.0], [12.7, 462.0], [12.8, 462.0], [12.9, 462.0], [13.0, 463.0], [13.1, 463.0], [13.2, 464.0], [13.3, 464.0], [13.4, 467.0], [13.5, 467.0], [13.6, 467.0], [13.7, 467.0], [13.8, 468.0], [13.9, 468.0], [14.0, 470.0], [14.1, 470.0], [14.2, 473.0], [14.3, 473.0], [14.4, 476.0], [14.5, 476.0], [14.6, 477.0], [14.7, 477.0], [14.8, 479.0], [14.9, 479.0], [15.0, 480.0], [15.1, 480.0], [15.2, 480.0], [15.3, 481.0], [15.4, 481.0], [15.5, 485.0], [15.6, 485.0], [15.7, 486.0], [15.8, 486.0], [15.9, 488.0], [16.0, 488.0], [16.1, 489.0], [16.2, 489.0], [16.3, 498.0], [16.4, 498.0], [16.5, 499.0], [16.6, 499.0], [16.7, 501.0], [16.8, 501.0], [16.9, 503.0], [17.0, 503.0], [17.1, 505.0], [17.2, 505.0], [17.3, 509.0], [17.4, 509.0], [17.5, 513.0], [17.6, 513.0], [17.7, 590.0], [17.8, 590.0], [17.9, 613.0], [18.0, 613.0], [18.1, 615.0], [18.2, 615.0], [18.3, 626.0], [18.4, 626.0], [18.5, 630.0], [18.6, 630.0], [18.7, 642.0], [18.8, 642.0], [18.9, 647.0], [19.0, 647.0], [19.1, 657.0], [19.2, 657.0], [19.3, 672.0], [19.4, 672.0], [19.5, 677.0], [19.6, 677.0], [19.7, 680.0], [19.8, 680.0], [19.9, 686.0], [20.0, 693.0], [20.1, 693.0], [20.2, 698.0], [20.3, 698.0], [20.4, 708.0], [20.5, 708.0], [20.6, 1639.0], [20.7, 1639.0], [20.8, 1645.0], [20.9, 1645.0], [21.0, 1664.0], [21.1, 1664.0], [21.2, 1682.0], [21.3, 1682.0], [21.4, 1693.0], [21.5, 1693.0], [21.6, 1693.0], [21.7, 1693.0], [21.8, 1703.0], [21.9, 1703.0], [22.0, 1706.0], [22.1, 1706.0], [22.2, 1735.0], [22.3, 1735.0], [22.4, 1742.0], [22.5, 1742.0], [22.6, 1744.0], [22.7, 1744.0], [22.8, 1746.0], [22.9, 1746.0], [23.0, 1751.0], [23.1, 1751.0], [23.2, 1768.0], [23.3, 1768.0], [23.4, 1769.0], [23.5, 1769.0], [23.6, 1775.0], [23.7, 1775.0], [23.8, 1775.0], [23.9, 1775.0], [24.0, 1779.0], [24.1, 1779.0], [24.2, 1791.0], [24.3, 1791.0], [24.4, 1794.0], [24.5, 1794.0], [24.6, 1796.0], [24.7, 1796.0], [24.8, 1800.0], [24.9, 1800.0], [25.0, 1802.0], [25.1, 1809.0], [25.2, 1809.0], [25.3, 1827.0], [25.4, 1827.0], [25.5, 1831.0], [25.6, 1831.0], [25.7, 1832.0], [25.8, 1832.0], [25.9, 1846.0], [26.0, 1846.0], [26.1, 1855.0], [26.2, 1855.0], [26.3, 1861.0], [26.4, 1861.0], [26.5, 1868.0], [26.6, 1868.0], [26.7, 1871.0], [26.8, 1871.0], [26.9, 1882.0], [27.0, 1882.0], [27.1, 1882.0], [27.2, 1882.0], [27.3, 1893.0], [27.4, 1893.0], [27.5, 1916.0], [27.6, 1916.0], [27.7, 1929.0], [27.8, 1929.0], [27.9, 1932.0], [28.0, 1932.0], [28.1, 1949.0], [28.2, 1949.0], [28.3, 1949.0], [28.4, 1949.0], [28.5, 1964.0], [28.6, 1964.0], [28.7, 1973.0], [28.8, 1973.0], [28.9, 1991.0], [29.0, 1991.0], [29.1, 1992.0], [29.2, 1992.0], [29.3, 1995.0], [29.4, 1995.0], [29.5, 2003.0], [29.6, 2003.0], [29.7, 2011.0], [29.8, 2011.0], [29.9, 2015.0], [30.0, 2016.0], [30.1, 2016.0], [30.2, 2018.0], [30.3, 2018.0], [30.4, 2018.0], [30.5, 2018.0], [30.6, 2022.0], [30.7, 2022.0], [30.8, 2024.0], [30.9, 2024.0], [31.0, 2024.0], [31.1, 2024.0], [31.2, 2029.0], [31.3, 2029.0], [31.4, 2033.0], [31.5, 2033.0], [31.6, 2034.0], [31.7, 2034.0], [31.8, 2039.0], [31.9, 2039.0], [32.0, 2041.0], [32.1, 2041.0], [32.2, 2045.0], [32.3, 2045.0], [32.4, 2046.0], [32.5, 2046.0], [32.6, 2046.0], [32.7, 2046.0], [32.8, 2047.0], [32.9, 2047.0], [33.0, 2052.0], [33.1, 2052.0], [33.2, 2067.0], [33.3, 2067.0], [33.4, 2072.0], [33.5, 2072.0], [33.6, 2073.0], [33.7, 2073.0], [33.8, 2073.0], [33.9, 2073.0], [34.0, 2086.0], [34.1, 2086.0], [34.2, 2104.0], [34.3, 2104.0], [34.4, 2107.0], [34.5, 2107.0], [34.6, 2113.0], [34.7, 2113.0], [34.8, 2116.0], [34.9, 2116.0], [35.0, 2120.0], [35.1, 2126.0], [35.2, 2126.0], [35.3, 2135.0], [35.4, 2135.0], [35.5, 2142.0], [35.6, 2142.0], [35.7, 2145.0], [35.8, 2145.0], [35.9, 2147.0], [36.0, 2147.0], [36.1, 2150.0], [36.2, 2150.0], [36.3, 2157.0], [36.4, 2157.0], [36.5, 2158.0], [36.6, 2158.0], [36.7, 2160.0], [36.8, 2160.0], [36.9, 2165.0], [37.0, 2165.0], [37.1, 2167.0], [37.2, 2167.0], [37.3, 2168.0], [37.4, 2168.0], [37.5, 2170.0], [37.6, 2170.0], [37.7, 2174.0], [37.8, 2174.0], [37.9, 2180.0], [38.0, 2180.0], [38.1, 2183.0], [38.2, 2183.0], [38.3, 2183.0], [38.4, 2183.0], [38.5, 2195.0], [38.6, 2195.0], [38.7, 2196.0], [38.8, 2196.0], [38.9, 2200.0], [39.0, 2200.0], [39.1, 2208.0], [39.2, 2208.0], [39.3, 2212.0], [39.4, 2212.0], [39.5, 2217.0], [39.6, 2217.0], [39.7, 2222.0], [39.8, 2222.0], [39.9, 2224.0], [40.0, 2230.0], [40.1, 2230.0], [40.2, 2232.0], [40.3, 2232.0], [40.4, 2234.0], [40.5, 2234.0], [40.6, 2253.0], [40.7, 2253.0], [40.8, 2254.0], [40.9, 2254.0], [41.0, 2255.0], [41.1, 2255.0], [41.2, 2260.0], [41.3, 2260.0], [41.4, 2263.0], [41.5, 2263.0], [41.6, 2270.0], [41.7, 2270.0], [41.8, 2290.0], [41.9, 2290.0], [42.0, 2303.0], [42.1, 2303.0], [42.2, 2310.0], [42.3, 2310.0], [42.4, 2317.0], [42.5, 2317.0], [42.6, 2324.0], [42.7, 2324.0], [42.8, 2327.0], [42.9, 2327.0], [43.0, 2339.0], [43.1, 2339.0], [43.2, 2340.0], [43.3, 2340.0], [43.4, 2341.0], [43.5, 2341.0], [43.6, 2356.0], [43.7, 2356.0], [43.8, 2359.0], [43.9, 2359.0], [44.0, 2363.0], [44.1, 2363.0], [44.2, 2365.0], [44.3, 2365.0], [44.4, 2367.0], [44.5, 2367.0], [44.6, 2369.0], [44.7, 2369.0], [44.8, 2371.0], [44.9, 2371.0], [45.0, 2371.0], [45.1, 2399.0], [45.2, 2399.0], [45.3, 2400.0], [45.4, 2400.0], [45.5, 2403.0], [45.6, 2403.0], [45.7, 2405.0], [45.8, 2405.0], [45.9, 2426.0], [46.0, 2426.0], [46.1, 2435.0], [46.2, 2435.0], [46.3, 2444.0], [46.4, 2444.0], [46.5, 2445.0], [46.6, 2445.0], [46.7, 2446.0], [46.8, 2446.0], [46.9, 2447.0], [47.0, 2447.0], [47.1, 2467.0], [47.2, 2467.0], [47.3, 2469.0], [47.4, 2469.0], [47.5, 2472.0], [47.6, 2472.0], [47.7, 2474.0], [47.8, 2474.0], [47.9, 2474.0], [48.0, 2474.0], [48.1, 2480.0], [48.2, 2480.0], [48.3, 2491.0], [48.4, 2491.0], [48.5, 2492.0], [48.6, 2492.0], [48.7, 2513.0], [48.8, 2513.0], [48.9, 2518.0], [49.0, 2518.0], [49.1, 2522.0], [49.2, 2522.0], [49.3, 2524.0], [49.4, 2524.0], [49.5, 2527.0], [49.6, 2527.0], [49.7, 2531.0], [49.8, 2531.0], [49.9, 2537.0], [50.0, 2542.0], [50.1, 2542.0], [50.2, 2545.0], [50.3, 2545.0], [50.4, 2551.0], [50.5, 2551.0], [50.6, 2551.0], [50.7, 2551.0], [50.8, 2580.0], [50.9, 2580.0], [51.0, 2581.0], [51.1, 2581.0], [51.2, 2589.0], [51.3, 2589.0], [51.4, 2611.0], [51.5, 2611.0], [51.6, 2618.0], [51.7, 2618.0], [51.8, 2619.0], [51.9, 2619.0], [52.0, 2624.0], [52.1, 2624.0], [52.2, 2625.0], [52.3, 2625.0], [52.4, 2647.0], [52.5, 2647.0], [52.6, 2668.0], [52.7, 2668.0], [52.8, 2688.0], [52.9, 2688.0], [53.0, 2700.0], [53.1, 2700.0], [53.2, 3014.0], [53.3, 3014.0], [53.4, 3021.0], [53.5, 3021.0], [53.6, 3031.0], [53.7, 3031.0], [53.8, 3082.0], [53.9, 3082.0], [54.0, 3104.0], [54.1, 3104.0], [54.2, 3158.0], [54.3, 3158.0], [54.4, 3180.0], [54.5, 3180.0], [54.6, 3197.0], [54.7, 3197.0], [54.8, 3198.0], [54.9, 3198.0], [55.0, 3258.0], [55.1, 3260.0], [55.2, 3260.0], [55.3, 3262.0], [55.4, 3262.0], [55.5, 3269.0], [55.6, 3269.0], [55.7, 3276.0], [55.8, 3276.0], [55.9, 3288.0], [56.0, 3288.0], [56.1, 3302.0], [56.2, 3302.0], [56.3, 3349.0], [56.4, 3349.0], [56.5, 3493.0], [56.6, 3493.0], [56.7, 3497.0], [56.8, 3497.0], [56.9, 3571.0], [57.0, 3571.0], [57.1, 3580.0], [57.2, 3580.0], [57.3, 3589.0], [57.4, 3589.0], [57.5, 3637.0], [57.6, 3637.0], [57.7, 3647.0], [57.8, 3647.0], [57.9, 3655.0], [58.0, 3655.0], [58.1, 3745.0], [58.2, 3745.0], [58.3, 3772.0], [58.4, 3772.0], [58.5, 3799.0], [58.6, 3799.0], [58.7, 3824.0], [58.8, 3824.0], [58.9, 3900.0], [59.0, 3900.0], [59.1, 3911.0], [59.2, 3911.0], [59.3, 3914.0], [59.4, 3914.0], [59.5, 3919.0], [59.6, 3919.0], [59.7, 3925.0], [59.8, 3925.0], [59.9, 3955.0], [60.0, 4046.0], [60.1, 4046.0], [60.2, 4067.0], [60.3, 4067.0], [60.4, 4090.0], [60.5, 4090.0], [60.6, 4146.0], [60.7, 4146.0], [60.8, 4180.0], [60.9, 4180.0], [61.0, 4204.0], [61.1, 4204.0], [61.2, 4213.0], [61.3, 4213.0], [61.4, 4229.0], [61.5, 4229.0], [61.6, 4313.0], [61.7, 4313.0], [61.8, 4333.0], [61.9, 4333.0], [62.0, 4368.0], [62.1, 4368.0], [62.2, 4373.0], [62.3, 4373.0], [62.4, 4523.0], [62.5, 4523.0], [62.6, 4552.0], [62.7, 4552.0], [62.8, 4586.0], [62.9, 4586.0], [63.0, 4602.0], [63.1, 4602.0], [63.2, 4613.0], [63.3, 4613.0], [63.4, 4642.0], [63.5, 4642.0], [63.6, 4697.0], [63.7, 4697.0], [63.8, 4726.0], [63.9, 4726.0], [64.0, 4754.0], [64.1, 4754.0], [64.2, 4762.0], [64.3, 4762.0], [64.4, 4796.0], [64.5, 4796.0], [64.6, 4810.0], [64.7, 4810.0], [64.8, 4825.0], [64.9, 4825.0], [65.0, 4827.0], [65.1, 4829.0], [65.2, 4829.0], [65.3, 4848.0], [65.4, 4848.0], [65.5, 4863.0], [65.6, 4863.0], [65.7, 4886.0], [65.8, 4886.0], [65.9, 4898.0], [66.0, 4898.0], [66.1, 4945.0], [66.2, 4945.0], [66.3, 4976.0], [66.4, 4976.0], [66.5, 4982.0], [66.6, 4982.0], [66.7, 4987.0], [66.8, 4987.0], [66.9, 4993.0], [67.0, 4993.0], [67.1, 5022.0], [67.2, 5022.0], [67.3, 5044.0], [67.4, 5044.0], [67.5, 5049.0], [67.6, 5049.0], [67.7, 5066.0], [67.8, 5066.0], [67.9, 5092.0], [68.0, 5092.0], [68.1, 5106.0], [68.2, 5106.0], [68.3, 5107.0], [68.4, 5107.0], [68.5, 5128.0], [68.6, 5128.0], [68.7, 5132.0], [68.8, 5132.0], [68.9, 5158.0], [69.0, 5158.0], [69.1, 5172.0], [69.2, 5172.0], [69.3, 5177.0], [69.4, 5177.0], [69.5, 5216.0], [69.6, 5216.0], [69.7, 5242.0], [69.8, 5242.0], [69.9, 5253.0], [70.0, 5253.0], [70.1, 5254.0], [70.2, 5303.0], [70.3, 5303.0], [70.4, 5330.0], [70.5, 5330.0], [70.6, 5335.0], [70.7, 5335.0], [70.8, 5336.0], [70.9, 5336.0], [71.0, 5337.0], [71.1, 5337.0], [71.2, 5356.0], [71.3, 5356.0], [71.4, 5358.0], [71.5, 5358.0], [71.6, 5389.0], [71.7, 5389.0], [71.8, 5416.0], [71.9, 5416.0], [72.0, 5438.0], [72.1, 5438.0], [72.2, 5438.0], [72.3, 5438.0], [72.4, 5460.0], [72.5, 5460.0], [72.6, 5462.0], [72.7, 5462.0], [72.8, 5463.0], [72.9, 5463.0], [73.0, 5465.0], [73.1, 5465.0], [73.2, 5473.0], [73.3, 5473.0], [73.4, 5473.0], [73.5, 5473.0], [73.6, 5477.0], [73.7, 5477.0], [73.8, 5478.0], [73.9, 5478.0], [74.0, 5483.0], [74.1, 5483.0], [74.2, 5484.0], [74.3, 5484.0], [74.4, 5485.0], [74.5, 5485.0], [74.6, 5491.0], [74.7, 5491.0], [74.8, 5499.0], [74.9, 5499.0], [75.0, 5525.0], [75.1, 5530.0], [75.2, 5530.0], [75.3, 5554.0], [75.4, 5554.0], [75.5, 5563.0], [75.6, 5563.0], [75.7, 5587.0], [75.8, 5587.0], [75.9, 5596.0], [76.0, 5596.0], [76.1, 5652.0], [76.2, 5652.0], [76.3, 5693.0], [76.4, 5693.0], [76.5, 5697.0], [76.6, 5697.0], [76.7, 5704.0], [76.8, 5704.0], [76.9, 5714.0], [77.0, 5714.0], [77.1, 5728.0], [77.2, 5728.0], [77.3, 5743.0], [77.4, 5743.0], [77.5, 5828.0], [77.6, 5828.0], [77.7, 5893.0], [77.8, 5893.0], [77.9, 6001.0], [78.0, 6001.0], [78.1, 6004.0], [78.2, 6004.0], [78.3, 6035.0], [78.4, 6035.0], [78.5, 6095.0], [78.6, 6095.0], [78.7, 6579.0], [78.8, 6579.0], [78.9, 6620.0], [79.0, 6620.0], [79.1, 6633.0], [79.2, 6633.0], [79.3, 6682.0], [79.4, 6682.0], [79.5, 6741.0], [79.6, 6741.0], [79.7, 6753.0], [79.8, 6753.0], [79.9, 6857.0], [80.0, 6857.0], [80.1, 6895.0], [80.2, 6931.0], [80.3, 6931.0], [80.4, 7019.0], [80.5, 7019.0], [80.6, 7044.0], [80.7, 7044.0], [80.8, 7131.0], [80.9, 7131.0], [81.0, 7183.0], [81.1, 7183.0], [81.2, 7197.0], [81.3, 7197.0], [81.4, 7265.0], [81.5, 7265.0], [81.6, 7397.0], [81.7, 7397.0], [81.8, 7475.0], [81.9, 7475.0], [82.0, 7525.0], [82.1, 7525.0], [82.2, 7564.0], [82.3, 7564.0], [82.4, 7609.0], [82.5, 7609.0], [82.6, 7643.0], [82.7, 7643.0], [82.8, 7649.0], [82.9, 7649.0], [83.0, 7733.0], [83.1, 7733.0], [83.2, 7733.0], [83.3, 7733.0], [83.4, 7819.0], [83.5, 7819.0], [83.6, 7848.0], [83.7, 7848.0], [83.8, 7903.0], [83.9, 7903.0], [84.0, 7919.0], [84.1, 7919.0], [84.2, 7971.0], [84.3, 7971.0], [84.4, 7997.0], [84.5, 7997.0], [84.6, 8030.0], [84.7, 8030.0], [84.8, 8137.0], [84.9, 8137.0], [85.0, 8147.0], [85.1, 8177.0], [85.2, 8177.0], [85.3, 8255.0], [85.4, 8255.0], [85.5, 8295.0], [85.6, 8295.0], [85.7, 8350.0], [85.8, 8350.0], [85.9, 8357.0], [86.0, 8357.0], [86.1, 8363.0], [86.2, 8363.0], [86.3, 8410.0], [86.4, 8410.0], [86.5, 8446.0], [86.6, 8446.0], [86.7, 8506.0], [86.8, 8506.0], [86.9, 8512.0], [87.0, 8512.0], [87.1, 8521.0], [87.2, 8521.0], [87.3, 8525.0], [87.4, 8525.0], [87.5, 8528.0], [87.6, 8528.0], [87.7, 8545.0], [87.8, 8545.0], [87.9, 8595.0], [88.0, 8595.0], [88.1, 8601.0], [88.2, 8601.0], [88.3, 8617.0], [88.4, 8617.0], [88.5, 8822.0], [88.6, 8822.0], [88.7, 8883.0], [88.8, 8883.0], [88.9, 8888.0], [89.0, 8888.0], [89.1, 8931.0], [89.2, 8931.0], [89.3, 8974.0], [89.4, 8974.0], [89.5, 9065.0], [89.6, 9065.0], [89.7, 9067.0], [89.8, 9067.0], [89.9, 9206.0], [90.0, 9206.0], [90.1, 9222.0], [90.2, 9226.0], [90.3, 9226.0], [90.4, 9256.0], [90.5, 9256.0], [90.6, 9271.0], [90.7, 9271.0], [90.8, 9277.0], [90.9, 9277.0], [91.0, 9328.0], [91.1, 9328.0], [91.2, 9382.0], [91.3, 9382.0], [91.4, 9494.0], [91.5, 9494.0], [91.6, 9584.0], [91.7, 9584.0], [91.8, 9621.0], [91.9, 9621.0], [92.0, 9629.0], [92.1, 9629.0], [92.2, 9638.0], [92.3, 9638.0], [92.4, 9644.0], [92.5, 9644.0], [92.6, 9650.0], [92.7, 9650.0], [92.8, 9668.0], [92.9, 9668.0], [93.0, 9674.0], [93.1, 9674.0], [93.2, 9699.0], [93.3, 9699.0], [93.4, 9719.0], [93.5, 9719.0], [93.6, 9742.0], [93.7, 9742.0], [93.8, 9881.0], [93.9, 9881.0], [94.0, 9892.0], [94.1, 9892.0], [94.2, 9934.0], [94.3, 9934.0], [94.4, 9948.0], [94.5, 9948.0], [94.6, 9961.0], [94.7, 9961.0], [94.8, 10030.0], [94.9, 10030.0], [95.0, 10050.0], [95.1, 10052.0], [95.2, 10052.0], [95.3, 10061.0], [95.4, 10061.0], [95.5, 10142.0], [95.6, 10142.0], [95.7, 10162.0], [95.8, 10162.0], [95.9, 10204.0], [96.0, 10204.0], [96.1, 10232.0], [96.2, 10232.0], [96.3, 10233.0], [96.4, 10233.0], [96.5, 10315.0], [96.6, 10315.0], [96.7, 10507.0], [96.8, 10507.0], [96.9, 10523.0], [97.0, 10523.0], [97.1, 10539.0], [97.2, 10539.0], [97.3, 10539.0], [97.4, 10539.0], [97.5, 10562.0], [97.6, 10562.0], [97.7, 10563.0], [97.8, 10563.0], [97.9, 10597.0], [98.0, 10597.0], [98.1, 10647.0], [98.2, 10647.0], [98.3, 10685.0], [98.4, 10685.0], [98.5, 10809.0], [98.6, 10809.0], [98.7, 10817.0], [98.8, 10817.0], [98.9, 10822.0], [99.0, 10822.0], [99.1, 10845.0], [99.2, 10845.0], [99.3, 10882.0], [99.4, 10882.0], [99.5, 11173.0], [99.6, 11173.0], [99.7, 11175.0], [99.8, 11175.0], [99.9, 11214.0], [100.0, 11214.0]], "isOverall": false, "label": "contact Request", "isController": false}, {"data": [[0.0, 393.0], [0.1, 393.0], [0.2, 395.0], [0.3, 395.0], [0.4, 403.0], [0.5, 403.0], [0.6, 404.0], [0.7, 404.0], [0.8, 411.0], [0.9, 411.0], [1.0, 412.0], [1.1, 412.0], [1.2, 417.0], [1.3, 417.0], [1.4, 417.0], [1.5, 417.0], [1.6, 417.0], [1.7, 417.0], [1.8, 418.0], [1.9, 418.0], [2.0, 421.0], [2.1, 421.0], [2.2, 423.0], [2.3, 423.0], [2.4, 425.0], [2.5, 425.0], [2.6, 425.0], [2.7, 425.0], [2.8, 425.0], [2.9, 425.0], [3.0, 426.0], [3.1, 426.0], [3.2, 427.0], [3.3, 427.0], [3.4, 427.0], [3.5, 427.0], [3.6, 427.0], [3.7, 427.0], [3.8, 428.0], [3.9, 428.0], [4.0, 430.0], [4.1, 430.0], [4.2, 431.0], [4.3, 431.0], [4.4, 431.0], [4.5, 431.0], [4.6, 434.0], [4.7, 434.0], [4.8, 436.0], [4.9, 436.0], [5.0, 437.0], [5.1, 438.0], [5.2, 438.0], [5.3, 439.0], [5.4, 439.0], [5.5, 441.0], [5.6, 441.0], [5.7, 442.0], [5.8, 442.0], [5.9, 445.0], [6.0, 445.0], [6.1, 449.0], [6.2, 449.0], [6.3, 455.0], [6.4, 455.0], [6.5, 457.0], [6.6, 457.0], [6.7, 461.0], [6.8, 461.0], [6.9, 462.0], [7.0, 462.0], [7.1, 464.0], [7.2, 464.0], [7.3, 468.0], [7.4, 468.0], [7.5, 472.0], [7.6, 472.0], [7.7, 479.0], [7.8, 479.0], [7.9, 484.0], [8.0, 484.0], [8.1, 487.0], [8.2, 487.0], [8.3, 492.0], [8.4, 492.0], [8.5, 492.0], [8.6, 492.0], [8.7, 496.0], [8.8, 496.0], [8.9, 496.0], [9.0, 496.0], [9.1, 515.0], [9.2, 515.0], [9.3, 516.0], [9.4, 516.0], [9.5, 516.0], [9.6, 516.0], [9.7, 518.0], [9.8, 518.0], [9.9, 521.0], [10.0, 521.0], [10.1, 539.0], [10.2, 551.0], [10.3, 551.0], [10.4, 558.0], [10.5, 558.0], [10.6, 578.0], [10.7, 578.0], [10.8, 610.0], [10.9, 610.0], [11.0, 619.0], [11.1, 619.0], [11.2, 630.0], [11.3, 630.0], [11.4, 634.0], [11.5, 634.0], [11.6, 639.0], [11.7, 639.0], [11.8, 639.0], [11.9, 639.0], [12.0, 648.0], [12.1, 648.0], [12.2, 658.0], [12.3, 658.0], [12.4, 661.0], [12.5, 661.0], [12.6, 665.0], [12.7, 665.0], [12.8, 665.0], [12.9, 665.0], [13.0, 671.0], [13.1, 671.0], [13.2, 677.0], [13.3, 677.0], [13.4, 685.0], [13.5, 685.0], [13.6, 698.0], [13.7, 698.0], [13.8, 700.0], [13.9, 700.0], [14.0, 707.0], [14.1, 707.0], [14.2, 720.0], [14.3, 720.0], [14.4, 729.0], [14.5, 729.0], [14.6, 739.0], [14.7, 739.0], [14.8, 745.0], [14.9, 745.0], [15.0, 756.0], [15.1, 764.0], [15.2, 764.0], [15.3, 781.0], [15.4, 781.0], [15.5, 1283.0], [15.6, 1283.0], [15.7, 1315.0], [15.8, 1315.0], [15.9, 1415.0], [16.0, 1415.0], [16.1, 1421.0], [16.2, 1421.0], [16.3, 1444.0], [16.4, 1444.0], [16.5, 1479.0], [16.6, 1479.0], [16.7, 1497.0], [16.8, 1497.0], [16.9, 1552.0], [17.0, 1552.0], [17.1, 1558.0], [17.2, 1558.0], [17.3, 1570.0], [17.4, 1570.0], [17.5, 1615.0], [17.6, 1615.0], [17.7, 1623.0], [17.8, 1623.0], [17.9, 1624.0], [18.0, 1624.0], [18.1, 1643.0], [18.2, 1643.0], [18.3, 1647.0], [18.4, 1647.0], [18.5, 1658.0], [18.6, 1658.0], [18.7, 1683.0], [18.8, 1683.0], [18.9, 1691.0], [19.0, 1691.0], [19.1, 1694.0], [19.2, 1694.0], [19.3, 1709.0], [19.4, 1709.0], [19.5, 1740.0], [19.6, 1740.0], [19.7, 1783.0], [19.8, 1783.0], [19.9, 1788.0], [20.0, 1798.0], [20.1, 1798.0], [20.2, 1825.0], [20.3, 1825.0], [20.4, 1844.0], [20.5, 1844.0], [20.6, 1845.0], [20.7, 1845.0], [20.8, 1846.0], [20.9, 1846.0], [21.0, 1856.0], [21.1, 1856.0], [21.2, 1870.0], [21.3, 1870.0], [21.4, 1898.0], [21.5, 1898.0], [21.6, 1908.0], [21.7, 1908.0], [21.8, 1921.0], [21.9, 1921.0], [22.0, 1923.0], [22.1, 1923.0], [22.2, 1932.0], [22.3, 1932.0], [22.4, 1937.0], [22.5, 1937.0], [22.6, 1943.0], [22.7, 1943.0], [22.8, 1955.0], [22.9, 1955.0], [23.0, 1967.0], [23.1, 1967.0], [23.2, 1970.0], [23.3, 1970.0], [23.4, 1986.0], [23.5, 1986.0], [23.6, 1988.0], [23.7, 1988.0], [23.8, 2001.0], [23.9, 2001.0], [24.0, 2048.0], [24.1, 2048.0], [24.2, 2050.0], [24.3, 2050.0], [24.4, 2058.0], [24.5, 2058.0], [24.6, 2088.0], [24.7, 2088.0], [24.8, 2088.0], [24.9, 2088.0], [25.0, 2111.0], [25.1, 2124.0], [25.2, 2124.0], [25.3, 2179.0], [25.4, 2179.0], [25.5, 2186.0], [25.6, 2186.0], [25.7, 2209.0], [25.8, 2209.0], [25.9, 2219.0], [26.0, 2219.0], [26.1, 2254.0], [26.2, 2254.0], [26.3, 2255.0], [26.4, 2255.0], [26.5, 2273.0], [26.6, 2273.0], [26.7, 2349.0], [26.8, 2349.0], [26.9, 2357.0], [27.0, 2357.0], [27.1, 2372.0], [27.2, 2372.0], [27.3, 2408.0], [27.4, 2408.0], [27.5, 2413.0], [27.6, 2413.0], [27.7, 2416.0], [27.8, 2416.0], [27.9, 2492.0], [28.0, 2492.0], [28.1, 2516.0], [28.2, 2516.0], [28.3, 2530.0], [28.4, 2530.0], [28.5, 2532.0], [28.6, 2532.0], [28.7, 2548.0], [28.8, 2548.0], [28.9, 2563.0], [29.0, 2563.0], [29.1, 2597.0], [29.2, 2597.0], [29.3, 2652.0], [29.4, 2652.0], [29.5, 2654.0], [29.6, 2654.0], [29.7, 2670.0], [29.8, 2670.0], [29.9, 2693.0], [30.0, 2713.0], [30.1, 2713.0], [30.2, 2721.0], [30.3, 2721.0], [30.4, 2728.0], [30.5, 2728.0], [30.6, 2734.0], [30.7, 2734.0], [30.8, 2786.0], [30.9, 2786.0], [31.0, 2789.0], [31.1, 2789.0], [31.2, 2795.0], [31.3, 2795.0], [31.4, 2801.0], [31.5, 2801.0], [31.6, 2887.0], [31.7, 2887.0], [31.8, 2940.0], [31.9, 2940.0], [32.0, 2961.0], [32.1, 2961.0], [32.2, 2975.0], [32.3, 2975.0], [32.4, 2993.0], [32.5, 2993.0], [32.6, 3045.0], [32.7, 3045.0], [32.8, 3051.0], [32.9, 3051.0], [33.0, 3054.0], [33.1, 3054.0], [33.2, 3066.0], [33.3, 3066.0], [33.4, 3105.0], [33.5, 3105.0], [33.6, 3132.0], [33.7, 3132.0], [33.8, 3169.0], [33.9, 3169.0], [34.0, 3230.0], [34.1, 3230.0], [34.2, 3242.0], [34.3, 3242.0], [34.4, 3246.0], [34.5, 3246.0], [34.6, 3253.0], [34.7, 3253.0], [34.8, 3288.0], [34.9, 3288.0], [35.0, 3384.0], [35.1, 3409.0], [35.2, 3409.0], [35.3, 3432.0], [35.4, 3432.0], [35.5, 3450.0], [35.6, 3450.0], [35.7, 3461.0], [35.8, 3461.0], [35.9, 3573.0], [36.0, 3573.0], [36.1, 3613.0], [36.2, 3613.0], [36.3, 3641.0], [36.4, 3641.0], [36.5, 3658.0], [36.6, 3658.0], [36.7, 3673.0], [36.8, 3673.0], [36.9, 3690.0], [37.0, 3690.0], [37.1, 3742.0], [37.2, 3742.0], [37.3, 3756.0], [37.4, 3756.0], [37.5, 3772.0], [37.6, 3772.0], [37.7, 3833.0], [37.8, 3833.0], [37.9, 3911.0], [38.0, 3911.0], [38.1, 3916.0], [38.2, 3916.0], [38.3, 3973.0], [38.4, 3973.0], [38.5, 3988.0], [38.6, 3988.0], [38.7, 4076.0], [38.8, 4076.0], [38.9, 4077.0], [39.0, 4077.0], [39.1, 4157.0], [39.2, 4157.0], [39.3, 4177.0], [39.4, 4177.0], [39.5, 4199.0], [39.6, 4199.0], [39.7, 4250.0], [39.8, 4250.0], [39.9, 4262.0], [40.0, 4285.0], [40.1, 4285.0], [40.2, 4329.0], [40.3, 4329.0], [40.4, 4399.0], [40.5, 4399.0], [40.6, 4403.0], [40.7, 4403.0], [40.8, 4416.0], [40.9, 4416.0], [41.0, 4455.0], [41.1, 4455.0], [41.2, 4479.0], [41.3, 4479.0], [41.4, 4501.0], [41.5, 4501.0], [41.6, 4507.0], [41.7, 4507.0], [41.8, 4562.0], [41.9, 4562.0], [42.0, 4593.0], [42.1, 4593.0], [42.2, 4727.0], [42.3, 4727.0], [42.4, 4754.0], [42.5, 4754.0], [42.6, 4758.0], [42.7, 4758.0], [42.8, 4808.0], [42.9, 4808.0], [43.0, 4856.0], [43.1, 4856.0], [43.2, 4893.0], [43.3, 4893.0], [43.4, 4910.0], [43.5, 4910.0], [43.6, 4925.0], [43.7, 4925.0], [43.8, 5008.0], [43.9, 5008.0], [44.0, 5032.0], [44.1, 5032.0], [44.2, 5047.0], [44.3, 5047.0], [44.4, 5056.0], [44.5, 5056.0], [44.6, 5064.0], [44.7, 5064.0], [44.8, 5082.0], [44.9, 5082.0], [45.0, 5098.0], [45.1, 5191.0], [45.2, 5191.0], [45.3, 5234.0], [45.4, 5234.0], [45.5, 5271.0], [45.6, 5271.0], [45.7, 5322.0], [45.8, 5322.0], [45.9, 5324.0], [46.0, 5324.0], [46.1, 5373.0], [46.2, 5373.0], [46.3, 5564.0], [46.4, 5564.0], [46.5, 5590.0], [46.6, 5590.0], [46.7, 5593.0], [46.8, 5593.0], [46.9, 5690.0], [47.0, 5690.0], [47.1, 5732.0], [47.2, 5732.0], [47.3, 5762.0], [47.4, 5762.0], [47.5, 5766.0], [47.6, 5766.0], [47.7, 5776.0], [47.8, 5776.0], [47.9, 5926.0], [48.0, 5926.0], [48.1, 6019.0], [48.2, 6019.0], [48.3, 6020.0], [48.4, 6020.0], [48.5, 6048.0], [48.6, 6048.0], [48.7, 6064.0], [48.8, 6064.0], [48.9, 6112.0], [49.0, 6112.0], [49.1, 6139.0], [49.2, 6139.0], [49.3, 6148.0], [49.4, 6148.0], [49.5, 6158.0], [49.6, 6158.0], [49.7, 6185.0], [49.8, 6185.0], [49.9, 6271.0], [50.0, 6281.0], [50.1, 6281.0], [50.2, 6318.0], [50.3, 6318.0], [50.4, 6346.0], [50.5, 6346.0], [50.6, 6368.0], [50.7, 6368.0], [50.8, 6467.0], [50.9, 6467.0], [51.0, 6517.0], [51.1, 6517.0], [51.2, 6529.0], [51.3, 6529.0], [51.4, 6552.0], [51.5, 6552.0], [51.6, 6574.0], [51.7, 6574.0], [51.8, 6602.0], [51.9, 6602.0], [52.0, 6612.0], [52.1, 6612.0], [52.2, 6636.0], [52.3, 6636.0], [52.4, 6703.0], [52.5, 6703.0], [52.6, 6735.0], [52.7, 6735.0], [52.8, 6754.0], [52.9, 6754.0], [53.0, 6867.0], [53.1, 6867.0], [53.2, 6935.0], [53.3, 6935.0], [53.4, 7034.0], [53.5, 7034.0], [53.6, 7047.0], [53.7, 7047.0], [53.8, 7058.0], [53.9, 7058.0], [54.0, 7060.0], [54.1, 7060.0], [54.2, 7074.0], [54.3, 7074.0], [54.4, 7133.0], [54.5, 7133.0], [54.6, 7163.0], [54.7, 7163.0], [54.8, 7183.0], [54.9, 7183.0], [55.0, 7208.0], [55.1, 7272.0], [55.2, 7272.0], [55.3, 7290.0], [55.4, 7290.0], [55.5, 7321.0], [55.6, 7321.0], [55.7, 7369.0], [55.8, 7369.0], [55.9, 7380.0], [56.0, 7380.0], [56.1, 7402.0], [56.2, 7402.0], [56.3, 7415.0], [56.4, 7415.0], [56.5, 7438.0], [56.6, 7438.0], [56.7, 7499.0], [56.8, 7499.0], [56.9, 7500.0], [57.0, 7500.0], [57.1, 7553.0], [57.2, 7553.0], [57.3, 7586.0], [57.4, 7586.0], [57.5, 7594.0], [57.6, 7594.0], [57.7, 7595.0], [57.8, 7595.0], [57.9, 7631.0], [58.0, 7631.0], [58.1, 7682.0], [58.2, 7682.0], [58.3, 7695.0], [58.4, 7695.0], [58.5, 7723.0], [58.6, 7723.0], [58.7, 7804.0], [58.8, 7804.0], [58.9, 7810.0], [59.0, 7810.0], [59.1, 7820.0], [59.2, 7820.0], [59.3, 7854.0], [59.4, 7854.0], [59.5, 7867.0], [59.6, 7867.0], [59.7, 7984.0], [59.8, 7984.0], [59.9, 7997.0], [60.0, 8023.0], [60.1, 8023.0], [60.2, 8086.0], [60.3, 8086.0], [60.4, 8093.0], [60.5, 8093.0], [60.6, 8094.0], [60.7, 8094.0], [60.8, 8138.0], [60.9, 8138.0], [61.0, 8144.0], [61.1, 8144.0], [61.2, 8147.0], [61.3, 8147.0], [61.4, 8156.0], [61.5, 8156.0], [61.6, 8157.0], [61.7, 8157.0], [61.8, 8217.0], [61.9, 8217.0], [62.0, 8238.0], [62.1, 8238.0], [62.2, 8243.0], [62.3, 8243.0], [62.4, 8254.0], [62.5, 8254.0], [62.6, 8271.0], [62.7, 8271.0], [62.8, 8326.0], [62.9, 8326.0], [63.0, 8380.0], [63.1, 8380.0], [63.2, 8394.0], [63.3, 8394.0], [63.4, 8398.0], [63.5, 8398.0], [63.6, 8432.0], [63.7, 8432.0], [63.8, 8490.0], [63.9, 8490.0], [64.0, 8552.0], [64.1, 8552.0], [64.2, 8571.0], [64.3, 8571.0], [64.4, 8595.0], [64.5, 8595.0], [64.6, 8603.0], [64.7, 8603.0], [64.8, 8609.0], [64.9, 8609.0], [65.0, 8633.0], [65.1, 8683.0], [65.2, 8683.0], [65.3, 8722.0], [65.4, 8722.0], [65.5, 8753.0], [65.6, 8753.0], [65.7, 8758.0], [65.8, 8758.0], [65.9, 8789.0], [66.0, 8789.0], [66.1, 8856.0], [66.2, 8856.0], [66.3, 8862.0], [66.4, 8862.0], [66.5, 8866.0], [66.6, 8866.0], [66.7, 8870.0], [66.8, 8870.0], [66.9, 8896.0], [67.0, 8896.0], [67.1, 8908.0], [67.2, 8908.0], [67.3, 8944.0], [67.4, 8944.0], [67.5, 8965.0], [67.6, 8965.0], [67.7, 8967.0], [67.8, 8967.0], [67.9, 8972.0], [68.0, 8972.0], [68.1, 8989.0], [68.2, 8989.0], [68.3, 9028.0], [68.4, 9028.0], [68.5, 9050.0], [68.6, 9050.0], [68.7, 9080.0], [68.8, 9080.0], [68.9, 9118.0], [69.0, 9118.0], [69.1, 9148.0], [69.2, 9148.0], [69.3, 9153.0], [69.4, 9153.0], [69.5, 9230.0], [69.6, 9230.0], [69.7, 9273.0], [69.8, 9273.0], [69.9, 9303.0], [70.0, 9303.0], [70.1, 9337.0], [70.2, 9341.0], [70.3, 9341.0], [70.4, 9349.0], [70.5, 9349.0], [70.6, 9355.0], [70.7, 9355.0], [70.8, 9391.0], [70.9, 9391.0], [71.0, 9432.0], [71.1, 9432.0], [71.2, 9443.0], [71.3, 9443.0], [71.4, 9450.0], [71.5, 9450.0], [71.6, 9461.0], [71.7, 9461.0], [71.8, 9476.0], [71.9, 9476.0], [72.0, 9503.0], [72.1, 9503.0], [72.2, 9519.0], [72.3, 9519.0], [72.4, 9529.0], [72.5, 9529.0], [72.6, 9535.0], [72.7, 9535.0], [72.8, 9539.0], [72.9, 9539.0], [73.0, 9563.0], [73.1, 9563.0], [73.2, 9571.0], [73.3, 9571.0], [73.4, 9613.0], [73.5, 9613.0], [73.6, 9653.0], [73.7, 9653.0], [73.8, 9661.0], [73.9, 9661.0], [74.0, 9695.0], [74.1, 9695.0], [74.2, 9700.0], [74.3, 9700.0], [74.4, 9747.0], [74.5, 9747.0], [74.6, 9801.0], [74.7, 9801.0], [74.8, 9817.0], [74.9, 9817.0], [75.0, 9847.0], [75.1, 9853.0], [75.2, 9853.0], [75.3, 9872.0], [75.4, 9872.0], [75.5, 9872.0], [75.6, 9872.0], [75.7, 9885.0], [75.8, 9885.0], [75.9, 9903.0], [76.0, 9903.0], [76.1, 9904.0], [76.2, 9904.0], [76.3, 9907.0], [76.4, 9907.0], [76.5, 9921.0], [76.6, 9921.0], [76.7, 9956.0], [76.8, 9956.0], [76.9, 9958.0], [77.0, 9958.0], [77.1, 9982.0], [77.2, 9982.0], [77.3, 9985.0], [77.4, 9985.0], [77.5, 9988.0], [77.6, 9988.0], [77.7, 10006.0], [77.8, 10006.0], [77.9, 10070.0], [78.0, 10070.0], [78.1, 10131.0], [78.2, 10131.0], [78.3, 10210.0], [78.4, 10210.0], [78.5, 10270.0], [78.6, 10270.0], [78.7, 10287.0], [78.8, 10287.0], [78.9, 10306.0], [79.0, 10306.0], [79.1, 10314.0], [79.2, 10314.0], [79.3, 10317.0], [79.4, 10317.0], [79.5, 10335.0], [79.6, 10335.0], [79.7, 10339.0], [79.8, 10339.0], [79.9, 10343.0], [80.0, 10343.0], [80.1, 10352.0], [80.2, 10377.0], [80.3, 10377.0], [80.4, 10403.0], [80.5, 10403.0], [80.6, 10408.0], [80.7, 10408.0], [80.8, 10420.0], [80.9, 10420.0], [81.0, 10435.0], [81.1, 10435.0], [81.2, 10467.0], [81.3, 10467.0], [81.4, 10470.0], [81.5, 10470.0], [81.6, 10484.0], [81.7, 10484.0], [81.8, 10497.0], [81.9, 10497.0], [82.0, 10502.0], [82.1, 10502.0], [82.2, 10550.0], [82.3, 10550.0], [82.4, 10574.0], [82.5, 10574.0], [82.6, 10585.0], [82.7, 10585.0], [82.8, 10589.0], [82.9, 10589.0], [83.0, 10630.0], [83.1, 10630.0], [83.2, 10648.0], [83.3, 10648.0], [83.4, 10654.0], [83.5, 10654.0], [83.6, 10674.0], [83.7, 10674.0], [83.8, 10690.0], [83.9, 10690.0], [84.0, 10729.0], [84.1, 10729.0], [84.2, 10754.0], [84.3, 10754.0], [84.4, 10792.0], [84.5, 10792.0], [84.6, 10794.0], [84.7, 10794.0], [84.8, 10802.0], [84.9, 10802.0], [85.0, 10825.0], [85.1, 10832.0], [85.2, 10832.0], [85.3, 10840.0], [85.4, 10840.0], [85.5, 10875.0], [85.6, 10875.0], [85.7, 10888.0], [85.8, 10888.0], [85.9, 10911.0], [86.0, 10911.0], [86.1, 10921.0], [86.2, 10921.0], [86.3, 10964.0], [86.4, 10964.0], [86.5, 10991.0], [86.6, 10991.0], [86.7, 11011.0], [86.8, 11011.0], [86.9, 11033.0], [87.0, 11033.0], [87.1, 11064.0], [87.2, 11064.0], [87.3, 11098.0], [87.4, 11098.0], [87.5, 11108.0], [87.6, 11108.0], [87.7, 11144.0], [87.8, 11144.0], [87.9, 11166.0], [88.0, 11166.0], [88.1, 11171.0], [88.2, 11171.0], [88.3, 11183.0], [88.4, 11183.0], [88.5, 11212.0], [88.6, 11212.0], [88.7, 11219.0], [88.8, 11219.0], [88.9, 11234.0], [89.0, 11234.0], [89.1, 11258.0], [89.2, 11258.0], [89.3, 11268.0], [89.4, 11268.0], [89.5, 11272.0], [89.6, 11272.0], [89.7, 11277.0], [89.8, 11277.0], [89.9, 11280.0], [90.0, 11280.0], [90.1, 11306.0], [90.2, 11307.0], [90.3, 11307.0], [90.4, 11333.0], [90.5, 11333.0], [90.6, 11336.0], [90.7, 11336.0], [90.8, 11357.0], [90.9, 11357.0], [91.0, 11367.0], [91.1, 11367.0], [91.2, 11377.0], [91.3, 11377.0], [91.4, 11381.0], [91.5, 11381.0], [91.6, 11383.0], [91.7, 11383.0], [91.8, 11403.0], [91.9, 11403.0], [92.0, 11447.0], [92.1, 11447.0], [92.2, 11452.0], [92.3, 11452.0], [92.4, 11457.0], [92.5, 11457.0], [92.6, 11461.0], [92.7, 11461.0], [92.8, 11495.0], [92.9, 11495.0], [93.0, 11500.0], [93.1, 11500.0], [93.2, 11505.0], [93.3, 11505.0], [93.4, 11510.0], [93.5, 11510.0], [93.6, 11515.0], [93.7, 11515.0], [93.8, 11546.0], [93.9, 11546.0], [94.0, 11550.0], [94.1, 11550.0], [94.2, 11569.0], [94.3, 11569.0], [94.4, 11571.0], [94.5, 11571.0], [94.6, 11610.0], [94.7, 11610.0], [94.8, 11610.0], [94.9, 11610.0], [95.0, 11615.0], [95.1, 11622.0], [95.2, 11622.0], [95.3, 11625.0], [95.4, 11625.0], [95.5, 11635.0], [95.6, 11635.0], [95.7, 11642.0], [95.8, 11642.0], [95.9, 11649.0], [96.0, 11649.0], [96.1, 11661.0], [96.2, 11661.0], [96.3, 11677.0], [96.4, 11677.0], [96.5, 11679.0], [96.6, 11679.0], [96.7, 11682.0], [96.8, 11682.0], [96.9, 11682.0], [97.0, 11682.0], [97.1, 11685.0], [97.2, 11685.0], [97.3, 11696.0], [97.4, 11696.0], [97.5, 11697.0], [97.6, 11697.0], [97.7, 11711.0], [97.8, 11711.0], [97.9, 11714.0], [98.0, 11714.0], [98.1, 11726.0], [98.2, 11726.0], [98.3, 11726.0], [98.4, 11726.0], [98.5, 11732.0], [98.6, 11732.0], [98.7, 11741.0], [98.8, 11741.0], [98.9, 11759.0], [99.0, 11759.0], [99.1, 11760.0], [99.2, 11760.0], [99.3, 11762.0], [99.4, 11762.0], [99.5, 11773.0], [99.6, 11773.0], [99.7, 11775.0], [99.8, 11775.0], [99.9, 11847.0], [100.0, 11847.0]], "isOverall": false, "label": "home Request", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 8.0], [15.6, 8.0], [15.7, 30.0], [15.8, 30.0], [15.9, 31.0], [16.0, 31.0], [16.1, 38.0], [16.2, 38.0], [16.3, 48.0], [16.4, 48.0], [16.5, 57.0], [16.6, 57.0], [16.7, 58.0], [16.8, 58.0], [16.9, 74.0], [17.0, 74.0], [17.1, 109.0], [17.2, 109.0], [17.3, 111.0], [17.4, 111.0], [17.5, 130.0], [17.6, 130.0], [17.7, 131.0], [17.8, 131.0], [17.9, 133.0], [18.0, 133.0], [18.1, 138.0], [18.2, 138.0], [18.3, 139.0], [18.4, 139.0], [18.5, 140.0], [18.6, 140.0], [18.7, 146.0], [18.8, 146.0], [18.9, 157.0], [19.0, 157.0], [19.1, 163.0], [19.2, 163.0], [19.3, 174.0], [19.4, 174.0], [19.5, 177.0], [19.6, 177.0], [19.7, 177.0], [19.8, 177.0], [19.9, 178.0], [20.0, 179.0], [20.1, 179.0], [20.2, 191.0], [20.3, 191.0], [20.4, 197.0], [20.5, 197.0], [20.6, 203.0], [20.7, 203.0], [20.8, 208.0], [20.9, 208.0], [21.0, 213.0], [21.1, 213.0], [21.2, 215.0], [21.3, 215.0], [21.4, 226.0], [21.5, 226.0], [21.6, 255.0], [21.7, 255.0], [21.8, 260.0], [21.9, 260.0], [22.0, 264.0], [22.1, 264.0], [22.2, 280.0], [22.3, 280.0], [22.4, 390.0], [22.5, 390.0], [22.6, 391.0], [22.7, 391.0], [22.8, 394.0], [22.9, 394.0], [23.0, 395.0], [23.1, 395.0], [23.2, 396.0], [23.3, 396.0], [23.4, 402.0], [23.5, 402.0], [23.6, 406.0], [23.7, 406.0], [23.8, 407.0], [23.9, 407.0], [24.0, 410.0], [24.1, 410.0], [24.2, 415.0], [24.3, 415.0], [24.4, 416.0], [24.5, 416.0], [24.6, 416.0], [24.7, 416.0], [24.8, 417.0], [24.9, 417.0], [25.0, 419.0], [25.1, 422.0], [25.2, 422.0], [25.3, 423.0], [25.4, 423.0], [25.5, 425.0], [25.6, 425.0], [25.7, 426.0], [25.8, 426.0], [25.9, 426.0], [26.0, 426.0], [26.1, 426.0], [26.2, 426.0], [26.3, 426.0], [26.4, 426.0], [26.5, 427.0], [26.6, 427.0], [26.7, 428.0], [26.8, 428.0], [26.9, 429.0], [27.0, 429.0], [27.1, 431.0], [27.2, 431.0], [27.3, 432.0], [27.4, 432.0], [27.5, 433.0], [27.6, 433.0], [27.7, 434.0], [27.8, 434.0], [27.9, 434.0], [28.0, 434.0], [28.1, 435.0], [28.2, 435.0], [28.3, 438.0], [28.4, 438.0], [28.5, 442.0], [28.6, 442.0], [28.7, 445.0], [28.8, 445.0], [28.9, 463.0], [29.0, 463.0], [29.1, 465.0], [29.2, 465.0], [29.3, 470.0], [29.4, 470.0], [29.5, 471.0], [29.6, 471.0], [29.7, 471.0], [29.8, 471.0], [29.9, 473.0], [30.0, 478.0], [30.1, 478.0], [30.2, 482.0], [30.3, 482.0], [30.4, 483.0], [30.5, 483.0], [30.6, 487.0], [30.7, 487.0], [30.8, 488.0], [30.9, 488.0], [31.0, 492.0], [31.1, 492.0], [31.2, 493.0], [31.3, 493.0], [31.4, 497.0], [31.5, 497.0], [31.6, 500.0], [31.7, 500.0], [31.8, 515.0], [31.9, 515.0], [32.0, 541.0], [32.1, 541.0], [32.2, 590.0], [32.3, 590.0], [32.4, 593.0], [32.5, 593.0], [32.6, 628.0], [32.7, 628.0], [32.8, 636.0], [32.9, 636.0], [33.0, 639.0], [33.1, 639.0], [33.2, 645.0], [33.3, 645.0], [33.4, 656.0], [33.5, 656.0], [33.6, 671.0], [33.7, 671.0], [33.8, 677.0], [33.9, 677.0], [34.0, 686.0], [34.1, 686.0], [34.2, 698.0], [34.3, 698.0], [34.4, 702.0], [34.5, 702.0], [34.6, 761.0], [34.7, 761.0], [34.8, 762.0], [34.9, 762.0], [35.0, 796.0], [35.1, 894.0], [35.2, 894.0], [35.3, 1127.0], [35.4, 1127.0], [35.5, 1331.0], [35.6, 1331.0], [35.7, 1339.0], [35.8, 1339.0], [35.9, 1350.0], [36.0, 1350.0], [36.1, 1435.0], [36.2, 1435.0], [36.3, 1484.0], [36.4, 1484.0], [36.5, 1566.0], [36.6, 1566.0], [36.7, 1824.0], [36.8, 1824.0], [36.9, 1834.0], [37.0, 1834.0], [37.1, 1865.0], [37.2, 1865.0], [37.3, 1868.0], [37.4, 1868.0], [37.5, 1891.0], [37.6, 1891.0], [37.7, 1952.0], [37.8, 1952.0], [37.9, 2014.0], [38.0, 2014.0], [38.1, 2028.0], [38.2, 2028.0], [38.3, 2075.0], [38.4, 2075.0], [38.5, 2137.0], [38.6, 2137.0], [38.7, 2164.0], [38.8, 2164.0], [38.9, 2173.0], [39.0, 2173.0], [39.1, 2256.0], [39.2, 2256.0], [39.3, 2259.0], [39.4, 2259.0], [39.5, 2295.0], [39.6, 2295.0], [39.7, 2355.0], [39.8, 2355.0], [39.9, 2465.0], [40.0, 2466.0], [40.1, 2466.0], [40.2, 2559.0], [40.3, 2559.0], [40.4, 2579.0], [40.5, 2579.0], [40.6, 2626.0], [40.7, 2626.0], [40.8, 2780.0], [40.9, 2780.0], [41.0, 2793.0], [41.1, 2793.0], [41.2, 2851.0], [41.3, 2851.0], [41.4, 2862.0], [41.5, 2862.0], [41.6, 2943.0], [41.7, 2943.0], [41.8, 3008.0], [41.9, 3008.0], [42.0, 3026.0], [42.1, 3026.0], [42.2, 3049.0], [42.3, 3049.0], [42.4, 3084.0], [42.5, 3084.0], [42.6, 3100.0], [42.7, 3100.0], [42.8, 3312.0], [42.9, 3312.0], [43.0, 3378.0], [43.1, 3378.0], [43.2, 3452.0], [43.3, 3452.0], [43.4, 3512.0], [43.5, 3512.0], [43.6, 3626.0], [43.7, 3626.0], [43.8, 3680.0], [43.9, 3680.0], [44.0, 3773.0], [44.1, 3773.0], [44.2, 3814.0], [44.3, 3814.0], [44.4, 3882.0], [44.5, 3882.0], [44.6, 3908.0], [44.7, 3908.0], [44.8, 3911.0], [44.9, 3911.0], [45.0, 3929.0], [45.1, 4081.0], [45.2, 4081.0], [45.3, 4119.0], [45.4, 4119.0], [45.5, 4252.0], [45.6, 4252.0], [45.7, 4257.0], [45.8, 4257.0], [45.9, 4303.0], [46.0, 4303.0], [46.1, 4403.0], [46.2, 4403.0], [46.3, 4534.0], [46.4, 4534.0], [46.5, 4549.0], [46.6, 4549.0], [46.7, 4722.0], [46.8, 4722.0], [46.9, 4751.0], [47.0, 4751.0], [47.1, 4824.0], [47.2, 4824.0], [47.3, 5056.0], [47.4, 5056.0], [47.5, 5277.0], [47.6, 5277.0], [47.7, 5353.0], [47.8, 5353.0], [47.9, 5383.0], [48.0, 5383.0], [48.1, 5513.0], [48.2, 5513.0], [48.3, 5543.0], [48.4, 5543.0], [48.5, 5595.0], [48.6, 5595.0], [48.7, 5648.0], [48.8, 5648.0], [48.9, 5652.0], [49.0, 5652.0], [49.1, 5675.0], [49.2, 5675.0], [49.3, 5697.0], [49.4, 5697.0], [49.5, 5711.0], [49.6, 5711.0], [49.7, 5714.0], [49.8, 5714.0], [49.9, 5714.0], [50.0, 5728.0], [50.1, 5728.0], [50.2, 5747.0], [50.3, 5747.0], [50.4, 5763.0], [50.5, 5763.0], [50.6, 5791.0], [50.7, 5791.0], [50.8, 5813.0], [50.9, 5813.0], [51.0, 5838.0], [51.1, 5838.0], [51.2, 5858.0], [51.3, 5858.0], [51.4, 5861.0], [51.5, 5861.0], [51.6, 5903.0], [51.7, 5903.0], [51.8, 5906.0], [51.9, 5906.0], [52.0, 5907.0], [52.1, 5907.0], [52.2, 5910.0], [52.3, 5910.0], [52.4, 5917.0], [52.5, 5917.0], [52.6, 5924.0], [52.7, 5924.0], [52.8, 5957.0], [52.9, 5957.0], [53.0, 5959.0], [53.1, 5959.0], [53.2, 5987.0], [53.3, 5987.0], [53.4, 5990.0], [53.5, 5990.0], [53.6, 6016.0], [53.7, 6016.0], [53.8, 6022.0], [53.9, 6022.0], [54.0, 6055.0], [54.1, 6055.0], [54.2, 6073.0], [54.3, 6073.0], [54.4, 6088.0], [54.5, 6088.0], [54.6, 6094.0], [54.7, 6094.0], [54.8, 6095.0], [54.9, 6095.0], [55.0, 6102.0], [55.1, 6150.0], [55.2, 6150.0], [55.3, 6154.0], [55.4, 6154.0], [55.5, 6156.0], [55.6, 6156.0], [55.7, 6182.0], [55.8, 6182.0], [55.9, 6198.0], [56.0, 6198.0], [56.1, 6222.0], [56.2, 6222.0], [56.3, 6226.0], [56.4, 6226.0], [56.5, 6243.0], [56.6, 6243.0], [56.7, 6248.0], [56.8, 6248.0], [56.9, 6261.0], [57.0, 6261.0], [57.1, 6293.0], [57.2, 6293.0], [57.3, 6301.0], [57.4, 6301.0], [57.5, 6318.0], [57.6, 6318.0], [57.7, 6342.0], [57.8, 6342.0], [57.9, 6373.0], [58.0, 6373.0], [58.1, 6378.0], [58.2, 6378.0], [58.3, 6379.0], [58.4, 6379.0], [58.5, 6405.0], [58.6, 6405.0], [58.7, 6425.0], [58.8, 6425.0], [58.9, 6448.0], [59.0, 6448.0], [59.1, 6449.0], [59.2, 6449.0], [59.3, 6451.0], [59.4, 6451.0], [59.5, 6459.0], [59.6, 6459.0], [59.7, 6478.0], [59.8, 6478.0], [59.9, 6526.0], [60.0, 6536.0], [60.1, 6536.0], [60.2, 6562.0], [60.3, 6562.0], [60.4, 6574.0], [60.5, 6574.0], [60.6, 6581.0], [60.7, 6581.0], [60.8, 6587.0], [60.9, 6587.0], [61.0, 6653.0], [61.1, 6653.0], [61.2, 6671.0], [61.3, 6671.0], [61.4, 6693.0], [61.5, 6693.0], [61.6, 6709.0], [61.7, 6709.0], [61.8, 6726.0], [61.9, 6726.0], [62.0, 6741.0], [62.1, 6741.0], [62.2, 6751.0], [62.3, 6751.0], [62.4, 6754.0], [62.5, 6754.0], [62.6, 6772.0], [62.7, 6772.0], [62.8, 6773.0], [62.9, 6773.0], [63.0, 6788.0], [63.1, 6788.0], [63.2, 6830.0], [63.3, 6830.0], [63.4, 6839.0], [63.5, 6839.0], [63.6, 6846.0], [63.7, 6846.0], [63.8, 6847.0], [63.9, 6847.0], [64.0, 6857.0], [64.1, 6857.0], [64.2, 6877.0], [64.3, 6877.0], [64.4, 6885.0], [64.5, 6885.0], [64.6, 6932.0], [64.7, 6932.0], [64.8, 6951.0], [64.9, 6951.0], [65.0, 6952.0], [65.1, 6952.0], [65.2, 6952.0], [65.3, 6963.0], [65.4, 6963.0], [65.5, 6971.0], [65.6, 6971.0], [65.7, 6976.0], [65.8, 6976.0], [65.9, 6986.0], [66.0, 6986.0], [66.1, 7014.0], [66.2, 7014.0], [66.3, 7032.0], [66.4, 7032.0], [66.5, 7061.0], [66.6, 7061.0], [66.7, 7065.0], [66.8, 7065.0], [66.9, 7091.0], [67.0, 7091.0], [67.1, 7112.0], [67.2, 7112.0], [67.3, 7121.0], [67.4, 7121.0], [67.5, 7129.0], [67.6, 7129.0], [67.7, 7130.0], [67.8, 7130.0], [67.9, 7132.0], [68.0, 7132.0], [68.1, 7144.0], [68.2, 7144.0], [68.3, 7172.0], [68.4, 7172.0], [68.5, 7189.0], [68.6, 7189.0], [68.7, 7199.0], [68.8, 7199.0], [68.9, 7225.0], [69.0, 7225.0], [69.1, 7235.0], [69.2, 7235.0], [69.3, 7254.0], [69.4, 7254.0], [69.5, 7256.0], [69.6, 7256.0], [69.7, 7297.0], [69.8, 7297.0], [69.9, 7298.0], [70.0, 7298.0], [70.1, 7330.0], [70.2, 7345.0], [70.3, 7345.0], [70.4, 7358.0], [70.5, 7358.0], [70.6, 7361.0], [70.7, 7361.0], [70.8, 7386.0], [70.9, 7386.0], [71.0, 7411.0], [71.1, 7411.0], [71.2, 7412.0], [71.3, 7412.0], [71.4, 7437.0], [71.5, 7437.0], [71.6, 7441.0], [71.7, 7441.0], [71.8, 7449.0], [71.9, 7449.0], [72.0, 7455.0], [72.1, 7455.0], [72.2, 7484.0], [72.3, 7484.0], [72.4, 7508.0], [72.5, 7508.0], [72.6, 7522.0], [72.7, 7522.0], [72.8, 7532.0], [72.9, 7532.0], [73.0, 7543.0], [73.1, 7543.0], [73.2, 7548.0], [73.3, 7548.0], [73.4, 7573.0], [73.5, 7573.0], [73.6, 7574.0], [73.7, 7574.0], [73.8, 7579.0], [73.9, 7579.0], [74.0, 7579.0], [74.1, 7579.0], [74.2, 7598.0], [74.3, 7598.0], [74.4, 7607.0], [74.5, 7607.0], [74.6, 7614.0], [74.7, 7614.0], [74.8, 7636.0], [74.9, 7636.0], [75.0, 7661.0], [75.1, 7687.0], [75.2, 7687.0], [75.3, 7748.0], [75.4, 7748.0], [75.5, 7754.0], [75.6, 7754.0], [75.7, 7774.0], [75.8, 7774.0], [75.9, 7784.0], [76.0, 7784.0], [76.1, 7796.0], [76.2, 7796.0], [76.3, 7799.0], [76.4, 7799.0], [76.5, 7813.0], [76.6, 7813.0], [76.7, 7830.0], [76.8, 7830.0], [76.9, 7842.0], [77.0, 7842.0], [77.1, 7878.0], [77.2, 7878.0], [77.3, 7879.0], [77.4, 7879.0], [77.5, 7894.0], [77.6, 7894.0], [77.7, 7925.0], [77.8, 7925.0], [77.9, 7927.0], [78.0, 7927.0], [78.1, 7930.0], [78.2, 7930.0], [78.3, 7937.0], [78.4, 7937.0], [78.5, 7941.0], [78.6, 7941.0], [78.7, 7950.0], [78.8, 7950.0], [78.9, 7952.0], [79.0, 7952.0], [79.1, 7968.0], [79.2, 7968.0], [79.3, 7977.0], [79.4, 7977.0], [79.5, 7990.0], [79.6, 7990.0], [79.7, 7992.0], [79.8, 7992.0], [79.9, 8015.0], [80.0, 8015.0], [80.1, 8049.0], [80.2, 8051.0], [80.3, 8051.0], [80.4, 8061.0], [80.5, 8061.0], [80.6, 8066.0], [80.7, 8066.0], [80.8, 8094.0], [80.9, 8094.0], [81.0, 8104.0], [81.1, 8104.0], [81.2, 8134.0], [81.3, 8134.0], [81.4, 8141.0], [81.5, 8141.0], [81.6, 8159.0], [81.7, 8159.0], [81.8, 8160.0], [81.9, 8160.0], [82.0, 8162.0], [82.1, 8162.0], [82.2, 8173.0], [82.3, 8173.0], [82.4, 8180.0], [82.5, 8180.0], [82.6, 8228.0], [82.7, 8228.0], [82.8, 8229.0], [82.9, 8229.0], [83.0, 8235.0], [83.1, 8235.0], [83.2, 8242.0], [83.3, 8242.0], [83.4, 8245.0], [83.5, 8245.0], [83.6, 8248.0], [83.7, 8248.0], [83.8, 8253.0], [83.9, 8253.0], [84.0, 8256.0], [84.1, 8256.0], [84.2, 8256.0], [84.3, 8256.0], [84.4, 8295.0], [84.5, 8295.0], [84.6, 8297.0], [84.7, 8297.0], [84.8, 8375.0], [84.9, 8375.0], [85.0, 8383.0], [85.1, 8385.0], [85.2, 8385.0], [85.3, 8410.0], [85.4, 8410.0], [85.5, 8414.0], [85.6, 8414.0], [85.7, 8422.0], [85.8, 8422.0], [85.9, 8429.0], [86.0, 8429.0], [86.1, 8431.0], [86.2, 8431.0], [86.3, 8436.0], [86.4, 8436.0], [86.5, 8460.0], [86.6, 8460.0], [86.7, 8479.0], [86.8, 8479.0], [86.9, 8486.0], [87.0, 8486.0], [87.1, 8514.0], [87.2, 8514.0], [87.3, 8546.0], [87.4, 8546.0], [87.5, 8554.0], [87.6, 8554.0], [87.7, 8569.0], [87.8, 8569.0], [87.9, 8574.0], [88.0, 8574.0], [88.1, 8580.0], [88.2, 8580.0], [88.3, 8585.0], [88.4, 8585.0], [88.5, 8587.0], [88.6, 8587.0], [88.7, 8687.0], [88.8, 8687.0], [88.9, 8695.0], [89.0, 8695.0], [89.1, 8776.0], [89.2, 8776.0], [89.3, 8780.0], [89.4, 8780.0], [89.5, 8819.0], [89.6, 8819.0], [89.7, 8858.0], [89.8, 8858.0], [89.9, 8878.0], [90.0, 8878.0], [90.1, 8895.0], [90.2, 8917.0], [90.3, 8917.0], [90.4, 8924.0], [90.5, 8924.0], [90.6, 8958.0], [90.7, 8958.0], [90.8, 8979.0], [90.9, 8979.0], [91.0, 9040.0], [91.1, 9040.0], [91.2, 9046.0], [91.3, 9046.0], [91.4, 9068.0], [91.5, 9068.0], [91.6, 9099.0], [91.7, 9099.0], [91.8, 9231.0], [91.9, 9231.0], [92.0, 9235.0], [92.1, 9235.0], [92.2, 9240.0], [92.3, 9240.0], [92.4, 9411.0], [92.5, 9411.0], [92.6, 9471.0], [92.7, 9471.0], [92.8, 9561.0], [92.9, 9561.0], [93.0, 9690.0], [93.1, 9690.0], [93.2, 9734.0], [93.3, 9734.0], [93.4, 9736.0], [93.5, 9736.0], [93.6, 9748.0], [93.7, 9748.0], [93.8, 9792.0], [93.9, 9792.0], [94.0, 9817.0], [94.1, 9817.0], [94.2, 9979.0], [94.3, 9979.0], [94.4, 10027.0], [94.5, 10027.0], [94.6, 10070.0], [94.7, 10070.0], [94.8, 10140.0], [94.9, 10140.0], [95.0, 10158.0], [95.1, 10387.0], [95.2, 10387.0], [95.3, 10438.0], [95.4, 10438.0], [95.5, 10472.0], [95.6, 10472.0], [95.7, 10484.0], [95.8, 10484.0], [95.9, 10541.0], [96.0, 10541.0], [96.1, 10561.0], [96.2, 10561.0], [96.3, 10590.0], [96.4, 10590.0], [96.5, 10634.0], [96.6, 10634.0], [96.7, 10636.0], [96.8, 10636.0], [96.9, 10673.0], [97.0, 10673.0], [97.1, 10686.0], [97.2, 10686.0], [97.3, 10750.0], [97.4, 10750.0], [97.5, 10791.0], [97.6, 10791.0], [97.7, 10813.0], [97.8, 10813.0], [97.9, 10822.0], [98.0, 10822.0], [98.1, 10930.0], [98.2, 10930.0], [98.3, 10958.0], [98.4, 10958.0], [98.5, 11018.0], [98.6, 11018.0], [98.7, 11059.0], [98.8, 11059.0], [98.9, 11073.0], [99.0, 11073.0], [99.1, 11188.0], [99.2, 11188.0], [99.3, 11231.0], [99.4, 11231.0], [99.5, 11251.0], [99.6, 11251.0], [99.7, 11260.0], [99.8, 11260.0], [99.9, 11317.0], [100.0, 11317.0]], "isOverall": false, "label": "about Request", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 2.0], [9.0, 2.0], [9.1, 4.0], [9.2, 4.0], [9.3, 4.0], [9.4, 4.0], [9.5, 14.0], [9.6, 14.0], [9.7, 21.0], [9.8, 21.0], [9.9, 21.0], [10.0, 28.0], [10.1, 28.0], [10.2, 39.0], [10.3, 39.0], [10.4, 39.0], [10.5, 39.0], [10.6, 49.0], [10.7, 49.0], [10.8, 71.0], [10.9, 71.0], [11.0, 78.0], [11.1, 78.0], [11.2, 82.0], [11.3, 82.0], [11.4, 84.0], [11.5, 84.0], [11.6, 88.0], [11.7, 88.0], [11.8, 101.0], [11.9, 101.0], [12.0, 129.0], [12.1, 129.0], [12.2, 139.0], [12.3, 139.0], [12.4, 146.0], [12.5, 146.0], [12.6, 163.0], [12.7, 163.0], [12.8, 174.0], [12.9, 174.0], [13.0, 174.0], [13.1, 174.0], [13.2, 196.0], [13.3, 196.0], [13.4, 202.0], [13.5, 202.0], [13.6, 251.0], [13.7, 251.0], [13.8, 393.0], [13.9, 393.0], [14.0, 394.0], [14.1, 394.0], [14.2, 398.0], [14.3, 398.0], [14.4, 398.0], [14.5, 398.0], [14.6, 402.0], [14.7, 402.0], [14.8, 408.0], [14.9, 408.0], [15.0, 409.0], [15.1, 410.0], [15.2, 410.0], [15.3, 416.0], [15.4, 416.0], [15.5, 417.0], [15.6, 417.0], [15.7, 419.0], [15.8, 419.0], [15.9, 419.0], [16.0, 419.0], [16.1, 419.0], [16.2, 419.0], [16.3, 422.0], [16.4, 422.0], [16.5, 423.0], [16.6, 423.0], [16.7, 424.0], [16.8, 424.0], [16.9, 424.0], [17.0, 424.0], [17.1, 425.0], [17.2, 425.0], [17.3, 425.0], [17.4, 425.0], [17.5, 427.0], [17.6, 427.0], [17.7, 427.0], [17.8, 427.0], [17.9, 428.0], [18.0, 428.0], [18.1, 428.0], [18.2, 428.0], [18.3, 429.0], [18.4, 429.0], [18.5, 429.0], [18.6, 429.0], [18.7, 429.0], [18.8, 429.0], [18.9, 430.0], [19.0, 430.0], [19.1, 431.0], [19.2, 431.0], [19.3, 433.0], [19.4, 433.0], [19.5, 433.0], [19.6, 433.0], [19.7, 434.0], [19.8, 434.0], [19.9, 435.0], [20.0, 435.0], [20.1, 435.0], [20.2, 438.0], [20.3, 438.0], [20.4, 441.0], [20.5, 441.0], [20.6, 441.0], [20.7, 441.0], [20.8, 442.0], [20.9, 442.0], [21.0, 442.0], [21.1, 442.0], [21.2, 443.0], [21.3, 443.0], [21.4, 444.0], [21.5, 444.0], [21.6, 448.0], [21.7, 448.0], [21.8, 451.0], [21.9, 451.0], [22.0, 456.0], [22.1, 456.0], [22.2, 461.0], [22.3, 461.0], [22.4, 473.0], [22.5, 473.0], [22.6, 473.0], [22.7, 473.0], [22.8, 473.0], [22.9, 473.0], [23.0, 476.0], [23.1, 476.0], [23.2, 476.0], [23.3, 476.0], [23.4, 478.0], [23.5, 478.0], [23.6, 484.0], [23.7, 484.0], [23.8, 486.0], [23.9, 486.0], [24.0, 488.0], [24.1, 488.0], [24.2, 493.0], [24.3, 493.0], [24.4, 495.0], [24.5, 495.0], [24.6, 497.0], [24.7, 497.0], [24.8, 499.0], [24.9, 499.0], [25.0, 505.0], [25.1, 506.0], [25.2, 506.0], [25.3, 508.0], [25.4, 508.0], [25.5, 613.0], [25.6, 613.0], [25.7, 615.0], [25.8, 615.0], [25.9, 619.0], [26.0, 619.0], [26.1, 621.0], [26.2, 621.0], [26.3, 621.0], [26.4, 621.0], [26.5, 629.0], [26.6, 629.0], [26.7, 629.0], [26.8, 629.0], [26.9, 639.0], [27.0, 639.0], [27.1, 643.0], [27.2, 643.0], [27.3, 652.0], [27.4, 652.0], [27.5, 653.0], [27.6, 653.0], [27.7, 661.0], [27.8, 661.0], [27.9, 666.0], [28.0, 666.0], [28.1, 669.0], [28.2, 669.0], [28.3, 670.0], [28.4, 670.0], [28.5, 670.0], [28.6, 670.0], [28.7, 671.0], [28.8, 671.0], [28.9, 675.0], [29.0, 675.0], [29.1, 678.0], [29.2, 678.0], [29.3, 681.0], [29.4, 681.0], [29.5, 688.0], [29.6, 688.0], [29.7, 706.0], [29.8, 706.0], [29.9, 709.0], [30.0, 711.0], [30.1, 711.0], [30.2, 723.0], [30.3, 723.0], [30.4, 731.0], [30.5, 731.0], [30.6, 2075.0], [30.7, 2075.0], [30.8, 2355.0], [30.9, 2355.0], [31.0, 2865.0], [31.1, 2865.0], [31.2, 2909.0], [31.3, 2909.0], [31.4, 2945.0], [31.5, 2945.0], [31.6, 2948.0], [31.7, 2948.0], [31.8, 2979.0], [31.9, 2979.0], [32.0, 3040.0], [32.1, 3040.0], [32.2, 3073.0], [32.3, 3073.0], [32.4, 3081.0], [32.5, 3081.0], [32.6, 3082.0], [32.7, 3082.0], [32.8, 3123.0], [32.9, 3123.0], [33.0, 3132.0], [33.1, 3132.0], [33.2, 3136.0], [33.3, 3136.0], [33.4, 3151.0], [33.5, 3151.0], [33.6, 3161.0], [33.7, 3161.0], [33.8, 3181.0], [33.9, 3181.0], [34.0, 3219.0], [34.1, 3219.0], [34.2, 3240.0], [34.3, 3240.0], [34.4, 3245.0], [34.5, 3245.0], [34.6, 3246.0], [34.7, 3246.0], [34.8, 3254.0], [34.9, 3254.0], [35.0, 3264.0], [35.1, 3265.0], [35.2, 3265.0], [35.3, 3268.0], [35.4, 3268.0], [35.5, 3269.0], [35.6, 3269.0], [35.7, 3271.0], [35.8, 3271.0], [35.9, 3278.0], [36.0, 3278.0], [36.1, 3286.0], [36.2, 3286.0], [36.3, 3288.0], [36.4, 3288.0], [36.5, 3290.0], [36.6, 3290.0], [36.7, 3291.0], [36.8, 3291.0], [36.9, 3294.0], [37.0, 3294.0], [37.1, 3295.0], [37.2, 3295.0], [37.3, 3297.0], [37.4, 3297.0], [37.5, 3298.0], [37.6, 3298.0], [37.7, 3298.0], [37.8, 3298.0], [37.9, 3304.0], [38.0, 3304.0], [38.1, 3309.0], [38.2, 3309.0], [38.3, 3312.0], [38.4, 3312.0], [38.5, 3318.0], [38.6, 3318.0], [38.7, 3319.0], [38.8, 3319.0], [38.9, 3322.0], [39.0, 3322.0], [39.1, 3324.0], [39.2, 3324.0], [39.3, 3325.0], [39.4, 3325.0], [39.5, 3328.0], [39.6, 3328.0], [39.7, 3335.0], [39.8, 3335.0], [39.9, 3336.0], [40.0, 3338.0], [40.1, 3338.0], [40.2, 3345.0], [40.3, 3345.0], [40.4, 3345.0], [40.5, 3345.0], [40.6, 3349.0], [40.7, 3349.0], [40.8, 3350.0], [40.9, 3350.0], [41.0, 3353.0], [41.1, 3353.0], [41.2, 3363.0], [41.3, 3363.0], [41.4, 3364.0], [41.5, 3364.0], [41.6, 3371.0], [41.7, 3371.0], [41.8, 3390.0], [41.9, 3390.0], [42.0, 3392.0], [42.1, 3392.0], [42.2, 3408.0], [42.3, 3408.0], [42.4, 3440.0], [42.5, 3440.0], [42.6, 3443.0], [42.7, 3443.0], [42.8, 3443.0], [42.9, 3443.0], [43.0, 3452.0], [43.1, 3452.0], [43.2, 3454.0], [43.3, 3454.0], [43.4, 3464.0], [43.5, 3464.0], [43.6, 3476.0], [43.7, 3476.0], [43.8, 3480.0], [43.9, 3480.0], [44.0, 3511.0], [44.1, 3511.0], [44.2, 3514.0], [44.3, 3514.0], [44.4, 3533.0], [44.5, 3533.0], [44.6, 3545.0], [44.7, 3545.0], [44.8, 3574.0], [44.9, 3574.0], [45.0, 3579.0], [45.1, 3601.0], [45.2, 3601.0], [45.3, 3608.0], [45.4, 3608.0], [45.5, 3619.0], [45.6, 3619.0], [45.7, 3619.0], [45.8, 3619.0], [45.9, 3625.0], [46.0, 3625.0], [46.1, 3625.0], [46.2, 3625.0], [46.3, 3632.0], [46.4, 3632.0], [46.5, 3633.0], [46.6, 3633.0], [46.7, 3640.0], [46.8, 3640.0], [46.9, 3641.0], [47.0, 3641.0], [47.1, 3647.0], [47.2, 3647.0], [47.3, 3650.0], [47.4, 3650.0], [47.5, 3656.0], [47.6, 3656.0], [47.7, 3664.0], [47.8, 3664.0], [47.9, 3693.0], [48.0, 3693.0], [48.1, 3710.0], [48.2, 3710.0], [48.3, 3715.0], [48.4, 3715.0], [48.5, 3716.0], [48.6, 3716.0], [48.7, 3717.0], [48.8, 3717.0], [48.9, 3732.0], [49.0, 3732.0], [49.1, 3737.0], [49.2, 3737.0], [49.3, 3744.0], [49.4, 3744.0], [49.5, 3744.0], [49.6, 3744.0], [49.7, 3746.0], [49.8, 3746.0], [49.9, 3754.0], [50.0, 3759.0], [50.1, 3759.0], [50.2, 3760.0], [50.3, 3760.0], [50.4, 3773.0], [50.5, 3773.0], [50.6, 3775.0], [50.7, 3775.0], [50.8, 3805.0], [50.9, 3805.0], [51.0, 3810.0], [51.1, 3810.0], [51.2, 3814.0], [51.3, 3814.0], [51.4, 3816.0], [51.5, 3816.0], [51.6, 3819.0], [51.7, 3819.0], [51.8, 3848.0], [51.9, 3848.0], [52.0, 3861.0], [52.1, 3861.0], [52.2, 3861.0], [52.3, 3861.0], [52.4, 3883.0], [52.5, 3883.0], [52.6, 3884.0], [52.7, 3884.0], [52.8, 3896.0], [52.9, 3896.0], [53.0, 3905.0], [53.1, 3905.0], [53.2, 3908.0], [53.3, 3908.0], [53.4, 3908.0], [53.5, 3908.0], [53.6, 3910.0], [53.7, 3910.0], [53.8, 3914.0], [53.9, 3914.0], [54.0, 3919.0], [54.1, 3919.0], [54.2, 3924.0], [54.3, 3924.0], [54.4, 3929.0], [54.5, 3929.0], [54.6, 3930.0], [54.7, 3930.0], [54.8, 3936.0], [54.9, 3936.0], [55.0, 3942.0], [55.1, 3944.0], [55.2, 3944.0], [55.3, 3953.0], [55.4, 3953.0], [55.5, 3954.0], [55.6, 3954.0], [55.7, 4020.0], [55.8, 4020.0], [55.9, 4027.0], [56.0, 4027.0], [56.1, 4030.0], [56.2, 4030.0], [56.3, 4046.0], [56.4, 4046.0], [56.5, 4062.0], [56.6, 4062.0], [56.7, 4091.0], [56.8, 4091.0], [56.9, 4128.0], [57.0, 4128.0], [57.1, 4128.0], [57.2, 4128.0], [57.3, 4150.0], [57.4, 4150.0], [57.5, 4173.0], [57.6, 4173.0], [57.7, 4179.0], [57.8, 4179.0], [57.9, 4209.0], [58.0, 4209.0], [58.1, 4217.0], [58.2, 4217.0], [58.3, 4242.0], [58.4, 4242.0], [58.5, 4253.0], [58.6, 4253.0], [58.7, 4257.0], [58.8, 4257.0], [58.9, 4322.0], [59.0, 4322.0], [59.1, 4328.0], [59.2, 4328.0], [59.3, 4328.0], [59.4, 4328.0], [59.5, 4336.0], [59.6, 4336.0], [59.7, 4352.0], [59.8, 4352.0], [59.9, 4354.0], [60.0, 4374.0], [60.1, 4374.0], [60.2, 4393.0], [60.3, 4393.0], [60.4, 4452.0], [60.5, 4452.0], [60.6, 4464.0], [60.7, 4464.0], [60.8, 4473.0], [60.9, 4473.0], [61.0, 4501.0], [61.1, 4501.0], [61.2, 4515.0], [61.3, 4515.0], [61.4, 4545.0], [61.5, 4545.0], [61.6, 4577.0], [61.7, 4577.0], [61.8, 4589.0], [61.9, 4589.0], [62.0, 4592.0], [62.1, 4592.0], [62.2, 4606.0], [62.3, 4606.0], [62.4, 4608.0], [62.5, 4608.0], [62.6, 4609.0], [62.7, 4609.0], [62.8, 4617.0], [62.9, 4617.0], [63.0, 4619.0], [63.1, 4619.0], [63.2, 4622.0], [63.3, 4622.0], [63.4, 4628.0], [63.5, 4628.0], [63.6, 4639.0], [63.7, 4639.0], [63.8, 4643.0], [63.9, 4643.0], [64.0, 4672.0], [64.1, 4672.0], [64.2, 4679.0], [64.3, 4679.0], [64.4, 4689.0], [64.5, 4689.0], [64.6, 4729.0], [64.7, 4729.0], [64.8, 4790.0], [64.9, 4790.0], [65.0, 4797.0], [65.1, 4819.0], [65.2, 4819.0], [65.3, 4829.0], [65.4, 4829.0], [65.5, 5036.0], [65.6, 5036.0], [65.7, 5130.0], [65.8, 5130.0], [65.9, 5357.0], [66.0, 5357.0], [66.1, 5367.0], [66.2, 5367.0], [66.3, 5456.0], [66.4, 5456.0], [66.5, 5472.0], [66.6, 5472.0], [66.7, 5481.0], [66.8, 5481.0], [66.9, 5486.0], [67.0, 5486.0], [67.1, 5498.0], [67.2, 5498.0], [67.3, 5501.0], [67.4, 5501.0], [67.5, 5607.0], [67.6, 5607.0], [67.7, 5608.0], [67.8, 5608.0], [67.9, 5662.0], [68.0, 5662.0], [68.1, 5673.0], [68.2, 5673.0], [68.3, 5693.0], [68.4, 5693.0], [68.5, 5697.0], [68.6, 5697.0], [68.7, 5724.0], [68.8, 5724.0], [68.9, 5843.0], [69.0, 5843.0], [69.1, 5884.0], [69.2, 5884.0], [69.3, 5885.0], [69.4, 5885.0], [69.5, 5890.0], [69.6, 5890.0], [69.7, 5916.0], [69.8, 5916.0], [69.9, 6153.0], [70.0, 6153.0], [70.1, 6244.0], [70.2, 6387.0], [70.3, 6387.0], [70.4, 6449.0], [70.5, 6449.0], [70.6, 6464.0], [70.7, 6464.0], [70.8, 6503.0], [70.9, 6503.0], [71.0, 6543.0], [71.1, 6543.0], [71.2, 6575.0], [71.3, 6575.0], [71.4, 6578.0], [71.5, 6578.0], [71.6, 6604.0], [71.7, 6604.0], [71.8, 6609.0], [71.9, 6609.0], [72.0, 6745.0], [72.1, 6745.0], [72.2, 6784.0], [72.3, 6784.0], [72.4, 6787.0], [72.5, 6787.0], [72.6, 6791.0], [72.7, 6791.0], [72.8, 6816.0], [72.9, 6816.0], [73.0, 7021.0], [73.1, 7021.0], [73.2, 7081.0], [73.3, 7081.0], [73.4, 7121.0], [73.5, 7121.0], [73.6, 7132.0], [73.7, 7132.0], [73.8, 7217.0], [73.9, 7217.0], [74.0, 7251.0], [74.1, 7251.0], [74.2, 7255.0], [74.3, 7255.0], [74.4, 7320.0], [74.5, 7320.0], [74.6, 7342.0], [74.7, 7342.0], [74.8, 7353.0], [74.9, 7353.0], [75.0, 7442.0], [75.1, 7451.0], [75.2, 7451.0], [75.3, 7467.0], [75.4, 7467.0], [75.5, 7576.0], [75.6, 7576.0], [75.7, 7612.0], [75.8, 7612.0], [75.9, 7638.0], [76.0, 7638.0], [76.1, 7721.0], [76.2, 7721.0], [76.3, 7747.0], [76.4, 7747.0], [76.5, 7773.0], [76.6, 7773.0], [76.7, 7821.0], [76.8, 7821.0], [76.9, 7846.0], [77.0, 7846.0], [77.1, 7855.0], [77.2, 7855.0], [77.3, 7861.0], [77.4, 7861.0], [77.5, 7880.0], [77.6, 7880.0], [77.7, 7883.0], [77.8, 7883.0], [77.9, 7948.0], [78.0, 7948.0], [78.1, 7952.0], [78.2, 7952.0], [78.3, 8017.0], [78.4, 8017.0], [78.5, 8026.0], [78.6, 8026.0], [78.7, 8047.0], [78.8, 8047.0], [78.9, 8110.0], [79.0, 8110.0], [79.1, 8143.0], [79.2, 8143.0], [79.3, 8156.0], [79.4, 8156.0], [79.5, 8172.0], [79.6, 8172.0], [79.7, 8247.0], [79.8, 8247.0], [79.9, 8406.0], [80.0, 8406.0], [80.1, 8424.0], [80.2, 8507.0], [80.3, 8507.0], [80.4, 8576.0], [80.5, 8576.0], [80.6, 8591.0], [80.7, 8591.0], [80.8, 8624.0], [80.9, 8624.0], [81.0, 8638.0], [81.1, 8638.0], [81.2, 8649.0], [81.3, 8649.0], [81.4, 8659.0], [81.5, 8659.0], [81.6, 8663.0], [81.7, 8663.0], [81.8, 8764.0], [81.9, 8764.0], [82.0, 8815.0], [82.1, 8815.0], [82.2, 8820.0], [82.3, 8820.0], [82.4, 8848.0], [82.5, 8848.0], [82.6, 8865.0], [82.7, 8865.0], [82.8, 8892.0], [82.9, 8892.0], [83.0, 8942.0], [83.1, 8942.0], [83.2, 9002.0], [83.3, 9002.0], [83.4, 9008.0], [83.5, 9008.0], [83.6, 9011.0], [83.7, 9011.0], [83.8, 9033.0], [83.9, 9033.0], [84.0, 9047.0], [84.1, 9047.0], [84.2, 9057.0], [84.3, 9057.0], [84.4, 9058.0], [84.5, 9058.0], [84.6, 9145.0], [84.7, 9145.0], [84.8, 9217.0], [84.9, 9217.0], [85.0, 9228.0], [85.1, 9229.0], [85.2, 9229.0], [85.3, 9230.0], [85.4, 9230.0], [85.5, 9249.0], [85.6, 9249.0], [85.7, 9249.0], [85.8, 9249.0], [85.9, 9249.0], [86.0, 9249.0], [86.1, 9257.0], [86.2, 9257.0], [86.3, 9272.0], [86.4, 9272.0], [86.5, 9290.0], [86.6, 9290.0], [86.7, 9312.0], [86.8, 9312.0], [86.9, 9314.0], [87.0, 9314.0], [87.1, 9388.0], [87.2, 9388.0], [87.3, 9395.0], [87.4, 9395.0], [87.5, 9428.0], [87.6, 9428.0], [87.7, 9437.0], [87.8, 9437.0], [87.9, 9487.0], [88.0, 9487.0], [88.1, 9508.0], [88.2, 9508.0], [88.3, 9525.0], [88.4, 9525.0], [88.5, 9526.0], [88.6, 9526.0], [88.7, 9555.0], [88.8, 9555.0], [88.9, 9591.0], [89.0, 9591.0], [89.1, 9638.0], [89.2, 9638.0], [89.3, 9668.0], [89.4, 9668.0], [89.5, 9675.0], [89.6, 9675.0], [89.7, 9693.0], [89.8, 9693.0], [89.9, 9701.0], [90.0, 9701.0], [90.1, 9717.0], [90.2, 9718.0], [90.3, 9718.0], [90.4, 9734.0], [90.5, 9734.0], [90.6, 9752.0], [90.7, 9752.0], [90.8, 9765.0], [90.9, 9765.0], [91.0, 9768.0], [91.1, 9768.0], [91.2, 9796.0], [91.3, 9796.0], [91.4, 9863.0], [91.5, 9863.0], [91.6, 9934.0], [91.7, 9934.0], [91.8, 9943.0], [91.9, 9943.0], [92.0, 9957.0], [92.1, 9957.0], [92.2, 9957.0], [92.3, 9957.0], [92.4, 10037.0], [92.5, 10037.0], [92.6, 10041.0], [92.7, 10041.0], [92.8, 10041.0], [92.9, 10041.0], [93.0, 10042.0], [93.1, 10042.0], [93.2, 10053.0], [93.3, 10053.0], [93.4, 10061.0], [93.5, 10061.0], [93.6, 10061.0], [93.7, 10061.0], [93.8, 10156.0], [93.9, 10156.0], [94.0, 10185.0], [94.1, 10185.0], [94.2, 10206.0], [94.3, 10206.0], [94.4, 10210.0], [94.5, 10210.0], [94.6, 10231.0], [94.7, 10231.0], [94.8, 10256.0], [94.9, 10256.0], [95.0, 10279.0], [95.1, 10296.0], [95.2, 10296.0], [95.3, 10306.0], [95.4, 10306.0], [95.5, 10423.0], [95.6, 10423.0], [95.7, 10460.0], [95.8, 10460.0], [95.9, 10514.0], [96.0, 10514.0], [96.1, 10520.0], [96.2, 10520.0], [96.3, 10521.0], [96.4, 10521.0], [96.5, 10556.0], [96.6, 10556.0], [96.7, 10568.0], [96.8, 10568.0], [96.9, 10593.0], [97.0, 10593.0], [97.1, 10593.0], [97.2, 10593.0], [97.3, 10638.0], [97.4, 10638.0], [97.5, 10663.0], [97.6, 10663.0], [97.7, 10780.0], [97.8, 10780.0], [97.9, 10818.0], [98.0, 10818.0], [98.1, 10834.0], [98.2, 10834.0], [98.3, 10910.0], [98.4, 10910.0], [98.5, 10929.0], [98.6, 10929.0], [98.7, 10944.0], [98.8, 10944.0], [98.9, 10957.0], [99.0, 10957.0], [99.1, 11080.0], [99.2, 11080.0], [99.3, 11208.0], [99.4, 11208.0], [99.5, 11253.0], [99.6, 11253.0], [99.7, 11256.0], [99.8, 11256.0], [99.9, 11297.0], [100.0, 11297.0]], "isOverall": false, "label": "services Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 87.0, "series": [{"data": [[0.0, 22.0], [600.0, 13.0], [700.0, 1.0], [1600.0, 6.0], [1700.0, 15.0], [1800.0, 14.0], [1900.0, 10.0], [2000.0, 24.0], [2100.0, 24.0], [2300.0, 17.0], [2200.0, 16.0], [2400.0, 17.0], [2500.0, 14.0], [2600.0, 8.0], [2700.0, 1.0], [3000.0, 4.0], [3100.0, 5.0], [3300.0, 2.0], [3200.0, 6.0], [3400.0, 2.0], [3500.0, 3.0], [3700.0, 3.0], [3600.0, 3.0], [3800.0, 1.0], [3900.0, 6.0], [4000.0, 3.0], [4300.0, 4.0], [4200.0, 3.0], [4100.0, 2.0], [4600.0, 4.0], [4500.0, 3.0], [4800.0, 8.0], [4700.0, 4.0], [5100.0, 7.0], [5000.0, 5.0], [4900.0, 5.0], [5300.0, 8.0], [5200.0, 4.0], [5600.0, 3.0], [5500.0, 6.0], [5400.0, 16.0], [5800.0, 2.0], [5700.0, 4.0], [6000.0, 4.0], [6500.0, 1.0], [6600.0, 3.0], [6700.0, 2.0], [6900.0, 1.0], [6800.0, 2.0], [7000.0, 2.0], [7100.0, 3.0], [7300.0, 1.0], [7200.0, 1.0], [7400.0, 1.0], [7600.0, 3.0], [7500.0, 2.0], [7900.0, 4.0], [7800.0, 2.0], [7700.0, 2.0], [8100.0, 3.0], [8000.0, 1.0], [8300.0, 3.0], [8500.0, 7.0], [8600.0, 2.0], [8400.0, 2.0], [8200.0, 2.0], [8800.0, 3.0], [9200.0, 6.0], [8900.0, 2.0], [9000.0, 2.0], [9600.0, 8.0], [9700.0, 2.0], [9500.0, 1.0], [9400.0, 1.0], [9300.0, 2.0], [10200.0, 3.0], [10100.0, 2.0], [9900.0, 3.0], [10000.0, 4.0], [9800.0, 2.0], [10500.0, 7.0], [10600.0, 2.0], [10300.0, 1.0], [11100.0, 2.0], [11200.0, 1.0], [10800.0, 5.0], [100.0, 4.0], [200.0, 2.0], [300.0, 6.0], [400.0, 51.0], [500.0, 6.0]], "isOverall": false, "label": "contact Request", "isController": false}, {"data": [[300.0, 2.0], [400.0, 44.0], [500.0, 9.0], [600.0, 15.0], [700.0, 9.0], [1200.0, 1.0], [1300.0, 1.0], [1400.0, 5.0], [1500.0, 3.0], [1600.0, 9.0], [1700.0, 5.0], [1800.0, 7.0], [1900.0, 11.0], [2000.0, 6.0], [2100.0, 4.0], [2200.0, 5.0], [2300.0, 3.0], [2400.0, 4.0], [2500.0, 6.0], [2600.0, 4.0], [2700.0, 7.0], [2800.0, 2.0], [2900.0, 4.0], [3000.0, 4.0], [3100.0, 3.0], [3200.0, 5.0], [3300.0, 1.0], [3400.0, 4.0], [3500.0, 1.0], [3600.0, 5.0], [3700.0, 3.0], [3800.0, 1.0], [3900.0, 4.0], [4000.0, 2.0], [4100.0, 3.0], [4200.0, 3.0], [4300.0, 2.0], [4400.0, 4.0], [4500.0, 4.0], [4700.0, 3.0], [4800.0, 3.0], [4900.0, 2.0], [5000.0, 7.0], [5100.0, 1.0], [5300.0, 3.0], [5200.0, 2.0], [5500.0, 3.0], [5600.0, 1.0], [5700.0, 4.0], [5900.0, 1.0], [6000.0, 4.0], [6100.0, 5.0], [6200.0, 2.0], [6300.0, 3.0], [6400.0, 1.0], [6500.0, 4.0], [6600.0, 3.0], [6700.0, 3.0], [6800.0, 1.0], [6900.0, 1.0], [7000.0, 5.0], [7100.0, 3.0], [7200.0, 3.0], [7300.0, 3.0], [7400.0, 4.0], [7500.0, 5.0], [7600.0, 3.0], [7700.0, 1.0], [7800.0, 5.0], [7900.0, 2.0], [8000.0, 4.0], [8100.0, 5.0], [8200.0, 5.0], [8300.0, 4.0], [8400.0, 2.0], [8500.0, 3.0], [8600.0, 4.0], [8700.0, 4.0], [8800.0, 5.0], [8900.0, 6.0], [9000.0, 3.0], [9100.0, 3.0], [9200.0, 2.0], [9300.0, 6.0], [9400.0, 5.0], [9500.0, 7.0], [9600.0, 4.0], [9700.0, 2.0], [9800.0, 7.0], [9900.0, 9.0], [10000.0, 2.0], [10100.0, 1.0], [10200.0, 3.0], [10300.0, 8.0], [10400.0, 8.0], [10500.0, 5.0], [10600.0, 5.0], [10700.0, 4.0], [10800.0, 6.0], [10900.0, 4.0], [11000.0, 4.0], [11100.0, 5.0], [11200.0, 8.0], [11300.0, 9.0], [11400.0, 6.0], [11500.0, 8.0], [11600.0, 16.0], [11700.0, 11.0], [11800.0, 1.0]], "isOverall": false, "label": "home Request", "isController": false}, {"data": [[0.0, 87.0], [100.0, 18.0], [200.0, 9.0], [300.0, 5.0], [400.0, 42.0], [500.0, 5.0], [600.0, 9.0], [700.0, 4.0], [800.0, 1.0], [1100.0, 1.0], [1300.0, 3.0], [1400.0, 2.0], [1500.0, 1.0], [1800.0, 5.0], [1900.0, 1.0], [2000.0, 3.0], [2100.0, 3.0], [2200.0, 3.0], [2300.0, 1.0], [2400.0, 2.0], [2500.0, 2.0], [2600.0, 1.0], [2700.0, 2.0], [2800.0, 2.0], [2900.0, 1.0], [3000.0, 4.0], [3100.0, 1.0], [3300.0, 2.0], [3400.0, 1.0], [3500.0, 1.0], [3600.0, 2.0], [3700.0, 1.0], [3800.0, 2.0], [3900.0, 3.0], [4000.0, 1.0], [4100.0, 1.0], [4200.0, 2.0], [4300.0, 1.0], [4400.0, 1.0], [4500.0, 2.0], [4700.0, 2.0], [4800.0, 1.0], [5000.0, 1.0], [5200.0, 1.0], [5300.0, 2.0], [5500.0, 3.0], [5600.0, 4.0], [5700.0, 7.0], [5800.0, 4.0], [5900.0, 10.0], [6000.0, 7.0], [6100.0, 6.0], [6200.0, 6.0], [6300.0, 6.0], [6400.0, 7.0], [6500.0, 6.0], [6600.0, 3.0], [6700.0, 8.0], [6800.0, 7.0], [6900.0, 8.0], [7100.0, 9.0], [7000.0, 5.0], [7200.0, 6.0], [7300.0, 5.0], [7400.0, 7.0], [7500.0, 10.0], [7600.0, 5.0], [7700.0, 6.0], [7800.0, 6.0], [7900.0, 11.0], [8100.0, 8.0], [8000.0, 6.0], [8200.0, 11.0], [8300.0, 3.0], [8400.0, 9.0], [8500.0, 8.0], [8700.0, 2.0], [8600.0, 2.0], [8800.0, 4.0], [8900.0, 4.0], [9000.0, 4.0], [9200.0, 3.0], [9400.0, 2.0], [9500.0, 1.0], [9600.0, 1.0], [9700.0, 4.0], [9800.0, 1.0], [9900.0, 1.0], [10000.0, 2.0], [10100.0, 2.0], [10300.0, 1.0], [10400.0, 3.0], [10500.0, 3.0], [10600.0, 4.0], [10700.0, 2.0], [11200.0, 3.0], [11100.0, 1.0], [11000.0, 3.0], [10900.0, 2.0], [10800.0, 2.0], [11300.0, 1.0]], "isOverall": false, "label": "about Request", "isController": false}, {"data": [[0.0, 60.0], [600.0, 21.0], [700.0, 5.0], [2000.0, 1.0], [2300.0, 1.0], [2800.0, 1.0], [2900.0, 4.0], [3000.0, 4.0], [3100.0, 6.0], [3200.0, 20.0], [3300.0, 22.0], [3400.0, 9.0], [3500.0, 6.0], [3700.0, 14.0], [3600.0, 15.0], [3800.0, 11.0], [3900.0, 14.0], [4000.0, 6.0], [4300.0, 8.0], [4200.0, 5.0], [4100.0, 5.0], [4500.0, 6.0], [4600.0, 12.0], [4400.0, 3.0], [4800.0, 2.0], [4700.0, 3.0], [5000.0, 1.0], [5100.0, 1.0], [5300.0, 2.0], [5400.0, 5.0], [5600.0, 6.0], [5500.0, 1.0], [5800.0, 4.0], [5700.0, 1.0], [5900.0, 1.0], [6100.0, 1.0], [6300.0, 1.0], [6200.0, 1.0], [6400.0, 2.0], [6500.0, 4.0], [6600.0, 2.0], [6700.0, 4.0], [6800.0, 1.0], [7000.0, 2.0], [7100.0, 2.0], [7200.0, 3.0], [7400.0, 3.0], [7300.0, 3.0], [7500.0, 1.0], [7600.0, 2.0], [7700.0, 3.0], [7800.0, 6.0], [7900.0, 2.0], [8000.0, 3.0], [8100.0, 4.0], [8500.0, 3.0], [8600.0, 5.0], [8700.0, 1.0], [8400.0, 2.0], [8200.0, 1.0], [8800.0, 5.0], [9000.0, 7.0], [9100.0, 1.0], [9200.0, 10.0], [8900.0, 1.0], [9300.0, 4.0], [9400.0, 3.0], [9500.0, 5.0], [9700.0, 8.0], [9600.0, 4.0], [9900.0, 4.0], [10000.0, 7.0], [10200.0, 6.0], [10100.0, 2.0], [9800.0, 1.0], [10400.0, 2.0], [10700.0, 1.0], [10600.0, 2.0], [10500.0, 7.0], [10300.0, 1.0], [11000.0, 1.0], [11200.0, 4.0], [10900.0, 4.0], [10800.0, 2.0], [100.0, 8.0], [200.0, 2.0], [300.0, 4.0], [400.0, 53.0], [500.0, 3.0]], "isOverall": false, "label": "services Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 11800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 14.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1507.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 14.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1507.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 519.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 330.3338235294118, "minX": 1.71704616E12, "maxY": 330.3338235294118, "series": [{"data": [[1.71704616E12, 330.3338235294118]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71704616E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 11747.25, "series": [{"data": [[2.0, 1664.0], [3.0, 1682.0], [4.0, 1693.0], [5.0, 1693.0], [6.0, 1639.0], [7.0, 1706.0], [8.0, 1735.0], [9.0, 1703.0], [10.0, 1746.0], [11.0, 1744.0], [12.0, 1769.0], [13.0, 1751.0], [14.0, 1779.0], [15.0, 1742.0], [16.0, 1775.0], [17.0, 1775.0], [18.0, 1800.0], [19.0, 1794.0], [20.0, 1791.0], [21.0, 1768.0], [22.0, 1796.0], [23.0, 1809.0], [24.0, 1832.0], [25.0, 1846.0], [26.0, 1831.0], [27.0, 1802.0], [28.0, 1855.0], [29.0, 1861.0], [30.0, 1827.0], [31.0, 1868.0], [33.0, 1871.0], [32.0, 1882.0], [35.0, 1893.0], [34.0, 1929.0], [37.0, 1949.0], [36.0, 1882.0], [39.0, 1916.0], [38.0, 1949.0], [41.0, 1973.0], [40.0, 1932.0], [43.0, 1992.0], [42.0, 1964.0], [45.0, 1991.0], [44.0, 1995.0], [47.0, 2011.0], [46.0, 2015.0], [49.0, 2024.0], [48.0, 2003.0], [51.0, 2022.0], [50.0, 2024.0], [53.0, 2052.0], [52.0, 2034.0], [55.0, 2033.0], [54.0, 2018.0], [57.0, 2016.0], [56.0, 2046.0], [59.0, 2029.0], [58.0, 2047.0], [61.0, 2046.0], [60.0, 2067.0], [63.0, 2018.0], [62.0, 2073.0], [67.0, 2116.0], [66.0, 2039.0], [65.0, 2073.0], [64.0, 2086.0], [71.0, 2072.0], [70.0, 2120.0], [69.0, 2041.0], [68.0, 2104.0], [75.0, 2107.0], [74.0, 2135.0], [73.0, 2113.0], [72.0, 2045.0], [79.0, 2183.0], [78.0, 2126.0], [77.0, 2160.0], [76.0, 2142.0], [83.0, 2165.0], [82.0, 2174.0], [81.0, 2157.0], [80.0, 2145.0], [87.0, 2150.0], [86.0, 2167.0], [85.0, 2183.0], [84.0, 2147.0], [91.0, 2195.0], [90.0, 2158.0], [89.0, 2168.0], [88.0, 2180.0], [95.0, 2230.0], [94.0, 2222.0], [93.0, 2185.0], [99.0, 2217.0], [98.0, 2208.0], [97.0, 2253.0], [96.0, 2196.0], [103.0, 2212.0], [102.0, 2234.0], [101.0, 2224.0], [100.0, 2263.0], [107.0, 2255.0], [106.0, 2303.0], [105.0, 2254.0], [104.0, 2232.0], [111.0, 2270.0], [110.0, 2327.0], [109.0, 2356.0], [108.0, 2260.0], [115.0, 2339.0], [114.0, 2290.0], [113.0, 2317.0], [112.0, 2310.0], [119.0, 2340.0], [118.0, 2341.0], [117.0, 2324.0], [116.0, 2365.0], [123.0, 2371.0], [122.0, 2369.0], [121.0, 2359.0], [120.0, 2363.0], [127.0, 2403.0], [126.0, 2400.0], [125.0, 2399.0], [124.0, 2367.0], [135.0, 2447.0], [134.0, 2474.0], [133.0, 2446.0], [132.0, 2444.0], [131.0, 2445.0], [130.0, 2426.0], [129.0, 2405.0], [128.0, 2371.0], [143.0, 2472.0], [142.0, 2492.0], [141.0, 2480.0], [140.0, 2474.0], [139.0, 2491.0], [138.0, 2435.0], [137.0, 2467.0], [136.0, 2469.0], [151.0, 2551.0], [150.0, 2545.0], [149.0, 2524.0], [148.0, 2551.0], [147.0, 2537.0], [146.0, 2522.0], [145.0, 2513.0], [144.0, 2518.0], [159.0, 2619.0], [158.0, 2611.0], [157.0, 2589.0], [156.0, 2580.0], [155.0, 2531.0], [154.0, 2581.0], [153.0, 2542.0], [152.0, 2527.0], [164.0, 2625.0], [163.0, 2688.0], [162.0, 2647.0], [161.0, 2618.0], [160.0, 2624.0], [175.0, 3038.636363636364], [183.0, 3302.0], [182.0, 3349.0], [181.0, 3260.0], [180.0, 3258.0], [179.0, 3288.0], [178.0, 3276.0], [177.0, 3262.0], [176.0, 3197.0], [191.0, 3655.0], [190.0, 3589.0], [189.0, 3637.0], [188.0, 3647.0], [187.0, 3580.0], [186.0, 3571.0], [185.0, 3497.0], [184.0, 3493.0], [199.0, 3919.0], [198.0, 3869.6], [193.0, 3745.0], [192.0, 3772.0], [207.0, 4180.0], [206.0, 4213.0], [205.0, 4146.0], [204.0, 4090.0], [203.0, 4046.0], [202.0, 4067.0], [201.0, 3925.0], [200.0, 3955.0], [215.0, 4552.0], [214.0, 4523.0], [213.0, 4373.0], [212.0, 4368.0], [211.0, 4333.0], [210.0, 4313.0], [209.0, 4229.0], [208.0, 4204.0], [223.0, 4754.0], [222.0, 4762.0], [221.0, 4726.0], [220.0, 4697.0], [219.0, 4642.0], [218.0, 4602.0], [217.0, 4586.0], [216.0, 4613.0], [230.0, 4886.0], [229.0, 4810.0], [228.0, 4848.0], [227.0, 4825.0], [226.0, 4829.0], [225.0, 4827.0], [224.0, 4796.0], [239.0, 5022.0], [238.0, 5049.0], [237.0, 4993.0], [236.0, 4976.0], [235.0, 4945.0], [234.0, 4982.0], [233.0, 4863.0], [232.0, 4942.5], [247.0, 5132.0], [246.0, 5158.0], [245.0, 5128.0], [244.0, 5106.0], [243.0, 5107.0], [242.0, 5066.0], [241.0, 5044.0], [240.0, 5092.0], [255.0, 5335.0], [254.0, 5303.0], [253.0, 5216.0], [252.0, 5254.0], [251.0, 5253.0], [250.0, 5172.0], [249.0, 5242.0], [248.0, 5177.0], [270.0, 5462.0], [271.0, 5477.0], [269.0, 5478.0], [268.0, 5484.0], [267.0, 5483.0], [266.0, 5473.0], [265.0, 5473.0], [264.0, 5463.0], [263.0, 5465.0], [257.0, 5358.0], [256.0, 5330.0], [259.0, 5336.0], [258.0, 5337.0], [262.0, 5416.0], [261.0, 5389.0], [260.0, 5356.0], [286.0, 5697.0], [287.0, 5714.0], [285.0, 5693.0], [284.0, 5596.0], [283.0, 5652.0], [282.0, 5554.0], [281.0, 5563.0], [280.0, 5587.0], [279.0, 5530.0], [273.0, 5438.0], [272.0, 5460.0], [275.0, 5438.0], [274.0, 5491.0], [278.0, 5525.0], [277.0, 5499.0], [276.0, 5485.0], [302.0, 7197.0], [303.0, 7183.0], [301.0, 6579.0], [300.0, 6682.0], [299.0, 6895.0], [298.0, 6857.0], [297.0, 6633.0], [296.0, 6620.0], [295.0, 6095.0], [289.0, 5743.0], [288.0, 5704.0], [291.0, 5828.0], [290.0, 5728.0], [294.0, 6035.0], [293.0, 6004.0], [292.0, 5893.0], [318.0, 7609.0], [319.0, 7733.0], [317.0, 8030.0], [316.0, 7564.0], [315.0, 7397.0], [314.0, 7525.0], [313.0, 7848.0], [312.0, 7265.0], [311.0, 7643.0], [305.0, 7131.0], [304.0, 6753.0], [307.0, 7475.0], [306.0, 6931.0], [310.0, 7649.0], [309.0, 7044.0], [308.0, 7019.0], [334.0, 8545.0], [335.0, 7971.0], [333.0, 8506.0], [332.0, 8521.0], [331.0, 7997.0], [330.0, 8410.0], [329.0, 8446.0], [328.0, 7919.0], [327.0, 8363.0], [321.0, 7733.0], [320.0, 8147.0], [323.0, 7819.0], [322.0, 8177.0], [326.0, 7903.0], [325.0, 8255.0], [324.0, 8295.0], [350.0, 9271.0], [351.0, 9256.0], [349.0, 9277.0], [348.0, 9226.0], [347.0, 9222.0], [346.0, 9067.0], [345.0, 9065.0], [344.0, 8512.0], [343.0, 8350.0], [337.0, 8601.0], [336.0, 8137.0], [339.0, 8595.0], [338.0, 8617.0], [342.0, 8974.0], [341.0, 8888.0], [340.0, 8883.0], [366.0, 9934.0], [367.0, 9948.0], [365.0, 9742.0], [364.0, 9621.0], [363.0, 9629.0], [362.0, 9674.0], [361.0, 9650.0], [360.0, 9668.0], [359.0, 9719.0], [353.0, 8931.0], [352.0, 9328.0], [355.0, 9494.0], [354.0, 9382.0], [358.0, 9699.0], [357.0, 9644.0], [356.0, 9584.0], [382.0, 10411.0], [383.0, 10539.0], [380.0, 10523.0], [371.0, 10030.0], [370.0, 10061.0], [369.0, 9892.0], [368.0, 9881.0], [379.0, 10233.0], [378.0, 10204.0], [377.0, 10232.0], [376.0, 10142.0], [375.0, 10162.0], [374.0, 9961.0], [373.0, 10050.0], [372.0, 10052.0], [398.0, 211.0], [399.0, 9638.0], [397.0, 10563.0], [396.0, 11175.0], [395.0, 11214.0], [394.0, 11173.0], [393.0, 10845.0], [392.0, 10882.0], [391.0, 10822.0], [385.0, 10562.0], [384.0, 10539.0], [387.0, 10685.0], [386.0, 10597.0], [390.0, 10809.0], [389.0, 10817.0], [388.0, 10647.0], [414.0, 429.0], [415.0, 1.0], [413.0, 438.0], [412.0, 657.0], [411.0, 1.0], [410.0, 0.0], [409.0, 211.0], [408.0, 166.0], [407.0, 84.0], [401.0, 8822.0], [400.0, 9206.0], [403.0, 8525.0], [402.0, 8528.0], [406.0, 96.0], [405.0, 156.0], [404.0, 8357.0], [431.0, 443.0], [421.0, 90.0], [420.0, 642.0], [425.0, 281.66666666666663], [430.0, 6741.0], [429.0, 647.0], [428.0, 1.0], [419.0, 677.0], [418.0, 429.0], [417.0, 1.0], [416.0, 615.0], [422.0, 693.0], [427.0, 0.0], [426.0, 457.0], [424.0, 422.5], [446.0, 241.0], [437.0, 287.0], [439.0, 473.0], [433.0, 501.0], [432.0, 498.0], [435.0, 413.0], [434.0, 415.0], [438.0, 425.0], [440.0, 496.5], [447.0, 477.0], [445.0, 488.0], [444.0, 464.0], [443.0, 463.0], [442.0, 476.0], [441.0, 0.0], [462.0, 486.0], [456.0, 468.3333333333333], [459.0, 236.0], [463.0, 686.0], [461.0, 480.0], [460.0, 479.0], [458.0, 462.0], [457.0, 1.0], [454.0, 499.0], [449.0, 485.0], [448.0, 489.0], [451.0, 0.0], [450.0, 461.0], [453.0, 503.0], [452.0, 505.0], [476.0, 463.0], [466.0, 221.5], [465.0, 509.0], [464.0, 462.0], [467.0, 432.0], [471.0, 409.0], [470.0, 512.0], [469.0, 426.0], [468.0, 626.0], [472.0, 233.5], [479.0, 568.0], [478.0, 6001.0], [477.0, 427.0], [475.0, 398.0], [474.0, 444.0], [483.0, 198.0], [484.0, 426.0], [482.0, 496.8], [481.0, 214.5], [480.0, 404.0], [1.0, 1645.0]], "isOverall": false, "label": "contact Request", "isController": false}, {"data": [[253.95882352941177, 3883.543137254902]], "isOverall": false, "label": "contact Request-Aggregated", "isController": false}, {"data": [[65.0, 1283.0], [67.0, 1315.0], [75.0, 1429.5], [76.0, 1421.0], [80.0, 1479.0], [82.0, 1497.0], [83.0, 1552.0], [88.0, 1558.0], [90.0, 1623.0], [91.0, 1624.0], [92.0, 1570.0], [93.0, 1615.0], [96.0, 1691.0], [97.0, 1647.0], [98.0, 1658.0], [99.0, 1643.0], [104.0, 1696.0], [105.0, 1740.0], [107.0, 1694.0], [110.0, 1798.0], [111.0, 1783.0], [114.0, 1788.0], [116.0, 1844.0], [117.0, 1825.0], [119.0, 1846.0], [120.0, 1856.0], [121.0, 1845.0], [126.0, 1915.5], [127.0, 1898.0], [128.0, 1870.0], [130.0, 1943.0], [132.0, 1967.0], [133.0, 1932.0], [135.0, 1961.5], [137.0, 1955.0], [140.0, 2058.0], [141.0, 2001.0], [144.0, 1921.0], [146.0, 1970.0], [147.0, 1988.0], [150.0, 2050.0], [152.0, 2088.0], [154.0, 2048.0], [155.0, 2124.0], [156.0, 2179.0], [159.0, 2111.0], [160.0, 2202.5], [165.0, 2254.0], [168.0, 2232.0], [172.0, 2311.0], [175.0, 2372.0], [178.0, 2386.5], [183.0, 2408.0], [185.0, 2413.0], [186.0, 2492.0], [191.0, 2516.0], [193.0, 2530.0], [196.0, 2563.0], [197.0, 2532.0], [198.0, 2597.0], [200.0, 2734.0], [202.0, 2601.0], [204.0, 2652.0], [207.0, 2693.0], [209.0, 2713.0], [211.0, 2670.0], [212.0, 2721.0], [216.0, 2761.5], [219.0, 2801.0], [220.0, 2789.0], [222.0, 2786.0], [229.0, 2887.0], [230.0, 2940.0], [231.0, 2993.0], [234.0, 2975.0], [235.0, 2961.0], [241.0, 3058.5], [242.0, 3045.0], [246.0, 3079.5], [248.0, 3132.0], [251.0, 3169.0], [257.0, 3236.0], [259.0, 3246.0], [262.0, 3288.0], [264.0, 3253.0], [269.0, 3396.5], [272.0, 3432.0], [276.0, 3455.5], [285.0, 3573.0], [286.0, 3613.0], [287.0, 3658.0], [291.0, 3673.0], [293.0, 3665.5], [297.0, 3756.0], [299.0, 3742.0], [301.0, 3772.0], [306.0, 3833.0], [309.0, 3911.0], [311.0, 3916.0], [316.0, 3988.0], [317.0, 3973.0], [321.0, 4076.0], [325.0, 4077.0], [328.0, 4177.0], [330.0, 4199.0], [331.0, 4157.0], [335.0, 4250.0], [339.0, 4285.0], [341.0, 4262.0], [342.0, 4329.0], [347.0, 4403.0], [348.0, 4399.0], [350.0, 4416.0], [353.0, 4455.0], [356.0, 4501.0], [357.0, 4479.0], [358.0, 4507.0], [363.0, 4562.0], [367.0, 4593.0], [372.0, 4727.0], [376.0, 4754.0], [377.0, 8057.5], [379.0, 9132.333333333334], [375.0, 11183.0], [373.0, 11272.0], [396.0, 10936.24], [384.0, 8114.5], [387.0, 8191.0], [386.0, 11357.0], [388.0, 4883.0], [389.0, 11579.666666666666], [391.0, 11652.0], [390.0, 11711.0], [399.0, 9783.61111111111], [393.0, 11747.25], [392.0, 11648.666666666666], [398.0, 10396.307692307693], [397.0, 10848.714285714286], [395.0, 11685.666666666666], [394.0, 11706.272727272728], [415.0, 7189.0], [401.0, 9188.631578947368], [402.0, 5098.0], [405.0, 8398.599999999999], [404.0, 8935.142857142857], [406.0, 7422.666666666667], [407.0, 8572.666666666666], [400.0, 9743.0], [410.0, 6669.0], [414.0, 7854.0], [403.0, 9077.42857142857], [411.0, 8028.0], [409.0, 8226.0], [408.0, 8425.0], [429.0, 665.0], [416.0, 5271.0], [417.0, 7083.5], [421.0, 6847.0], [425.0, 6436.5], [427.0, 3922.5], [426.0, 7468.5], [431.0, 7321.0], [424.0, 7580.666666666667], [430.0, 7380.0], [428.0, 7402.0], [434.0, 492.0], [433.0, 4754.666666666667], [435.0, 5578.5], [440.0, 3849.5], [439.0, 747.5], [438.0, 7185.5], [441.0, 5690.0], [442.0, 5732.0], [443.0, 2706.0], [445.0, 2827.6666666666665], [446.0, 3233.0], [460.0, 6019.0], [448.0, 5762.0], [449.0, 5776.0], [451.0, 7060.0], [450.0, 7074.0], [454.0, 6492.0], [456.0, 1163.909090909091], [459.0, 6048.0], [457.0, 665.0], [461.0, 6020.0], [462.0, 516.0], [463.0, 586.0], [466.0, 6105.0], [465.0, 2658.1666666666665], [467.0, 2002.5], [477.0, 1848.2222222222222], [478.0, 4522.666666666667], [479.0, 2476.5], [468.0, 1886.0], [469.0, 3296.5], [471.0, 548.0], [472.0, 515.75], [474.0, 2899.8], [475.0, 2447.1666666666665], [481.0, 3476.25], [482.0, 2862.4], [483.0, 1524.1666666666665], [484.0, 661.0], [480.0, 425.0]], "isOverall": false, "label": "home Request", "isController": false}, {"data": [[363.84705882352966, 6038.26274509804]], "isOverall": false, "label": "home Request-Aggregated", "isController": false}, {"data": [[112.0, 894.0], [121.0, 1127.0], [141.0, 1331.0], [142.0, 1339.0], [143.0, 1350.0], [152.0, 1435.0], [157.0, 1484.0], [161.0, 1566.0], [178.0, 1824.0], [181.0, 1834.0], [184.0, 1865.0], [185.0, 1868.0], [188.0, 1891.0], [195.0, 1952.0], [198.0, 2028.0], [199.0, 2014.0], [202.0, 2075.0], [210.0, 2137.0], [212.0, 2164.0], [213.0, 2173.0], [220.0, 2256.0], [223.0, 2259.0], [225.0, 2295.0], [232.0, 2355.0], [239.0, 2466.0], [240.0, 2465.0], [247.0, 2559.0], [243.0, 5714.0], [249.0, 2579.0], [252.0, 2626.0], [254.0, 5728.0], [250.0, 5675.0], [265.0, 2793.0], [267.0, 2780.0], [269.0, 4329.25], [271.0, 5858.0], [266.0, 5747.0], [258.0, 5705.5], [277.0, 2943.0], [283.0, 3017.0], [286.0, 6073.0], [284.0, 5969.75], [281.0, 5917.0], [279.0, 5924.0], [275.0, 5885.5], [273.0, 5838.0], [302.0, 7075.666666666667], [288.0, 5349.75], [290.0, 5752.714285714285], [292.0, 5993.555555555557], [293.0, 6438.333333333333], [295.0, 6574.0], [294.0, 6502.0], [303.0, 7129.0], [301.0, 7011.0], [291.0, 6248.0], [299.0, 6916.625000000001], [297.0, 6781.0], [296.0, 6633.666666666667], [318.0, 7943.0], [306.0, 6380.25], [309.0, 7090.8], [311.0, 7588.5], [305.0, 7265.9], [304.0, 7199.0], [310.0, 7522.0], [316.0, 6447.666666666667], [319.0, 8002.5], [317.0, 7952.0], [315.0, 7894.0], [314.0, 7842.0], [313.0, 7872.5], [312.0, 7725.428571428572], [334.0, 6058.0], [321.0, 6540.666666666667], [328.0, 3626.0], [335.0, 8440.0], [333.0, 8429.0], [323.0, 8146.5], [322.0, 8090.5], [331.0, 8383.0], [330.0, 8292.0], [327.0, 8245.5], [320.0, 8094.0], [326.0, 8199.25], [325.0, 8180.0], [324.0, 8162.0], [339.0, 8733.666666666666], [340.0, 3773.0], [342.0, 6396.5], [348.0, 3882.0], [350.0, 3911.0], [344.0, 8917.0], [343.0, 8958.0], [336.0, 8509.333333333334], [338.0, 8577.0], [337.0, 8563.0], [352.0, 3908.0], [356.0, 3929.0], [364.0, 4081.0], [366.0, 4119.0], [378.0, 4257.0], [381.0, 4252.0], [383.0, 4303.0], [379.0, 10871.5], [375.0, 10754.0], [373.0, 10750.0], [397.0, 9618.357142857143], [392.0, 7795.5], [399.0, 7146.5], [398.0, 8159.5], [396.0, 6500.6], [394.0, 7594.333333333333], [391.0, 11245.5], [389.0, 11059.0], [388.0, 11016.333333333334], [414.0, 4022.666666666667], [402.0, 4534.0], [401.0, 5587.75], [400.0, 6680.090909090909], [403.0, 8549.0], [415.0, 1814.5], [411.0, 2263.6], [410.0, 0.0], [409.0, 3012.846153846154], [408.0, 1675.8], [407.0, 4022.75], [406.0, 58.0], [405.0, 3222.2500000000005], [404.0, 6344.5], [418.0, 4751.0], [420.0, 191.0], [421.0, 2374.0], [422.0, 127.0], [423.0, 4824.0], [417.0, 3574.666666666667], [425.0, 39.33333333333333], [424.0, 0.6666666666666666], [431.0, 1.0], [430.0, 322.5], [428.0, 4568.0], [427.0, 1.0], [426.0, 1.0], [446.0, 239.0], [433.0, 2258.5], [438.0, 308.0], [437.0, 6671.0], [435.0, 1438.5], [441.0, 0.0], [442.0, 0.0], [445.0, 2638.5], [447.0, 470.0], [443.0, 0.0], [440.0, 1.0], [460.0, 222.5], [448.0, 0.0], [449.0, 351.0], [451.0, 3268.0], [450.0, 0.0], [454.0, 1794.6666666666665], [452.0, 498.5], [455.0, 5353.0], [456.0, 423.0], [459.0, 0.0], [458.0, 6448.0], [461.0, 326.6666666666667], [462.0, 3027.0], [463.0, 474.3333333333333], [465.0, 1617.888888888889], [466.0, 1575.25], [467.0, 1.0], [476.0, 481.25], [478.0, 226.0], [477.0, 1018.75], [479.0, 214.24999999999997], [469.0, 1884.0], [471.0, 1516.2], [470.0, 3195.5], [468.0, 381.0], [472.0, 2397.0], [473.0, 5711.0], [474.0, 305.1428571428571], [475.0, 1539.75], [482.0, 270.75], [483.0, 1175.5714285714287], [481.0, 1532.3999999999999], [480.0, 3228.5]], "isOverall": false, "label": "about Request", "isController": false}, {"data": [[371.9392156862744, 4501.339215686275]], "isOverall": false, "label": "about Request-Aggregated", "isController": false}, {"data": [[175.0, 3113.142857142857], [183.0, 3442.666666666667], [182.0, 3342.916666666667], [181.0, 3344.5], [180.0, 3308.5], [179.0, 3302.333333333333], [178.0, 3302.8], [177.0, 3324.0], [176.0, 3268.0], [191.0, 3714.0714285714284], [190.0, 3644.5], [189.0, 3628.0], [188.0, 3624.3333333333335], [187.0, 3617.0], [185.0, 3520.3333333333335], [184.0, 3497.0], [199.0, 3927.2], [198.0, 3840.125], [207.0, 4179.333333333333], [206.0, 4217.0], [204.0, 4173.0], [203.0, 4102.25], [201.0, 4015.4], [200.0, 3918.2], [215.0, 4595.333333333333], [213.0, 4448.4], [211.0, 4357.0], [209.0, 4302.333333333333], [208.0, 4247.5], [216.0, 3760.3333333333335], [221.0, 4700.5], [219.0, 4653.666666666667], [217.0, 4612.5], [227.0, 4790.0], [224.0, 4813.0], [239.0, 2355.0], [271.0, 5489.5], [269.0, 5472.0], [268.0, 5501.0], [265.0, 5486.0], [286.0, 5693.0], [284.0, 5668.0], [283.0, 5608.0], [282.0, 5662.0], [291.0, 5885.0], [301.0, 6791.0], [300.0, 3181.0], [302.0, 6981.0], [299.0, 6583.5], [296.0, 6575.0], [293.0, 6449.0], [292.0, 5890.0], [290.0, 6244.0], [288.0, 5697.0], [305.0, 5019.0], [308.0, 5370.0], [319.0, 7734.0], [316.0, 8047.0], [315.0, 7612.0], [312.0, 7474.5], [311.0, 7255.0], [309.0, 7101.0], [329.0, 3545.0], [333.0, 8576.0], [331.0, 8017.0], [327.0, 7950.0], [326.0, 8415.0], [323.0, 8054.0], [322.0, 7939.666666666667], [320.0, 8110.0], [350.0, 9249.0], [342.0, 3717.0], [341.0, 8942.0], [351.0, 9292.0], [349.0, 9246.25], [348.0, 9228.0], [346.0, 9114.0], [345.0, 9033.0], [344.0, 9052.0], [343.0, 9033.0], [337.0, 8649.0], [336.0, 8627.0], [339.0, 8848.0], [338.0, 8638.0], [355.0, 9551.333333333334], [365.0, 9829.8], [358.0, 6787.0], [367.0, 9943.0], [364.0, 9718.0], [361.0, 9709.0], [360.0, 9684.0], [356.0, 9668.0], [354.0, 9477.0], [353.0, 9391.5], [383.0, 10521.0], [382.0, 10517.0], [379.0, 10272.25], [375.0, 10189.25], [373.0, 10061.0], [372.0, 10044.0], [370.0, 10061.0], [368.0, 10041.0], [398.0, 6553.333333333334], [399.0, 5898.25], [397.0, 5590.181818181819], [396.0, 3767.0], [395.0, 11256.0], [394.0, 11252.666666666666], [393.0, 10950.5], [392.0, 10919.5], [391.0, 10826.0], [386.0, 10604.0], [384.0, 10580.5], [388.0, 10709.0], [415.0, 3625.5], [405.0, 4134.428571428572], [404.0, 88.0], [412.0, 4609.0], [414.0, 0.0], [411.0, 1574.0], [410.0, 7451.0], [409.0, 2173.714285714286], [408.0, 3887.0], [407.0, 3931.75], [401.0, 5046.142857142857], [400.0, 3660.2], [403.0, 89.5], [402.0, 2924.6666666666665], [418.0, 4689.0], [419.0, 259.5], [420.0, 39.0], [423.0, 0.0], [417.0, 1783.5], [421.0, 2082.0], [425.0, 2736.0], [431.0, 503.5], [428.0, 2262.3333333333335], [427.0, 6816.0], [424.0, 543.75], [435.0, 338.0], [437.0, 1473.25], [443.0, 497.0], [445.0, 0.0], [446.0, 2817.5], [447.0, 495.0], [444.0, 711.0], [441.0, 6503.0], [439.0, 443.0], [434.0, 424.5], [433.0, 165.0], [438.0, 709.0], [461.0, 477.0], [455.0, 353.5], [454.0, 1.0], [452.0, 503.5], [456.0, 525.75], [459.0, 5362.0], [462.0, 0.0], [460.0, 486.0], [451.0, 3232.0], [458.0, 1.0], [457.0, 6387.0], [465.0, 287.75], [466.0, 1392.4], [467.0, 417.0], [468.0, 484.0], [471.0, 416.7142857142857], [470.0, 1.0], [469.0, 0.0], [473.0, 0.0], [477.0, 413.87499999999994], [479.0, 431.0], [472.0, 3076.5], [478.0, 448.0], [476.0, 520.4], [475.0, 290.0], [474.0, 500.16666666666663], [482.0, 539.0], [483.0, 3044.75], [481.0, 1101.625], [480.0, 307.5]], "isOverall": false, "label": "services Request", "isController": false}, {"data": [[331.5901960784314, 4338.388235294125]], "isOverall": false, "label": "services Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 484.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3310.8166666666666, "minX": 1.71704616E12, "maxY": 1547043.1833333333, "series": [{"data": [[1.71704616E12, 1547043.1833333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71704616E12, 3310.8166666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71704616E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 3883.543137254902, "minX": 1.71704616E12, "maxY": 6038.26274509804, "series": [{"data": [[1.71704616E12, 3883.543137254902]], "isOverall": false, "label": "contact Request", "isController": false}, {"data": [[1.71704616E12, 6038.26274509804]], "isOverall": false, "label": "home Request", "isController": false}, {"data": [[1.71704616E12, 4501.339215686275]], "isOverall": false, "label": "about Request", "isController": false}, {"data": [[1.71704616E12, 4338.388235294125]], "isOverall": false, "label": "services Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71704616E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 3823.7215686274476, "minX": 1.71704616E12, "maxY": 5630.876470588235, "series": [{"data": [[1.71704616E12, 3823.7215686274476]], "isOverall": false, "label": "contact Request", "isController": false}, {"data": [[1.71704616E12, 5630.876470588235]], "isOverall": false, "label": "home Request", "isController": false}, {"data": [[1.71704616E12, 4311.970588235296]], "isOverall": false, "label": "about Request", "isController": false}, {"data": [[1.71704616E12, 4280.692156862746]], "isOverall": false, "label": "services Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71704616E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 70.23137254901962, "minX": 1.71704616E12, "maxY": 441.2254901960781, "series": [{"data": [[1.71704616E12, 136.52549019607827]], "isOverall": false, "label": "contact Request", "isController": false}, {"data": [[1.71704616E12, 441.2254901960781]], "isOverall": false, "label": "home Request", "isController": false}, {"data": [[1.71704616E12, 70.23137254901962]], "isOverall": false, "label": "about Request", "isController": false}, {"data": [[1.71704616E12, 156.2333333333332]], "isOverall": false, "label": "services Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71704616E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 894.0, "minX": 1.71704616E12, "maxY": 11847.0, "series": [{"data": [[1.71704616E12, 11847.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71704616E12, 894.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71704616E12, 10494.4]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71704616E12, 11684.34]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71704616E12, 6055.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.71704616E12, 11106.999999999998]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71704616E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 17.0, "maxY": 10991.0, "series": [{"data": [[32.0, 3911.0], [35.0, 2209.0], [37.0, 2713.0], [41.0, 1796.0], [43.0, 10526.0], [44.0, 10991.0], [46.0, 9914.0], [48.0, 9476.0], [51.0, 8926.0], [58.0, 8145.0], [59.0, 10944.0], [63.0, 8521.0], [64.0, 6568.0], [75.0, 7804.0], [72.0, 7355.5], [78.0, 9872.0], [85.0, 3641.0], [84.0, 3134.0], [90.0, 4370.5], [94.0, 5498.5], [99.0, 2183.0], [117.0, 7183.0], [149.0, 5926.0], [209.0, 6517.0], [17.0, 1558.0], [28.0, 4555.5], [31.0, 3253.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[35.0, 197.0], [149.0, 438.5], [75.0, 0.0], [43.0, 130.0], [44.0, 139.0], [46.0, 97.5], [48.0, 146.0], [51.0, 156.0], [209.0, 429.5], [117.0, 427.5], [58.0, 79.0], [63.0, 139.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 209.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 17.0, "maxY": 10860.0, "series": [{"data": [[32.0, 3603.5], [35.0, 1818.0], [37.0, 2355.0], [41.0, 1794.0], [43.0, 10154.0], [44.0, 10582.0], [46.0, 9568.0], [48.0, 9116.0], [51.0, 8611.0], [58.0, 7953.5], [59.0, 10860.0], [63.0, 8354.0], [64.0, 6375.5], [75.0, 7462.0], [72.0, 7232.5], [78.0, 9869.5], [85.0, 3640.0], [84.0, 3133.0], [90.0, 4368.0], [94.0, 5491.0], [99.0, 2181.0], [117.0, 6910.0], [149.0, 5555.0], [209.0, 6171.0], [17.0, 1163.0], [28.0, 4238.5], [31.0, 2894.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[35.0, 0.0], [149.0, 0.0], [75.0, 0.0], [43.0, 0.0], [44.0, 0.0], [46.0, 0.0], [48.0, 0.0], [51.0, 0.0], [209.0, 0.0], [117.0, 0.0], [58.0, 0.0], [63.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 209.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 34.0, "minX": 1.71704616E12, "maxY": 34.0, "series": [{"data": [[1.71704616E12, 34.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71704616E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.2333333333333334, "minX": 1.71704616E12, "maxY": 25.35, "series": [{"data": [[1.71704616E12, 25.35]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.71704616E12, 3.8666666666666667]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLHandshakeException", "isController": false}, {"data": [[1.71704616E12, 1.2333333333333334]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.71704616E12, 3.55]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71704616E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.3166666666666667, "minX": 1.71704616E12, "maxY": 7.183333333333334, "series": [{"data": [[1.71704616E12, 2.6]], "isOverall": false, "label": "services Request-failure", "isController": false}, {"data": [[1.71704616E12, 7.183333333333334]], "isOverall": false, "label": "home Request-success", "isController": false}, {"data": [[1.71704616E12, 5.9]], "isOverall": false, "label": "services Request-success", "isController": false}, {"data": [[1.71704616E12, 1.3166666666666667]], "isOverall": false, "label": "home Request-failure", "isController": false}, {"data": [[1.71704616E12, 2.9833333333333334]], "isOverall": false, "label": "about Request-failure", "isController": false}, {"data": [[1.71704616E12, 1.75]], "isOverall": false, "label": "contact Request-failure", "isController": false}, {"data": [[1.71704616E12, 5.516666666666667]], "isOverall": false, "label": "about Request-success", "isController": false}, {"data": [[1.71704616E12, 6.75]], "isOverall": false, "label": "contact Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71704616E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 8.65, "minX": 1.71704616E12, "maxY": 25.35, "series": [{"data": [[1.71704616E12, 25.35]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.71704616E12, 8.65]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71704616E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

