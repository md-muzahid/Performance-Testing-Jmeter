/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 12680.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 7.0], [3.3, 7.0], [3.4, 48.0], [3.5, 48.0], [3.6, 102.0], [3.7, 102.0], [3.8, 114.0], [3.9, 114.0], [4.0, 117.0], [4.1, 117.0], [4.2, 144.0], [4.3, 144.0], [4.4, 196.0], [4.5, 196.0], [4.6, 197.0], [4.7, 197.0], [4.8, 209.0], [4.9, 209.0], [5.0, 385.0], [5.1, 385.0], [5.2, 392.0], [5.3, 392.0], [5.4, 394.0], [5.5, 394.0], [5.6, 396.0], [5.7, 396.0], [5.8, 400.0], [5.9, 400.0], [6.0, 400.0], [6.1, 400.0], [6.2, 401.0], [6.3, 401.0], [6.4, 404.0], [6.5, 404.0], [6.6, 405.0], [6.7, 405.0], [6.8, 406.0], [6.9, 406.0], [7.0, 406.0], [7.1, 406.0], [7.2, 411.0], [7.3, 411.0], [7.4, 411.0], [7.5, 411.0], [7.6, 414.0], [7.7, 414.0], [7.8, 415.0], [7.9, 415.0], [8.0, 415.0], [8.1, 415.0], [8.2, 415.0], [8.3, 415.0], [8.4, 416.0], [8.5, 416.0], [8.6, 416.0], [8.7, 416.0], [8.8, 416.0], [8.9, 418.0], [9.0, 418.0], [9.1, 419.0], [9.2, 419.0], [9.3, 419.0], [9.4, 419.0], [9.5, 419.0], [9.6, 419.0], [9.7, 419.0], [9.8, 419.0], [9.9, 419.0], [10.0, 419.0], [10.1, 420.0], [10.2, 420.0], [10.3, 421.0], [10.4, 421.0], [10.5, 421.0], [10.6, 421.0], [10.7, 422.0], [10.8, 422.0], [10.9, 423.0], [11.0, 423.0], [11.1, 423.0], [11.2, 423.0], [11.3, 424.0], [11.4, 424.0], [11.5, 424.0], [11.6, 424.0], [11.7, 425.0], [11.8, 425.0], [11.9, 427.0], [12.0, 427.0], [12.1, 428.0], [12.2, 428.0], [12.3, 428.0], [12.4, 428.0], [12.5, 429.0], [12.6, 429.0], [12.7, 429.0], [12.8, 429.0], [12.9, 429.0], [13.0, 429.0], [13.1, 429.0], [13.2, 429.0], [13.3, 429.0], [13.4, 429.0], [13.5, 429.0], [13.6, 429.0], [13.7, 430.0], [13.8, 430.0], [13.9, 432.0], [14.0, 432.0], [14.1, 432.0], [14.2, 432.0], [14.3, 432.0], [14.4, 432.0], [14.5, 433.0], [14.6, 433.0], [14.7, 435.0], [14.8, 435.0], [14.9, 435.0], [15.0, 435.0], [15.1, 436.0], [15.2, 436.0], [15.3, 437.0], [15.4, 437.0], [15.5, 437.0], [15.6, 437.0], [15.7, 437.0], [15.8, 437.0], [15.9, 441.0], [16.0, 441.0], [16.1, 442.0], [16.2, 442.0], [16.3, 444.0], [16.4, 444.0], [16.5, 445.0], [16.6, 445.0], [16.7, 445.0], [16.8, 448.0], [16.9, 448.0], [17.0, 450.0], [17.1, 450.0], [17.2, 451.0], [17.3, 451.0], [17.4, 599.0], [17.5, 599.0], [17.6, 611.0], [17.7, 611.0], [17.8, 611.0], [17.9, 611.0], [18.0, 617.0], [18.1, 617.0], [18.2, 621.0], [18.3, 621.0], [18.4, 622.0], [18.5, 622.0], [18.6, 627.0], [18.7, 627.0], [18.8, 637.0], [18.9, 637.0], [19.0, 639.0], [19.1, 639.0], [19.2, 643.0], [19.3, 643.0], [19.4, 644.0], [19.5, 644.0], [19.6, 645.0], [19.7, 645.0], [19.8, 646.0], [19.9, 646.0], [20.0, 647.0], [20.1, 647.0], [20.2, 658.0], [20.3, 658.0], [20.4, 658.0], [20.5, 658.0], [20.6, 660.0], [20.7, 660.0], [20.8, 666.0], [20.9, 666.0], [21.0, 676.0], [21.1, 676.0], [21.2, 1492.0], [21.3, 1492.0], [21.4, 1509.0], [21.5, 1509.0], [21.6, 1517.0], [21.7, 1517.0], [21.8, 1556.0], [21.9, 1556.0], [22.0, 1558.0], [22.1, 1558.0], [22.2, 1590.0], [22.3, 1590.0], [22.4, 1595.0], [22.5, 1595.0], [22.6, 1608.0], [22.7, 1608.0], [22.8, 1611.0], [22.9, 1611.0], [23.0, 1637.0], [23.1, 1637.0], [23.2, 1642.0], [23.3, 1642.0], [23.4, 1646.0], [23.5, 1646.0], [23.6, 1649.0], [23.7, 1649.0], [23.8, 1657.0], [23.9, 1657.0], [24.0, 1657.0], [24.1, 1657.0], [24.2, 1659.0], [24.3, 1659.0], [24.4, 1667.0], [24.5, 1667.0], [24.6, 1679.0], [24.7, 1679.0], [24.8, 1680.0], [24.9, 1680.0], [25.0, 1693.0], [25.1, 1693.0], [25.2, 1693.0], [25.3, 1708.0], [25.4, 1708.0], [25.5, 1715.0], [25.6, 1715.0], [25.7, 1720.0], [25.8, 1720.0], [25.9, 1723.0], [26.0, 1723.0], [26.1, 1734.0], [26.2, 1734.0], [26.3, 1738.0], [26.4, 1738.0], [26.5, 1744.0], [26.6, 1744.0], [26.7, 1747.0], [26.8, 1747.0], [26.9, 1750.0], [27.0, 1750.0], [27.1, 1750.0], [27.2, 1750.0], [27.3, 1753.0], [27.4, 1753.0], [27.5, 1753.0], [27.6, 1753.0], [27.7, 1771.0], [27.8, 1771.0], [27.9, 1772.0], [28.0, 1772.0], [28.1, 1772.0], [28.2, 1772.0], [28.3, 1777.0], [28.4, 1777.0], [28.5, 1782.0], [28.6, 1782.0], [28.7, 1784.0], [28.8, 1784.0], [28.9, 1790.0], [29.0, 1790.0], [29.1, 1793.0], [29.2, 1793.0], [29.3, 1793.0], [29.4, 1793.0], [29.5, 1794.0], [29.6, 1794.0], [29.7, 1795.0], [29.8, 1795.0], [29.9, 1801.0], [30.0, 1801.0], [30.1, 1805.0], [30.2, 1805.0], [30.3, 1806.0], [30.4, 1806.0], [30.5, 1808.0], [30.6, 1808.0], [30.7, 1815.0], [30.8, 1815.0], [30.9, 1818.0], [31.0, 1818.0], [31.1, 1824.0], [31.2, 1824.0], [31.3, 1826.0], [31.4, 1826.0], [31.5, 1826.0], [31.6, 1826.0], [31.7, 1829.0], [31.8, 1829.0], [31.9, 1834.0], [32.0, 1834.0], [32.1, 1856.0], [32.2, 1856.0], [32.3, 1856.0], [32.4, 1856.0], [32.5, 1856.0], [32.6, 1856.0], [32.7, 1859.0], [32.8, 1859.0], [32.9, 1860.0], [33.0, 1860.0], [33.1, 1863.0], [33.2, 1863.0], [33.3, 1865.0], [33.4, 1871.0], [33.5, 1871.0], [33.6, 1873.0], [33.7, 1873.0], [33.8, 1875.0], [33.9, 1875.0], [34.0, 1877.0], [34.1, 1877.0], [34.2, 1878.0], [34.3, 1878.0], [34.4, 1880.0], [34.5, 1880.0], [34.6, 1899.0], [34.7, 1899.0], [34.8, 1907.0], [34.9, 1907.0], [35.0, 1910.0], [35.1, 1910.0], [35.2, 1928.0], [35.3, 1928.0], [35.4, 1931.0], [35.5, 1931.0], [35.6, 1932.0], [35.7, 1932.0], [35.8, 1939.0], [35.9, 1939.0], [36.0, 1941.0], [36.1, 1941.0], [36.2, 1946.0], [36.3, 1946.0], [36.4, 1972.0], [36.5, 1972.0], [36.6, 1982.0], [36.7, 1982.0], [36.8, 1984.0], [36.9, 1984.0], [37.0, 1990.0], [37.1, 1990.0], [37.2, 1991.0], [37.3, 1991.0], [37.4, 1991.0], [37.5, 1991.0], [37.6, 1991.0], [37.7, 1991.0], [37.8, 1996.0], [37.9, 1996.0], [38.0, 2008.0], [38.1, 2008.0], [38.2, 2012.0], [38.3, 2012.0], [38.4, 2030.0], [38.5, 2030.0], [38.6, 2038.0], [38.7, 2038.0], [38.8, 2043.0], [38.9, 2043.0], [39.0, 2046.0], [39.1, 2046.0], [39.2, 2047.0], [39.3, 2047.0], [39.4, 2059.0], [39.5, 2059.0], [39.6, 2070.0], [39.7, 2070.0], [39.8, 2079.0], [39.9, 2079.0], [40.0, 2092.0], [40.1, 2092.0], [40.2, 2100.0], [40.3, 2100.0], [40.4, 2102.0], [40.5, 2102.0], [40.6, 2111.0], [40.7, 2111.0], [40.8, 2115.0], [40.9, 2115.0], [41.0, 2126.0], [41.1, 2126.0], [41.2, 2129.0], [41.3, 2129.0], [41.4, 2139.0], [41.5, 2139.0], [41.6, 2145.0], [41.7, 2145.0], [41.8, 2145.0], [41.9, 2147.0], [42.0, 2147.0], [42.1, 2157.0], [42.2, 2157.0], [42.3, 2161.0], [42.4, 2161.0], [42.5, 2165.0], [42.6, 2165.0], [42.7, 2167.0], [42.8, 2167.0], [42.9, 2175.0], [43.0, 2175.0], [43.1, 2200.0], [43.2, 2200.0], [43.3, 2215.0], [43.4, 2215.0], [43.5, 2216.0], [43.6, 2216.0], [43.7, 2219.0], [43.8, 2219.0], [43.9, 2221.0], [44.0, 2221.0], [44.1, 2247.0], [44.2, 2247.0], [44.3, 2249.0], [44.4, 2249.0], [44.5, 2260.0], [44.6, 2260.0], [44.7, 2262.0], [44.8, 2262.0], [44.9, 2267.0], [45.0, 2267.0], [45.1, 2270.0], [45.2, 2270.0], [45.3, 2282.0], [45.4, 2282.0], [45.5, 2288.0], [45.6, 2288.0], [45.7, 2293.0], [45.8, 2293.0], [45.9, 2304.0], [46.0, 2304.0], [46.1, 2304.0], [46.2, 2304.0], [46.3, 2308.0], [46.4, 2308.0], [46.5, 2316.0], [46.6, 2316.0], [46.7, 2327.0], [46.8, 2327.0], [46.9, 2339.0], [47.0, 2339.0], [47.1, 2340.0], [47.2, 2340.0], [47.3, 2342.0], [47.4, 2342.0], [47.5, 2352.0], [47.6, 2352.0], [47.7, 2353.0], [47.8, 2353.0], [47.9, 2357.0], [48.0, 2357.0], [48.1, 2361.0], [48.2, 2361.0], [48.3, 2365.0], [48.4, 2365.0], [48.5, 2377.0], [48.6, 2377.0], [48.7, 2389.0], [48.8, 2389.0], [48.9, 2409.0], [49.0, 2409.0], [49.1, 2412.0], [49.2, 2412.0], [49.3, 2414.0], [49.4, 2414.0], [49.5, 2438.0], [49.6, 2438.0], [49.7, 2443.0], [49.8, 2443.0], [49.9, 2443.0], [50.0, 2481.0], [50.1, 2481.0], [50.2, 2484.0], [50.3, 2484.0], [50.4, 2489.0], [50.5, 2489.0], [50.6, 2494.0], [50.7, 2494.0], [50.8, 2513.0], [50.9, 2513.0], [51.0, 2518.0], [51.1, 2518.0], [51.2, 2526.0], [51.3, 2526.0], [51.4, 2529.0], [51.5, 2529.0], [51.6, 2543.0], [51.7, 2543.0], [51.8, 2544.0], [51.9, 2544.0], [52.0, 2561.0], [52.1, 2561.0], [52.2, 2573.0], [52.3, 2573.0], [52.4, 2608.0], [52.5, 2608.0], [52.6, 2608.0], [52.7, 2608.0], [52.8, 2618.0], [52.9, 2618.0], [53.0, 3072.0], [53.1, 3072.0], [53.2, 3073.0], [53.3, 3073.0], [53.4, 3092.0], [53.5, 3092.0], [53.6, 3101.0], [53.7, 3101.0], [53.8, 3136.0], [53.9, 3136.0], [54.0, 3161.0], [54.1, 3161.0], [54.2, 3162.0], [54.3, 3162.0], [54.4, 3194.0], [54.5, 3194.0], [54.6, 3270.0], [54.7, 3270.0], [54.8, 3368.0], [54.9, 3368.0], [55.0, 3426.0], [55.1, 3426.0], [55.2, 3511.0], [55.3, 3511.0], [55.4, 3526.0], [55.5, 3526.0], [55.6, 3544.0], [55.7, 3544.0], [55.8, 3546.0], [55.9, 3546.0], [56.0, 3577.0], [56.1, 3577.0], [56.2, 3583.0], [56.3, 3583.0], [56.4, 3591.0], [56.5, 3591.0], [56.6, 3614.0], [56.7, 3614.0], [56.8, 3622.0], [56.9, 3622.0], [57.0, 3638.0], [57.1, 3638.0], [57.2, 3719.0], [57.3, 3719.0], [57.4, 3743.0], [57.5, 3743.0], [57.6, 3796.0], [57.7, 3796.0], [57.8, 3805.0], [57.9, 3805.0], [58.0, 3827.0], [58.1, 3827.0], [58.2, 3847.0], [58.3, 3847.0], [58.4, 3865.0], [58.5, 3935.0], [58.6, 3935.0], [58.7, 3947.0], [58.8, 3947.0], [58.9, 4024.0], [59.0, 4024.0], [59.1, 4033.0], [59.2, 4033.0], [59.3, 4105.0], [59.4, 4105.0], [59.5, 4109.0], [59.6, 4109.0], [59.7, 4110.0], [59.8, 4110.0], [59.9, 4242.0], [60.0, 4242.0], [60.1, 4253.0], [60.2, 4253.0], [60.3, 4259.0], [60.4, 4259.0], [60.5, 4283.0], [60.6, 4283.0], [60.7, 4292.0], [60.8, 4292.0], [60.9, 4305.0], [61.0, 4305.0], [61.1, 4334.0], [61.2, 4334.0], [61.3, 4386.0], [61.4, 4386.0], [61.5, 4427.0], [61.6, 4427.0], [61.7, 4499.0], [61.8, 4499.0], [61.9, 4569.0], [62.0, 4569.0], [62.1, 4597.0], [62.2, 4597.0], [62.3, 4653.0], [62.4, 4653.0], [62.5, 4668.0], [62.6, 4668.0], [62.7, 4698.0], [62.8, 4698.0], [62.9, 4712.0], [63.0, 4712.0], [63.1, 4732.0], [63.2, 4732.0], [63.3, 4739.0], [63.4, 4739.0], [63.5, 4820.0], [63.6, 4820.0], [63.7, 4825.0], [63.8, 4825.0], [63.9, 4837.0], [64.0, 4837.0], [64.1, 4881.0], [64.2, 4881.0], [64.3, 4903.0], [64.4, 4903.0], [64.5, 4920.0], [64.6, 4920.0], [64.7, 4941.0], [64.8, 4941.0], [64.9, 4960.0], [65.0, 4960.0], [65.1, 4961.0], [65.2, 4961.0], [65.3, 4970.0], [65.4, 4970.0], [65.5, 4973.0], [65.6, 4973.0], [65.7, 4997.0], [65.8, 4997.0], [65.9, 5004.0], [66.0, 5004.0], [66.1, 5016.0], [66.2, 5016.0], [66.3, 5021.0], [66.4, 5021.0], [66.5, 5023.0], [66.6, 5023.0], [66.7, 5046.0], [66.8, 5050.0], [66.9, 5050.0], [67.0, 5070.0], [67.1, 5070.0], [67.2, 5070.0], [67.3, 5070.0], [67.4, 5096.0], [67.5, 5096.0], [67.6, 5105.0], [67.7, 5105.0], [67.8, 5106.0], [67.9, 5106.0], [68.0, 5106.0], [68.1, 5106.0], [68.2, 5126.0], [68.3, 5126.0], [68.4, 5132.0], [68.5, 5132.0], [68.6, 5157.0], [68.7, 5157.0], [68.8, 5173.0], [68.9, 5173.0], [69.0, 5175.0], [69.1, 5175.0], [69.2, 5178.0], [69.3, 5178.0], [69.4, 5183.0], [69.5, 5183.0], [69.6, 5205.0], [69.7, 5205.0], [69.8, 5214.0], [69.9, 5214.0], [70.0, 5215.0], [70.1, 5215.0], [70.2, 5224.0], [70.3, 5224.0], [70.4, 5243.0], [70.5, 5243.0], [70.6, 5244.0], [70.7, 5244.0], [70.8, 5249.0], [70.9, 5249.0], [71.0, 5252.0], [71.1, 5252.0], [71.2, 5268.0], [71.3, 5268.0], [71.4, 5271.0], [71.5, 5271.0], [71.6, 5289.0], [71.7, 5289.0], [71.8, 5295.0], [71.9, 5295.0], [72.0, 5303.0], [72.1, 5303.0], [72.2, 5308.0], [72.3, 5308.0], [72.4, 5309.0], [72.5, 5309.0], [72.6, 5330.0], [72.7, 5330.0], [72.8, 5346.0], [72.9, 5346.0], [73.0, 5352.0], [73.1, 5352.0], [73.2, 5362.0], [73.3, 5362.0], [73.4, 5366.0], [73.5, 5366.0], [73.6, 5376.0], [73.7, 5376.0], [73.8, 5380.0], [73.9, 5380.0], [74.0, 5398.0], [74.1, 5398.0], [74.2, 5413.0], [74.3, 5413.0], [74.4, 5434.0], [74.5, 5434.0], [74.6, 5440.0], [74.7, 5440.0], [74.8, 5448.0], [74.9, 5448.0], [75.0, 5451.0], [75.1, 5451.0], [75.2, 5451.0], [75.3, 5460.0], [75.4, 5460.0], [75.5, 5479.0], [75.6, 5479.0], [75.7, 5486.0], [75.8, 5486.0], [75.9, 5486.0], [76.0, 5486.0], [76.1, 5497.0], [76.2, 5497.0], [76.3, 5498.0], [76.4, 5498.0], [76.5, 5500.0], [76.6, 5500.0], [76.7, 5503.0], [76.8, 5503.0], [76.9, 5514.0], [77.0, 5514.0], [77.1, 5554.0], [77.2, 5554.0], [77.3, 5558.0], [77.4, 5558.0], [77.5, 5578.0], [77.6, 5578.0], [77.7, 5580.0], [77.8, 5580.0], [77.9, 5586.0], [78.0, 5586.0], [78.1, 5587.0], [78.2, 5587.0], [78.3, 5654.0], [78.4, 5654.0], [78.5, 5691.0], [78.6, 5691.0], [78.7, 5724.0], [78.8, 5724.0], [78.9, 5725.0], [79.0, 5725.0], [79.1, 5733.0], [79.2, 5733.0], [79.3, 5767.0], [79.4, 5767.0], [79.5, 5797.0], [79.6, 5797.0], [79.7, 5939.0], [79.8, 5939.0], [79.9, 5943.0], [80.0, 5943.0], [80.1, 6681.0], [80.2, 6681.0], [80.3, 6689.0], [80.4, 6689.0], [80.5, 6803.0], [80.6, 6803.0], [80.7, 6851.0], [80.8, 6851.0], [80.9, 6928.0], [81.0, 6928.0], [81.1, 6970.0], [81.2, 6970.0], [81.3, 7032.0], [81.4, 7032.0], [81.5, 7212.0], [81.6, 7212.0], [81.7, 7232.0], [81.8, 7232.0], [81.9, 7237.0], [82.0, 7237.0], [82.1, 7341.0], [82.2, 7341.0], [82.3, 7350.0], [82.4, 7350.0], [82.5, 7354.0], [82.6, 7354.0], [82.7, 7358.0], [82.8, 7358.0], [82.9, 7376.0], [83.0, 7376.0], [83.1, 7423.0], [83.2, 7423.0], [83.3, 7532.0], [83.4, 7567.0], [83.5, 7567.0], [83.6, 7571.0], [83.7, 7571.0], [83.8, 7620.0], [83.9, 7620.0], [84.0, 7635.0], [84.1, 7635.0], [84.2, 7802.0], [84.3, 7802.0], [84.4, 7826.0], [84.5, 7826.0], [84.6, 7835.0], [84.7, 7835.0], [84.8, 7847.0], [84.9, 7847.0], [85.0, 7881.0], [85.1, 7881.0], [85.2, 7980.0], [85.3, 7980.0], [85.4, 8022.0], [85.5, 8022.0], [85.6, 8122.0], [85.7, 8122.0], [85.8, 8128.0], [85.9, 8128.0], [86.0, 8219.0], [86.1, 8219.0], [86.2, 8226.0], [86.3, 8226.0], [86.4, 8262.0], [86.5, 8262.0], [86.6, 8290.0], [86.7, 8290.0], [86.8, 8352.0], [86.9, 8352.0], [87.0, 8463.0], [87.1, 8463.0], [87.2, 8480.0], [87.3, 8480.0], [87.4, 8490.0], [87.5, 8490.0], [87.6, 8541.0], [87.7, 8541.0], [87.8, 8613.0], [87.9, 8613.0], [88.0, 8649.0], [88.1, 8649.0], [88.2, 8732.0], [88.3, 8732.0], [88.4, 8835.0], [88.5, 8835.0], [88.6, 8903.0], [88.7, 8903.0], [88.8, 8906.0], [88.9, 8906.0], [89.0, 8922.0], [89.1, 8922.0], [89.2, 9168.0], [89.3, 9168.0], [89.4, 9182.0], [89.5, 9182.0], [89.6, 9227.0], [89.7, 9227.0], [89.8, 9404.0], [89.9, 9404.0], [90.0, 9430.0], [90.1, 9430.0], [90.2, 9543.0], [90.3, 9543.0], [90.4, 9669.0], [90.5, 9669.0], [90.6, 9689.0], [90.7, 9689.0], [90.8, 9707.0], [90.9, 9707.0], [91.0, 9707.0], [91.1, 9707.0], [91.2, 9978.0], [91.3, 9978.0], [91.4, 10053.0], [91.5, 10053.0], [91.6, 10066.0], [91.7, 10069.0], [91.8, 10069.0], [91.9, 10104.0], [92.0, 10104.0], [92.1, 10117.0], [92.2, 10117.0], [92.3, 10294.0], [92.4, 10294.0], [92.5, 10400.0], [92.6, 10400.0], [92.7, 10426.0], [92.8, 10426.0], [92.9, 10432.0], [93.0, 10432.0], [93.1, 10455.0], [93.2, 10455.0], [93.3, 10555.0], [93.4, 10555.0], [93.5, 10567.0], [93.6, 10567.0], [93.7, 10749.0], [93.8, 10749.0], [93.9, 10783.0], [94.0, 10783.0], [94.1, 10789.0], [94.2, 10789.0], [94.3, 10791.0], [94.4, 10791.0], [94.5, 10835.0], [94.6, 10835.0], [94.7, 10871.0], [94.8, 10871.0], [94.9, 10886.0], [95.0, 10886.0], [95.1, 10908.0], [95.2, 10908.0], [95.3, 10979.0], [95.4, 10979.0], [95.5, 11003.0], [95.6, 11003.0], [95.7, 11021.0], [95.8, 11021.0], [95.9, 11024.0], [96.0, 11024.0], [96.1, 11034.0], [96.2, 11034.0], [96.3, 11052.0], [96.4, 11052.0], [96.5, 11080.0], [96.6, 11080.0], [96.7, 11098.0], [96.8, 11098.0], [96.9, 11146.0], [97.0, 11146.0], [97.1, 11179.0], [97.2, 11179.0], [97.3, 11181.0], [97.4, 11181.0], [97.5, 11190.0], [97.6, 11190.0], [97.7, 11226.0], [97.8, 11226.0], [97.9, 11246.0], [98.0, 11246.0], [98.1, 11270.0], [98.2, 11270.0], [98.3, 11367.0], [98.4, 11367.0], [98.5, 11438.0], [98.6, 11438.0], [98.7, 11537.0], [98.8, 11537.0], [98.9, 11558.0], [99.0, 11558.0], [99.1, 11626.0], [99.2, 11626.0], [99.3, 11634.0], [99.4, 11634.0], [99.5, 11999.0], [99.6, 11999.0], [99.7, 12134.0], [99.8, 12134.0], [99.9, 12140.0], [100.0, 12140.0]], "isOverall": false, "label": "contact Request", "isController": false}, {"data": [[0.0, 393.0], [0.1, 393.0], [0.2, 395.0], [0.3, 395.0], [0.4, 401.0], [0.5, 401.0], [0.6, 402.0], [0.7, 402.0], [0.8, 404.0], [0.9, 404.0], [1.0, 404.0], [1.1, 404.0], [1.2, 406.0], [1.3, 406.0], [1.4, 410.0], [1.5, 410.0], [1.6, 411.0], [1.7, 411.0], [1.8, 412.0], [1.9, 412.0], [2.0, 414.0], [2.1, 414.0], [2.2, 415.0], [2.3, 415.0], [2.4, 416.0], [2.5, 416.0], [2.6, 418.0], [2.7, 418.0], [2.8, 418.0], [2.9, 418.0], [3.0, 419.0], [3.1, 419.0], [3.2, 419.0], [3.3, 419.0], [3.4, 419.0], [3.5, 419.0], [3.6, 420.0], [3.7, 420.0], [3.8, 423.0], [3.9, 423.0], [4.0, 424.0], [4.1, 424.0], [4.2, 424.0], [4.3, 424.0], [4.4, 426.0], [4.5, 426.0], [4.6, 427.0], [4.7, 427.0], [4.8, 427.0], [4.9, 427.0], [5.0, 428.0], [5.1, 428.0], [5.2, 428.0], [5.3, 428.0], [5.4, 428.0], [5.5, 428.0], [5.6, 429.0], [5.7, 429.0], [5.8, 429.0], [5.9, 429.0], [6.0, 429.0], [6.1, 429.0], [6.2, 429.0], [6.3, 429.0], [6.4, 430.0], [6.5, 430.0], [6.6, 430.0], [6.7, 430.0], [6.8, 432.0], [6.9, 432.0], [7.0, 432.0], [7.1, 432.0], [7.2, 432.0], [7.3, 432.0], [7.4, 433.0], [7.5, 433.0], [7.6, 434.0], [7.7, 434.0], [7.8, 436.0], [7.9, 436.0], [8.0, 440.0], [8.1, 440.0], [8.2, 441.0], [8.3, 441.0], [8.4, 444.0], [8.5, 445.0], [8.6, 445.0], [8.7, 447.0], [8.8, 447.0], [8.9, 451.0], [9.0, 451.0], [9.1, 455.0], [9.2, 455.0], [9.3, 457.0], [9.4, 457.0], [9.5, 597.0], [9.6, 597.0], [9.7, 609.0], [9.8, 609.0], [9.9, 629.0], [10.0, 629.0], [10.1, 633.0], [10.2, 633.0], [10.3, 638.0], [10.4, 638.0], [10.5, 642.0], [10.6, 642.0], [10.7, 648.0], [10.8, 648.0], [10.9, 649.0], [11.0, 649.0], [11.1, 652.0], [11.2, 652.0], [11.3, 655.0], [11.4, 655.0], [11.5, 657.0], [11.6, 657.0], [11.7, 661.0], [11.8, 661.0], [11.9, 661.0], [12.0, 661.0], [12.1, 663.0], [12.2, 663.0], [12.3, 680.0], [12.4, 680.0], [12.5, 1284.0], [12.6, 1284.0], [12.7, 1285.0], [12.8, 1285.0], [12.9, 1299.0], [13.0, 1299.0], [13.1, 1334.0], [13.2, 1334.0], [13.3, 1338.0], [13.4, 1338.0], [13.5, 1352.0], [13.6, 1352.0], [13.7, 1354.0], [13.8, 1354.0], [13.9, 1368.0], [14.0, 1368.0], [14.1, 1422.0], [14.2, 1422.0], [14.3, 1438.0], [14.4, 1438.0], [14.5, 1438.0], [14.6, 1438.0], [14.7, 1451.0], [14.8, 1451.0], [14.9, 1475.0], [15.0, 1475.0], [15.1, 1499.0], [15.2, 1499.0], [15.3, 1513.0], [15.4, 1513.0], [15.5, 1539.0], [15.6, 1539.0], [15.7, 1541.0], [15.8, 1541.0], [15.9, 1556.0], [16.0, 1556.0], [16.1, 1565.0], [16.2, 1565.0], [16.3, 1613.0], [16.4, 1613.0], [16.5, 1729.0], [16.6, 1729.0], [16.7, 1780.0], [16.8, 1794.0], [16.9, 1794.0], [17.0, 1825.0], [17.1, 1825.0], [17.2, 1832.0], [17.3, 1832.0], [17.4, 1872.0], [17.5, 1872.0], [17.6, 1880.0], [17.7, 1880.0], [17.8, 1913.0], [17.9, 1913.0], [18.0, 1976.0], [18.1, 1976.0], [18.2, 1979.0], [18.3, 1979.0], [18.4, 2072.0], [18.5, 2072.0], [18.6, 2077.0], [18.7, 2077.0], [18.8, 2110.0], [18.9, 2110.0], [19.0, 2144.0], [19.1, 2144.0], [19.2, 2165.0], [19.3, 2165.0], [19.4, 2203.0], [19.5, 2203.0], [19.6, 2245.0], [19.7, 2245.0], [19.8, 2251.0], [19.9, 2251.0], [20.0, 2309.0], [20.1, 2309.0], [20.2, 2370.0], [20.3, 2370.0], [20.4, 2382.0], [20.5, 2382.0], [20.6, 2423.0], [20.7, 2423.0], [20.8, 2472.0], [20.9, 2472.0], [21.0, 2494.0], [21.1, 2494.0], [21.2, 2559.0], [21.3, 2559.0], [21.4, 2559.0], [21.5, 2559.0], [21.6, 2587.0], [21.7, 2587.0], [21.8, 2608.0], [21.9, 2608.0], [22.0, 2643.0], [22.1, 2643.0], [22.2, 2672.0], [22.3, 2672.0], [22.4, 2782.0], [22.5, 2782.0], [22.6, 2790.0], [22.7, 2790.0], [22.8, 2942.0], [22.9, 2942.0], [23.0, 2983.0], [23.1, 2983.0], [23.2, 2984.0], [23.3, 2984.0], [23.4, 3019.0], [23.5, 3019.0], [23.6, 3076.0], [23.7, 3076.0], [23.8, 3089.0], [23.9, 3089.0], [24.0, 3092.0], [24.1, 3092.0], [24.2, 3155.0], [24.3, 3155.0], [24.4, 3200.0], [24.5, 3200.0], [24.6, 3205.0], [24.7, 3205.0], [24.8, 3233.0], [24.9, 3233.0], [25.0, 3274.0], [25.1, 3354.0], [25.2, 3354.0], [25.3, 3405.0], [25.4, 3405.0], [25.5, 3415.0], [25.6, 3415.0], [25.7, 3433.0], [25.8, 3433.0], [25.9, 3454.0], [26.0, 3454.0], [26.1, 3494.0], [26.2, 3494.0], [26.3, 3569.0], [26.4, 3569.0], [26.5, 3581.0], [26.6, 3581.0], [26.7, 3657.0], [26.8, 3657.0], [26.9, 3736.0], [27.0, 3736.0], [27.1, 3790.0], [27.2, 3790.0], [27.3, 3801.0], [27.4, 3801.0], [27.5, 3833.0], [27.6, 3833.0], [27.7, 3845.0], [27.8, 3845.0], [27.9, 3902.0], [28.0, 3902.0], [28.1, 3963.0], [28.2, 3963.0], [28.3, 3999.0], [28.4, 3999.0], [28.5, 4020.0], [28.6, 4020.0], [28.7, 4065.0], [28.8, 4065.0], [28.9, 4066.0], [29.0, 4066.0], [29.1, 4072.0], [29.2, 4072.0], [29.3, 4164.0], [29.4, 4164.0], [29.5, 4262.0], [29.6, 4262.0], [29.7, 4314.0], [29.8, 4314.0], [29.9, 4328.0], [30.0, 4328.0], [30.1, 4339.0], [30.2, 4339.0], [30.3, 4376.0], [30.4, 4376.0], [30.5, 4384.0], [30.6, 4384.0], [30.7, 4389.0], [30.8, 4389.0], [30.9, 4397.0], [31.0, 4397.0], [31.1, 4427.0], [31.2, 4427.0], [31.3, 4473.0], [31.4, 4473.0], [31.5, 4494.0], [31.6, 4494.0], [31.7, 4520.0], [31.8, 4520.0], [31.9, 4561.0], [32.0, 4561.0], [32.1, 4561.0], [32.2, 4561.0], [32.3, 4589.0], [32.4, 4589.0], [32.5, 4603.0], [32.6, 4603.0], [32.7, 4622.0], [32.8, 4622.0], [32.9, 4635.0], [33.0, 4635.0], [33.1, 4712.0], [33.2, 4712.0], [33.3, 4719.0], [33.4, 4759.0], [33.5, 4759.0], [33.6, 4774.0], [33.7, 4774.0], [33.8, 4779.0], [33.9, 4779.0], [34.0, 4838.0], [34.1, 4838.0], [34.2, 4854.0], [34.3, 4854.0], [34.4, 4863.0], [34.5, 4863.0], [34.6, 4870.0], [34.7, 4870.0], [34.8, 4907.0], [34.9, 4907.0], [35.0, 4936.0], [35.1, 4936.0], [35.2, 4950.0], [35.3, 4950.0], [35.4, 4959.0], [35.5, 4959.0], [35.6, 4966.0], [35.7, 4966.0], [35.8, 4983.0], [35.9, 4983.0], [36.0, 5005.0], [36.1, 5005.0], [36.2, 5017.0], [36.3, 5017.0], [36.4, 5046.0], [36.5, 5046.0], [36.6, 5061.0], [36.7, 5061.0], [36.8, 5079.0], [36.9, 5079.0], [37.0, 5103.0], [37.1, 5103.0], [37.2, 5182.0], [37.3, 5182.0], [37.4, 5187.0], [37.5, 5187.0], [37.6, 5251.0], [37.7, 5251.0], [37.8, 5258.0], [37.9, 5258.0], [38.0, 5264.0], [38.1, 5264.0], [38.2, 5267.0], [38.3, 5267.0], [38.4, 5268.0], [38.5, 5268.0], [38.6, 5343.0], [38.7, 5343.0], [38.8, 5353.0], [38.9, 5353.0], [39.0, 5368.0], [39.1, 5368.0], [39.2, 5424.0], [39.3, 5424.0], [39.4, 5428.0], [39.5, 5428.0], [39.6, 5443.0], [39.7, 5443.0], [39.8, 5490.0], [39.9, 5490.0], [40.0, 5490.0], [40.1, 5490.0], [40.2, 5552.0], [40.3, 5552.0], [40.4, 5574.0], [40.5, 5574.0], [40.6, 5624.0], [40.7, 5624.0], [40.8, 5646.0], [40.9, 5646.0], [41.0, 5668.0], [41.1, 5668.0], [41.2, 5741.0], [41.3, 5741.0], [41.4, 5753.0], [41.5, 5753.0], [41.6, 5759.0], [41.7, 5780.0], [41.8, 5780.0], [41.9, 5790.0], [42.0, 5790.0], [42.1, 5793.0], [42.2, 5793.0], [42.3, 5800.0], [42.4, 5800.0], [42.5, 5801.0], [42.6, 5801.0], [42.7, 5814.0], [42.8, 5814.0], [42.9, 5869.0], [43.0, 5869.0], [43.1, 5924.0], [43.2, 5924.0], [43.3, 5964.0], [43.4, 5964.0], [43.5, 5978.0], [43.6, 5978.0], [43.7, 6064.0], [43.8, 6064.0], [43.9, 6064.0], [44.0, 6064.0], [44.1, 6082.0], [44.2, 6082.0], [44.3, 6090.0], [44.4, 6090.0], [44.5, 6100.0], [44.6, 6100.0], [44.7, 6143.0], [44.8, 6143.0], [44.9, 6153.0], [45.0, 6153.0], [45.1, 6162.0], [45.2, 6162.0], [45.3, 6183.0], [45.4, 6183.0], [45.5, 6209.0], [45.6, 6209.0], [45.7, 6246.0], [45.8, 6246.0], [45.9, 6253.0], [46.0, 6253.0], [46.1, 6274.0], [46.2, 6274.0], [46.3, 6293.0], [46.4, 6293.0], [46.5, 6330.0], [46.6, 6330.0], [46.7, 6381.0], [46.8, 6381.0], [46.9, 6396.0], [47.0, 6396.0], [47.1, 6407.0], [47.2, 6407.0], [47.3, 6449.0], [47.4, 6449.0], [47.5, 6458.0], [47.6, 6458.0], [47.7, 6463.0], [47.8, 6463.0], [47.9, 6496.0], [48.0, 6496.0], [48.1, 6541.0], [48.2, 6541.0], [48.3, 6657.0], [48.4, 6657.0], [48.5, 6696.0], [48.6, 6696.0], [48.7, 6703.0], [48.8, 6703.0], [48.9, 6719.0], [49.0, 6719.0], [49.1, 6748.0], [49.2, 6748.0], [49.3, 6763.0], [49.4, 6763.0], [49.5, 6829.0], [49.6, 6829.0], [49.7, 6847.0], [49.8, 6847.0], [49.9, 6953.0], [50.0, 6962.0], [50.1, 6962.0], [50.2, 6987.0], [50.3, 6987.0], [50.4, 7050.0], [50.5, 7050.0], [50.6, 7092.0], [50.7, 7092.0], [50.8, 7116.0], [50.9, 7116.0], [51.0, 7138.0], [51.1, 7138.0], [51.2, 7141.0], [51.3, 7141.0], [51.4, 7228.0], [51.5, 7228.0], [51.6, 7241.0], [51.7, 7241.0], [51.8, 7298.0], [51.9, 7298.0], [52.0, 7393.0], [52.1, 7393.0], [52.2, 7420.0], [52.3, 7420.0], [52.4, 7432.0], [52.5, 7432.0], [52.6, 7443.0], [52.7, 7443.0], [52.8, 7520.0], [52.9, 7520.0], [53.0, 7558.0], [53.1, 7558.0], [53.2, 7563.0], [53.3, 7563.0], [53.4, 7572.0], [53.5, 7572.0], [53.6, 7622.0], [53.7, 7622.0], [53.8, 7641.0], [53.9, 7641.0], [54.0, 7642.0], [54.1, 7642.0], [54.2, 7649.0], [54.3, 7649.0], [54.4, 7710.0], [54.5, 7710.0], [54.6, 7719.0], [54.7, 7719.0], [54.8, 7775.0], [54.9, 7775.0], [55.0, 7775.0], [55.1, 7775.0], [55.2, 7792.0], [55.3, 7792.0], [55.4, 7802.0], [55.5, 7802.0], [55.6, 7846.0], [55.7, 7846.0], [55.8, 7873.0], [55.9, 7873.0], [56.0, 7906.0], [56.1, 7906.0], [56.2, 7929.0], [56.3, 7929.0], [56.4, 7933.0], [56.5, 7933.0], [56.6, 7939.0], [56.7, 7939.0], [56.8, 7980.0], [56.9, 7980.0], [57.0, 8061.0], [57.1, 8061.0], [57.2, 8066.0], [57.3, 8066.0], [57.4, 8089.0], [57.5, 8089.0], [57.6, 8096.0], [57.7, 8096.0], [57.8, 8165.0], [57.9, 8165.0], [58.0, 8205.0], [58.1, 8205.0], [58.2, 8207.0], [58.3, 8207.0], [58.4, 8265.0], [58.5, 8277.0], [58.6, 8277.0], [58.7, 8289.0], [58.8, 8289.0], [58.9, 8302.0], [59.0, 8302.0], [59.1, 8393.0], [59.2, 8393.0], [59.3, 8421.0], [59.4, 8421.0], [59.5, 8441.0], [59.6, 8441.0], [59.7, 8487.0], [59.8, 8487.0], [59.9, 8493.0], [60.0, 8493.0], [60.1, 8502.0], [60.2, 8502.0], [60.3, 8564.0], [60.4, 8564.0], [60.5, 8631.0], [60.6, 8631.0], [60.7, 8632.0], [60.8, 8632.0], [60.9, 8646.0], [61.0, 8646.0], [61.1, 8679.0], [61.2, 8679.0], [61.3, 8682.0], [61.4, 8682.0], [61.5, 8717.0], [61.6, 8717.0], [61.7, 8808.0], [61.8, 8808.0], [61.9, 8828.0], [62.0, 8828.0], [62.1, 8857.0], [62.2, 8857.0], [62.3, 8874.0], [62.4, 8874.0], [62.5, 8921.0], [62.6, 8921.0], [62.7, 8969.0], [62.8, 8969.0], [62.9, 8984.0], [63.0, 8984.0], [63.1, 9030.0], [63.2, 9030.0], [63.3, 9037.0], [63.4, 9037.0], [63.5, 9122.0], [63.6, 9122.0], [63.7, 9160.0], [63.8, 9160.0], [63.9, 9166.0], [64.0, 9166.0], [64.1, 9214.0], [64.2, 9214.0], [64.3, 9238.0], [64.4, 9238.0], [64.5, 9299.0], [64.6, 9299.0], [64.7, 9328.0], [64.8, 9328.0], [64.9, 9366.0], [65.0, 9366.0], [65.1, 9401.0], [65.2, 9401.0], [65.3, 9406.0], [65.4, 9406.0], [65.5, 9459.0], [65.6, 9459.0], [65.7, 9470.0], [65.8, 9470.0], [65.9, 9517.0], [66.0, 9517.0], [66.1, 9525.0], [66.2, 9525.0], [66.3, 9541.0], [66.4, 9541.0], [66.5, 9546.0], [66.6, 9546.0], [66.7, 9612.0], [66.8, 9614.0], [66.9, 9614.0], [67.0, 9640.0], [67.1, 9640.0], [67.2, 9647.0], [67.3, 9647.0], [67.4, 9730.0], [67.5, 9730.0], [67.6, 9730.0], [67.7, 9730.0], [67.8, 9744.0], [67.9, 9744.0], [68.0, 9782.0], [68.1, 9782.0], [68.2, 9845.0], [68.3, 9845.0], [68.4, 9869.0], [68.5, 9869.0], [68.6, 9872.0], [68.7, 9872.0], [68.8, 9889.0], [68.9, 9889.0], [69.0, 9902.0], [69.1, 9902.0], [69.2, 9932.0], [69.3, 9932.0], [69.4, 9974.0], [69.5, 9974.0], [69.6, 10048.0], [69.7, 10048.0], [69.8, 10069.0], [69.9, 10069.0], [70.0, 10089.0], [70.1, 10089.0], [70.2, 10106.0], [70.3, 10106.0], [70.4, 10120.0], [70.5, 10120.0], [70.6, 10131.0], [70.7, 10131.0], [70.8, 10182.0], [70.9, 10182.0], [71.0, 10193.0], [71.1, 10193.0], [71.2, 10237.0], [71.3, 10237.0], [71.4, 10270.0], [71.5, 10270.0], [71.6, 10270.0], [71.7, 10270.0], [71.8, 10389.0], [71.9, 10389.0], [72.0, 10429.0], [72.1, 10429.0], [72.2, 10438.0], [72.3, 10438.0], [72.4, 10443.0], [72.5, 10443.0], [72.6, 10445.0], [72.7, 10445.0], [72.8, 10477.0], [72.9, 10477.0], [73.0, 10518.0], [73.1, 10518.0], [73.2, 10594.0], [73.3, 10594.0], [73.4, 10606.0], [73.5, 10606.0], [73.6, 10612.0], [73.7, 10612.0], [73.8, 10645.0], [73.9, 10645.0], [74.0, 10655.0], [74.1, 10655.0], [74.2, 10701.0], [74.3, 10701.0], [74.4, 10726.0], [74.5, 10726.0], [74.6, 10744.0], [74.7, 10744.0], [74.8, 10776.0], [74.9, 10776.0], [75.0, 10783.0], [75.1, 10791.0], [75.2, 10791.0], [75.3, 10810.0], [75.4, 10810.0], [75.5, 10836.0], [75.6, 10836.0], [75.7, 10882.0], [75.8, 10882.0], [75.9, 10907.0], [76.0, 10907.0], [76.1, 10911.0], [76.2, 10911.0], [76.3, 10917.0], [76.4, 10917.0], [76.5, 10932.0], [76.6, 10932.0], [76.7, 11000.0], [76.8, 11000.0], [76.9, 11037.0], [77.0, 11037.0], [77.1, 11040.0], [77.2, 11040.0], [77.3, 11063.0], [77.4, 11063.0], [77.5, 11069.0], [77.6, 11069.0], [77.7, 11101.0], [77.8, 11101.0], [77.9, 11114.0], [78.0, 11114.0], [78.1, 11148.0], [78.2, 11148.0], [78.3, 11184.0], [78.4, 11184.0], [78.5, 11197.0], [78.6, 11197.0], [78.7, 11232.0], [78.8, 11232.0], [78.9, 11242.0], [79.0, 11242.0], [79.1, 11255.0], [79.2, 11255.0], [79.3, 11265.0], [79.4, 11265.0], [79.5, 11272.0], [79.6, 11272.0], [79.7, 11278.0], [79.8, 11278.0], [79.9, 11305.0], [80.0, 11305.0], [80.1, 11335.0], [80.2, 11335.0], [80.3, 11339.0], [80.4, 11339.0], [80.5, 11344.0], [80.6, 11344.0], [80.7, 11373.0], [80.8, 11373.0], [80.9, 11373.0], [81.0, 11373.0], [81.1, 11455.0], [81.2, 11455.0], [81.3, 11460.0], [81.4, 11460.0], [81.5, 11462.0], [81.6, 11462.0], [81.7, 11489.0], [81.8, 11489.0], [81.9, 11512.0], [82.0, 11512.0], [82.1, 11532.0], [82.2, 11532.0], [82.3, 11576.0], [82.4, 11576.0], [82.5, 11576.0], [82.6, 11576.0], [82.7, 11592.0], [82.8, 11592.0], [82.9, 11643.0], [83.0, 11643.0], [83.1, 11643.0], [83.2, 11643.0], [83.3, 11643.0], [83.4, 11681.0], [83.5, 11681.0], [83.6, 11689.0], [83.7, 11689.0], [83.8, 11697.0], [83.9, 11697.0], [84.0, 11701.0], [84.1, 11701.0], [84.2, 11702.0], [84.3, 11702.0], [84.4, 11706.0], [84.5, 11706.0], [84.6, 11776.0], [84.7, 11776.0], [84.8, 11791.0], [84.9, 11791.0], [85.0, 11798.0], [85.1, 11798.0], [85.2, 11820.0], [85.3, 11820.0], [85.4, 11833.0], [85.5, 11833.0], [85.6, 11844.0], [85.7, 11844.0], [85.8, 11857.0], [85.9, 11857.0], [86.0, 11859.0], [86.1, 11859.0], [86.2, 11868.0], [86.3, 11868.0], [86.4, 11954.0], [86.5, 11954.0], [86.6, 11964.0], [86.7, 11964.0], [86.8, 11987.0], [86.9, 11987.0], [87.0, 12017.0], [87.1, 12017.0], [87.2, 12047.0], [87.3, 12047.0], [87.4, 12055.0], [87.5, 12055.0], [87.6, 12078.0], [87.7, 12078.0], [87.8, 12102.0], [87.9, 12102.0], [88.0, 12132.0], [88.1, 12132.0], [88.2, 12144.0], [88.3, 12144.0], [88.4, 12181.0], [88.5, 12181.0], [88.6, 12197.0], [88.7, 12197.0], [88.8, 12212.0], [88.9, 12212.0], [89.0, 12226.0], [89.1, 12226.0], [89.2, 12259.0], [89.3, 12259.0], [89.4, 12268.0], [89.5, 12268.0], [89.6, 12279.0], [89.7, 12279.0], [89.8, 12280.0], [89.9, 12280.0], [90.0, 12292.0], [90.1, 12292.0], [90.2, 12294.0], [90.3, 12294.0], [90.4, 12327.0], [90.5, 12327.0], [90.6, 12337.0], [90.7, 12337.0], [90.8, 12372.0], [90.9, 12372.0], [91.0, 12391.0], [91.1, 12391.0], [91.2, 12392.0], [91.3, 12392.0], [91.4, 12406.0], [91.5, 12406.0], [91.6, 12413.0], [91.7, 12414.0], [91.8, 12414.0], [91.9, 12418.0], [92.0, 12418.0], [92.1, 12423.0], [92.2, 12423.0], [92.3, 12450.0], [92.4, 12450.0], [92.5, 12454.0], [92.6, 12454.0], [92.7, 12461.0], [92.8, 12461.0], [92.9, 12462.0], [93.0, 12462.0], [93.1, 12466.0], [93.2, 12466.0], [93.3, 12470.0], [93.4, 12470.0], [93.5, 12472.0], [93.6, 12472.0], [93.7, 12488.0], [93.8, 12488.0], [93.9, 12499.0], [94.0, 12499.0], [94.1, 12504.0], [94.2, 12504.0], [94.3, 12506.0], [94.4, 12506.0], [94.5, 12506.0], [94.6, 12506.0], [94.7, 12510.0], [94.8, 12510.0], [94.9, 12526.0], [95.0, 12526.0], [95.1, 12532.0], [95.2, 12532.0], [95.3, 12542.0], [95.4, 12542.0], [95.5, 12547.0], [95.6, 12547.0], [95.7, 12558.0], [95.8, 12558.0], [95.9, 12560.0], [96.0, 12560.0], [96.1, 12571.0], [96.2, 12571.0], [96.3, 12587.0], [96.4, 12587.0], [96.5, 12588.0], [96.6, 12588.0], [96.7, 12590.0], [96.8, 12590.0], [96.9, 12591.0], [97.0, 12591.0], [97.1, 12593.0], [97.2, 12593.0], [97.3, 12593.0], [97.4, 12593.0], [97.5, 12596.0], [97.6, 12596.0], [97.7, 12608.0], [97.8, 12608.0], [97.9, 12614.0], [98.0, 12614.0], [98.1, 12627.0], [98.2, 12627.0], [98.3, 12629.0], [98.4, 12629.0], [98.5, 12633.0], [98.6, 12633.0], [98.7, 12635.0], [98.8, 12635.0], [98.9, 12636.0], [99.0, 12636.0], [99.1, 12640.0], [99.2, 12640.0], [99.3, 12641.0], [99.4, 12641.0], [99.5, 12653.0], [99.6, 12653.0], [99.7, 12665.0], [99.8, 12665.0], [99.9, 12680.0], [100.0, 12680.0]], "isOverall": false, "label": "home Request", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 1.0], [19.5, 1.0], [19.6, 1.0], [19.7, 1.0], [19.8, 1.0], [19.9, 1.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 1.0], [21.1, 1.0], [21.2, 1.0], [21.3, 1.0], [21.4, 1.0], [21.5, 1.0], [21.6, 1.0], [21.7, 1.0], [21.8, 1.0], [21.9, 1.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 2.0], [23.3, 2.0], [23.4, 10.0], [23.5, 10.0], [23.6, 11.0], [23.7, 11.0], [23.8, 11.0], [23.9, 11.0], [24.0, 14.0], [24.1, 14.0], [24.2, 30.0], [24.3, 30.0], [24.4, 48.0], [24.5, 48.0], [24.6, 97.0], [24.7, 97.0], [24.8, 102.0], [24.9, 102.0], [25.0, 113.0], [25.1, 117.0], [25.2, 117.0], [25.3, 129.0], [25.4, 129.0], [25.5, 145.0], [25.6, 145.0], [25.7, 151.0], [25.8, 151.0], [25.9, 157.0], [26.0, 157.0], [26.1, 157.0], [26.2, 157.0], [26.3, 160.0], [26.4, 160.0], [26.5, 161.0], [26.6, 161.0], [26.7, 167.0], [26.8, 167.0], [26.9, 179.0], [27.0, 179.0], [27.1, 184.0], [27.2, 184.0], [27.3, 192.0], [27.4, 192.0], [27.5, 205.0], [27.6, 205.0], [27.7, 206.0], [27.8, 206.0], [27.9, 213.0], [28.0, 213.0], [28.1, 222.0], [28.2, 222.0], [28.3, 392.0], [28.4, 392.0], [28.5, 393.0], [28.6, 393.0], [28.7, 393.0], [28.8, 393.0], [28.9, 397.0], [29.0, 397.0], [29.1, 403.0], [29.2, 403.0], [29.3, 403.0], [29.4, 403.0], [29.5, 406.0], [29.6, 406.0], [29.7, 406.0], [29.8, 406.0], [29.9, 407.0], [30.0, 407.0], [30.1, 407.0], [30.2, 407.0], [30.3, 409.0], [30.4, 409.0], [30.5, 409.0], [30.6, 409.0], [30.7, 411.0], [30.8, 411.0], [30.9, 414.0], [31.0, 414.0], [31.1, 414.0], [31.2, 414.0], [31.3, 416.0], [31.4, 416.0], [31.5, 417.0], [31.6, 417.0], [31.7, 417.0], [31.8, 417.0], [31.9, 418.0], [32.0, 418.0], [32.1, 418.0], [32.2, 418.0], [32.3, 421.0], [32.4, 421.0], [32.5, 421.0], [32.6, 421.0], [32.7, 422.0], [32.8, 422.0], [32.9, 422.0], [33.0, 422.0], [33.1, 424.0], [33.2, 424.0], [33.3, 424.0], [33.4, 424.0], [33.5, 424.0], [33.6, 424.0], [33.7, 424.0], [33.8, 425.0], [33.9, 425.0], [34.0, 425.0], [34.1, 425.0], [34.2, 426.0], [34.3, 426.0], [34.4, 427.0], [34.5, 427.0], [34.6, 427.0], [34.7, 427.0], [34.8, 429.0], [34.9, 429.0], [35.0, 429.0], [35.1, 429.0], [35.2, 430.0], [35.3, 430.0], [35.4, 432.0], [35.5, 432.0], [35.6, 433.0], [35.7, 433.0], [35.8, 435.0], [35.9, 435.0], [36.0, 438.0], [36.1, 438.0], [36.2, 439.0], [36.3, 439.0], [36.4, 440.0], [36.5, 440.0], [36.6, 440.0], [36.7, 440.0], [36.8, 442.0], [36.9, 442.0], [37.0, 447.0], [37.1, 447.0], [37.2, 451.0], [37.3, 451.0], [37.4, 598.0], [37.5, 598.0], [37.6, 600.0], [37.7, 600.0], [37.8, 607.0], [37.9, 607.0], [38.0, 615.0], [38.1, 615.0], [38.2, 643.0], [38.3, 643.0], [38.4, 645.0], [38.5, 645.0], [38.6, 654.0], [38.7, 654.0], [38.8, 665.0], [38.9, 665.0], [39.0, 668.0], [39.1, 668.0], [39.2, 1538.0], [39.3, 1538.0], [39.4, 1814.0], [39.5, 1814.0], [39.6, 1879.0], [39.7, 1879.0], [39.8, 2021.0], [39.9, 2021.0], [40.0, 2089.0], [40.1, 2089.0], [40.2, 2136.0], [40.3, 2136.0], [40.4, 2141.0], [40.5, 2141.0], [40.6, 2317.0], [40.7, 2317.0], [40.8, 2351.0], [40.9, 2351.0], [41.0, 2451.0], [41.1, 2451.0], [41.2, 2519.0], [41.3, 2519.0], [41.4, 2582.0], [41.5, 2582.0], [41.6, 2665.0], [41.7, 2781.0], [41.8, 2781.0], [41.9, 2846.0], [42.0, 2846.0], [42.1, 2860.0], [42.2, 2860.0], [42.3, 2912.0], [42.4, 2912.0], [42.5, 2946.0], [42.6, 2946.0], [42.7, 3033.0], [42.8, 3033.0], [42.9, 3200.0], [43.0, 3200.0], [43.1, 3481.0], [43.2, 3481.0], [43.3, 3496.0], [43.4, 3496.0], [43.5, 3497.0], [43.6, 3497.0], [43.7, 3662.0], [43.8, 3662.0], [43.9, 3749.0], [44.0, 3749.0], [44.1, 3786.0], [44.2, 3786.0], [44.3, 3837.0], [44.4, 3837.0], [44.5, 3885.0], [44.6, 3885.0], [44.7, 3885.0], [44.8, 3885.0], [44.9, 4077.0], [45.0, 4077.0], [45.1, 4150.0], [45.2, 4150.0], [45.3, 4157.0], [45.4, 4157.0], [45.5, 4186.0], [45.6, 4186.0], [45.7, 4250.0], [45.8, 4250.0], [45.9, 4346.0], [46.0, 4346.0], [46.1, 4410.0], [46.2, 4410.0], [46.3, 4511.0], [46.4, 4511.0], [46.5, 4527.0], [46.6, 4527.0], [46.7, 4691.0], [46.8, 4691.0], [46.9, 4783.0], [47.0, 4783.0], [47.1, 4816.0], [47.2, 4816.0], [47.3, 4896.0], [47.4, 4896.0], [47.5, 5033.0], [47.6, 5033.0], [47.7, 5074.0], [47.8, 5074.0], [47.9, 5074.0], [48.0, 5074.0], [48.1, 5113.0], [48.2, 5113.0], [48.3, 5134.0], [48.4, 5134.0], [48.5, 5146.0], [48.6, 5146.0], [48.7, 5166.0], [48.8, 5166.0], [48.9, 5387.0], [49.0, 5387.0], [49.1, 5510.0], [49.2, 5510.0], [49.3, 5532.0], [49.4, 5532.0], [49.5, 5678.0], [49.6, 5678.0], [49.7, 5678.0], [49.8, 5678.0], [49.9, 5680.0], [50.0, 5681.0], [50.1, 5681.0], [50.2, 5698.0], [50.3, 5698.0], [50.4, 5706.0], [50.5, 5706.0], [50.6, 5735.0], [50.7, 5735.0], [50.8, 5741.0], [50.9, 5741.0], [51.0, 5763.0], [51.1, 5763.0], [51.2, 5771.0], [51.3, 5771.0], [51.4, 5818.0], [51.5, 5818.0], [51.6, 5821.0], [51.7, 5821.0], [51.8, 5826.0], [51.9, 5826.0], [52.0, 5827.0], [52.1, 5827.0], [52.2, 5855.0], [52.3, 5855.0], [52.4, 5874.0], [52.5, 5874.0], [52.6, 5876.0], [52.7, 5876.0], [52.8, 5894.0], [52.9, 5894.0], [53.0, 5936.0], [53.1, 5936.0], [53.2, 5938.0], [53.3, 5938.0], [53.4, 5948.0], [53.5, 5948.0], [53.6, 5986.0], [53.7, 5986.0], [53.8, 5987.0], [53.9, 5987.0], [54.0, 6001.0], [54.1, 6001.0], [54.2, 6014.0], [54.3, 6014.0], [54.4, 6020.0], [54.5, 6020.0], [54.6, 6022.0], [54.7, 6022.0], [54.8, 6034.0], [54.9, 6034.0], [55.0, 6053.0], [55.1, 6053.0], [55.2, 6061.0], [55.3, 6061.0], [55.4, 6080.0], [55.5, 6080.0], [55.6, 6088.0], [55.7, 6088.0], [55.8, 6101.0], [55.9, 6101.0], [56.0, 6103.0], [56.1, 6103.0], [56.2, 6106.0], [56.3, 6106.0], [56.4, 6141.0], [56.5, 6141.0], [56.6, 6146.0], [56.7, 6146.0], [56.8, 6159.0], [56.9, 6159.0], [57.0, 6173.0], [57.1, 6173.0], [57.2, 6189.0], [57.3, 6189.0], [57.4, 6190.0], [57.5, 6190.0], [57.6, 6240.0], [57.7, 6240.0], [57.8, 6247.0], [57.9, 6247.0], [58.0, 6250.0], [58.1, 6250.0], [58.2, 6251.0], [58.3, 6251.0], [58.4, 6257.0], [58.5, 6265.0], [58.6, 6265.0], [58.7, 6284.0], [58.8, 6284.0], [58.9, 6308.0], [59.0, 6308.0], [59.1, 6313.0], [59.2, 6313.0], [59.3, 6315.0], [59.4, 6315.0], [59.5, 6322.0], [59.6, 6322.0], [59.7, 6329.0], [59.8, 6329.0], [59.9, 6334.0], [60.0, 6334.0], [60.1, 6366.0], [60.2, 6366.0], [60.3, 6436.0], [60.4, 6436.0], [60.5, 6454.0], [60.6, 6454.0], [60.7, 6459.0], [60.8, 6459.0], [60.9, 6505.0], [61.0, 6505.0], [61.1, 6529.0], [61.2, 6529.0], [61.3, 6532.0], [61.4, 6532.0], [61.5, 6533.0], [61.6, 6533.0], [61.7, 6587.0], [61.8, 6587.0], [61.9, 6595.0], [62.0, 6595.0], [62.1, 6655.0], [62.2, 6655.0], [62.3, 6678.0], [62.4, 6678.0], [62.5, 6692.0], [62.6, 6692.0], [62.7, 6716.0], [62.8, 6716.0], [62.9, 6732.0], [63.0, 6732.0], [63.1, 6742.0], [63.2, 6742.0], [63.3, 6774.0], [63.4, 6774.0], [63.5, 6787.0], [63.6, 6787.0], [63.7, 6792.0], [63.8, 6792.0], [63.9, 6798.0], [64.0, 6798.0], [64.1, 6809.0], [64.2, 6809.0], [64.3, 6839.0], [64.4, 6839.0], [64.5, 6860.0], [64.6, 6860.0], [64.7, 6869.0], [64.8, 6869.0], [64.9, 6899.0], [65.0, 6899.0], [65.1, 6908.0], [65.2, 6908.0], [65.3, 6934.0], [65.4, 6934.0], [65.5, 6942.0], [65.6, 6942.0], [65.7, 6955.0], [65.8, 6955.0], [65.9, 6974.0], [66.0, 6974.0], [66.1, 7015.0], [66.2, 7015.0], [66.3, 7032.0], [66.4, 7032.0], [66.5, 7034.0], [66.6, 7034.0], [66.7, 7036.0], [66.8, 7043.0], [66.9, 7043.0], [67.0, 7054.0], [67.1, 7054.0], [67.2, 7101.0], [67.3, 7101.0], [67.4, 7103.0], [67.5, 7103.0], [67.6, 7104.0], [67.7, 7104.0], [67.8, 7124.0], [67.9, 7124.0], [68.0, 7142.0], [68.1, 7142.0], [68.2, 7144.0], [68.3, 7144.0], [68.4, 7147.0], [68.5, 7147.0], [68.6, 7149.0], [68.7, 7149.0], [68.8, 7165.0], [68.9, 7165.0], [69.0, 7171.0], [69.1, 7171.0], [69.2, 7175.0], [69.3, 7175.0], [69.4, 7185.0], [69.5, 7185.0], [69.6, 7200.0], [69.7, 7200.0], [69.8, 7211.0], [69.9, 7211.0], [70.0, 7226.0], [70.1, 7226.0], [70.2, 7234.0], [70.3, 7234.0], [70.4, 7238.0], [70.5, 7238.0], [70.6, 7281.0], [70.7, 7281.0], [70.8, 7293.0], [70.9, 7293.0], [71.0, 7319.0], [71.1, 7319.0], [71.2, 7342.0], [71.3, 7342.0], [71.4, 7365.0], [71.5, 7365.0], [71.6, 7375.0], [71.7, 7375.0], [71.8, 7376.0], [71.9, 7376.0], [72.0, 7390.0], [72.1, 7390.0], [72.2, 7402.0], [72.3, 7402.0], [72.4, 7421.0], [72.5, 7421.0], [72.6, 7425.0], [72.7, 7425.0], [72.8, 7429.0], [72.9, 7429.0], [73.0, 7429.0], [73.1, 7429.0], [73.2, 7432.0], [73.3, 7432.0], [73.4, 7434.0], [73.5, 7434.0], [73.6, 7436.0], [73.7, 7436.0], [73.8, 7440.0], [73.9, 7440.0], [74.0, 7448.0], [74.1, 7448.0], [74.2, 7456.0], [74.3, 7456.0], [74.4, 7486.0], [74.5, 7486.0], [74.6, 7502.0], [74.7, 7502.0], [74.8, 7536.0], [74.9, 7536.0], [75.0, 7552.0], [75.1, 7555.0], [75.2, 7555.0], [75.3, 7555.0], [75.4, 7555.0], [75.5, 7556.0], [75.6, 7556.0], [75.7, 7566.0], [75.8, 7566.0], [75.9, 7568.0], [76.0, 7568.0], [76.1, 7573.0], [76.2, 7573.0], [76.3, 7590.0], [76.4, 7590.0], [76.5, 7623.0], [76.6, 7623.0], [76.7, 7624.0], [76.8, 7624.0], [76.9, 7641.0], [77.0, 7641.0], [77.1, 7645.0], [77.2, 7645.0], [77.3, 7678.0], [77.4, 7678.0], [77.5, 7687.0], [77.6, 7687.0], [77.7, 7697.0], [77.8, 7697.0], [77.9, 7704.0], [78.0, 7704.0], [78.1, 7723.0], [78.2, 7723.0], [78.3, 7750.0], [78.4, 7750.0], [78.5, 7761.0], [78.6, 7761.0], [78.7, 7764.0], [78.8, 7764.0], [78.9, 7778.0], [79.0, 7778.0], [79.1, 7784.0], [79.2, 7784.0], [79.3, 7787.0], [79.4, 7787.0], [79.5, 7789.0], [79.6, 7789.0], [79.7, 7812.0], [79.8, 7812.0], [79.9, 7821.0], [80.0, 7821.0], [80.1, 7828.0], [80.2, 7828.0], [80.3, 7886.0], [80.4, 7886.0], [80.5, 7898.0], [80.6, 7898.0], [80.7, 7901.0], [80.8, 7901.0], [80.9, 7942.0], [81.0, 7942.0], [81.1, 7949.0], [81.2, 7949.0], [81.3, 7960.0], [81.4, 7960.0], [81.5, 8000.0], [81.6, 8000.0], [81.7, 8028.0], [81.8, 8028.0], [81.9, 8032.0], [82.0, 8032.0], [82.1, 8042.0], [82.2, 8042.0], [82.3, 8066.0], [82.4, 8066.0], [82.5, 8096.0], [82.6, 8096.0], [82.7, 8196.0], [82.8, 8196.0], [82.9, 8222.0], [83.0, 8222.0], [83.1, 8238.0], [83.2, 8238.0], [83.3, 8261.0], [83.4, 8267.0], [83.5, 8267.0], [83.6, 8274.0], [83.7, 8274.0], [83.8, 8284.0], [83.9, 8284.0], [84.0, 8301.0], [84.1, 8301.0], [84.2, 8303.0], [84.3, 8303.0], [84.4, 8314.0], [84.5, 8314.0], [84.6, 8355.0], [84.7, 8355.0], [84.8, 8391.0], [84.9, 8391.0], [85.0, 8393.0], [85.1, 8393.0], [85.2, 8462.0], [85.3, 8462.0], [85.4, 8481.0], [85.5, 8481.0], [85.6, 8494.0], [85.7, 8494.0], [85.8, 8495.0], [85.9, 8495.0], [86.0, 8508.0], [86.1, 8508.0], [86.2, 8518.0], [86.3, 8518.0], [86.4, 8523.0], [86.5, 8523.0], [86.6, 8556.0], [86.7, 8556.0], [86.8, 8565.0], [86.9, 8565.0], [87.0, 8580.0], [87.1, 8580.0], [87.2, 8609.0], [87.3, 8609.0], [87.4, 8614.0], [87.5, 8614.0], [87.6, 8635.0], [87.7, 8635.0], [87.8, 8896.0], [87.9, 8896.0], [88.0, 9120.0], [88.1, 9120.0], [88.2, 9187.0], [88.3, 9187.0], [88.4, 9198.0], [88.5, 9198.0], [88.6, 9231.0], [88.7, 9231.0], [88.8, 9236.0], [88.9, 9236.0], [89.0, 9241.0], [89.1, 9241.0], [89.2, 9307.0], [89.3, 9307.0], [89.4, 9317.0], [89.5, 9317.0], [89.6, 9352.0], [89.7, 9352.0], [89.8, 9547.0], [89.9, 9547.0], [90.0, 9553.0], [90.1, 9553.0], [90.2, 9559.0], [90.3, 9559.0], [90.4, 9893.0], [90.5, 9893.0], [90.6, 9915.0], [90.7, 9915.0], [90.8, 9916.0], [90.9, 9916.0], [91.0, 9930.0], [91.1, 9930.0], [91.2, 10003.0], [91.3, 10003.0], [91.4, 10036.0], [91.5, 10036.0], [91.6, 10100.0], [91.7, 10178.0], [91.8, 10178.0], [91.9, 10257.0], [92.0, 10257.0], [92.1, 10265.0], [92.2, 10265.0], [92.3, 10292.0], [92.4, 10292.0], [92.5, 10363.0], [92.6, 10363.0], [92.7, 10435.0], [92.8, 10435.0], [92.9, 10496.0], [93.0, 10496.0], [93.1, 10525.0], [93.2, 10525.0], [93.3, 10615.0], [93.4, 10615.0], [93.5, 10657.0], [93.6, 10657.0], [93.7, 10661.0], [93.8, 10661.0], [93.9, 10662.0], [94.0, 10662.0], [94.1, 10665.0], [94.2, 10665.0], [94.3, 10704.0], [94.4, 10704.0], [94.5, 10728.0], [94.6, 10728.0], [94.7, 10749.0], [94.8, 10749.0], [94.9, 10771.0], [95.0, 10771.0], [95.1, 10806.0], [95.2, 10806.0], [95.3, 10858.0], [95.4, 10858.0], [95.5, 10896.0], [95.6, 10896.0], [95.7, 11008.0], [95.8, 11008.0], [95.9, 11045.0], [96.0, 11045.0], [96.1, 11149.0], [96.2, 11149.0], [96.3, 11153.0], [96.4, 11153.0], [96.5, 11155.0], [96.6, 11155.0], [96.7, 11175.0], [96.8, 11175.0], [96.9, 11205.0], [97.0, 11205.0], [97.1, 11309.0], [97.2, 11309.0], [97.3, 11338.0], [97.4, 11338.0], [97.5, 11339.0], [97.6, 11339.0], [97.7, 11399.0], [97.8, 11399.0], [97.9, 11486.0], [98.0, 11486.0], [98.1, 11502.0], [98.2, 11502.0], [98.3, 11568.0], [98.4, 11568.0], [98.5, 11577.0], [98.6, 11577.0], [98.7, 11615.0], [98.8, 11615.0], [98.9, 11676.0], [99.0, 11676.0], [99.1, 11705.0], [99.2, 11705.0], [99.3, 11809.0], [99.4, 11809.0], [99.5, 11874.0], [99.6, 11874.0], [99.7, 11981.0], [99.8, 11981.0], [99.9, 12066.0], [100.0, 12066.0]], "isOverall": false, "label": "about Request", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 26.0], [9.4, 26.0], [9.5, 38.0], [9.6, 38.0], [9.7, 45.0], [9.8, 45.0], [9.9, 47.0], [10.0, 47.0], [10.1, 55.0], [10.2, 55.0], [10.3, 81.0], [10.4, 81.0], [10.5, 93.0], [10.6, 93.0], [10.7, 94.0], [10.8, 94.0], [10.9, 99.0], [11.0, 99.0], [11.1, 108.0], [11.2, 108.0], [11.3, 108.0], [11.4, 108.0], [11.5, 108.0], [11.6, 108.0], [11.7, 121.0], [11.8, 121.0], [11.9, 122.0], [12.0, 122.0], [12.1, 123.0], [12.2, 123.0], [12.3, 156.0], [12.4, 156.0], [12.5, 170.0], [12.6, 170.0], [12.7, 180.0], [12.8, 180.0], [12.9, 185.0], [13.0, 185.0], [13.1, 192.0], [13.2, 192.0], [13.3, 196.0], [13.4, 196.0], [13.5, 203.0], [13.6, 203.0], [13.7, 216.0], [13.8, 216.0], [13.9, 217.0], [14.0, 217.0], [14.1, 386.0], [14.2, 386.0], [14.3, 392.0], [14.4, 392.0], [14.5, 393.0], [14.6, 393.0], [14.7, 396.0], [14.8, 396.0], [14.9, 397.0], [15.0, 397.0], [15.1, 398.0], [15.2, 398.0], [15.3, 398.0], [15.4, 398.0], [15.5, 399.0], [15.6, 399.0], [15.7, 402.0], [15.8, 402.0], [15.9, 403.0], [16.0, 403.0], [16.1, 405.0], [16.2, 405.0], [16.3, 407.0], [16.4, 407.0], [16.5, 408.0], [16.6, 408.0], [16.7, 412.0], [16.8, 413.0], [16.9, 413.0], [17.0, 415.0], [17.1, 415.0], [17.2, 416.0], [17.3, 416.0], [17.4, 417.0], [17.5, 417.0], [17.6, 417.0], [17.7, 417.0], [17.8, 418.0], [17.9, 418.0], [18.0, 418.0], [18.1, 418.0], [18.2, 418.0], [18.3, 418.0], [18.4, 419.0], [18.5, 419.0], [18.6, 419.0], [18.7, 419.0], [18.8, 419.0], [18.9, 419.0], [19.0, 420.0], [19.1, 420.0], [19.2, 420.0], [19.3, 420.0], [19.4, 420.0], [19.5, 420.0], [19.6, 420.0], [19.7, 420.0], [19.8, 420.0], [19.9, 420.0], [20.0, 421.0], [20.1, 421.0], [20.2, 422.0], [20.3, 422.0], [20.4, 423.0], [20.5, 423.0], [20.6, 424.0], [20.7, 424.0], [20.8, 424.0], [20.9, 424.0], [21.0, 424.0], [21.1, 424.0], [21.2, 425.0], [21.3, 425.0], [21.4, 425.0], [21.5, 425.0], [21.6, 425.0], [21.7, 425.0], [21.8, 426.0], [21.9, 426.0], [22.0, 426.0], [22.1, 426.0], [22.2, 426.0], [22.3, 426.0], [22.4, 427.0], [22.5, 427.0], [22.6, 427.0], [22.7, 427.0], [22.8, 428.0], [22.9, 428.0], [23.0, 429.0], [23.1, 429.0], [23.2, 429.0], [23.3, 429.0], [23.4, 429.0], [23.5, 429.0], [23.6, 431.0], [23.7, 431.0], [23.8, 431.0], [23.9, 431.0], [24.0, 431.0], [24.1, 431.0], [24.2, 433.0], [24.3, 433.0], [24.4, 434.0], [24.5, 434.0], [24.6, 435.0], [24.7, 435.0], [24.8, 436.0], [24.9, 436.0], [25.0, 437.0], [25.1, 437.0], [25.2, 437.0], [25.3, 437.0], [25.4, 437.0], [25.5, 438.0], [25.6, 438.0], [25.7, 438.0], [25.8, 438.0], [25.9, 438.0], [26.0, 438.0], [26.1, 441.0], [26.2, 441.0], [26.3, 442.0], [26.4, 442.0], [26.5, 443.0], [26.6, 443.0], [26.7, 444.0], [26.8, 444.0], [26.9, 446.0], [27.0, 446.0], [27.1, 447.0], [27.2, 447.0], [27.3, 447.0], [27.4, 447.0], [27.5, 448.0], [27.6, 448.0], [27.7, 453.0], [27.8, 453.0], [27.9, 453.0], [28.0, 453.0], [28.1, 454.0], [28.2, 454.0], [28.3, 597.0], [28.4, 597.0], [28.5, 602.0], [28.6, 602.0], [28.7, 605.0], [28.8, 605.0], [28.9, 617.0], [29.0, 617.0], [29.1, 623.0], [29.2, 623.0], [29.3, 624.0], [29.4, 624.0], [29.5, 630.0], [29.6, 630.0], [29.7, 632.0], [29.8, 632.0], [29.9, 633.0], [30.0, 633.0], [30.1, 636.0], [30.2, 636.0], [30.3, 641.0], [30.4, 641.0], [30.5, 641.0], [30.6, 641.0], [30.7, 641.0], [30.8, 641.0], [30.9, 642.0], [31.0, 642.0], [31.1, 643.0], [31.2, 643.0], [31.3, 645.0], [31.4, 645.0], [31.5, 646.0], [31.6, 646.0], [31.7, 652.0], [31.8, 652.0], [31.9, 654.0], [32.0, 654.0], [32.1, 656.0], [32.2, 656.0], [32.3, 658.0], [32.4, 658.0], [32.5, 659.0], [32.6, 659.0], [32.7, 661.0], [32.8, 661.0], [32.9, 2968.0], [33.0, 2968.0], [33.1, 3065.0], [33.2, 3065.0], [33.3, 3082.0], [33.4, 3087.0], [33.5, 3087.0], [33.6, 3103.0], [33.7, 3103.0], [33.8, 3106.0], [33.9, 3106.0], [34.0, 3111.0], [34.1, 3111.0], [34.2, 3122.0], [34.3, 3122.0], [34.4, 3134.0], [34.5, 3134.0], [34.6, 3163.0], [34.7, 3163.0], [34.8, 3166.0], [34.9, 3166.0], [35.0, 3170.0], [35.1, 3170.0], [35.2, 3186.0], [35.3, 3186.0], [35.4, 3189.0], [35.5, 3189.0], [35.6, 3189.0], [35.7, 3189.0], [35.8, 3197.0], [35.9, 3197.0], [36.0, 3207.0], [36.1, 3207.0], [36.2, 3207.0], [36.3, 3207.0], [36.4, 3220.0], [36.5, 3220.0], [36.6, 3223.0], [36.7, 3223.0], [36.8, 3237.0], [36.9, 3237.0], [37.0, 3253.0], [37.1, 3253.0], [37.2, 3256.0], [37.3, 3256.0], [37.4, 3273.0], [37.5, 3273.0], [37.6, 3275.0], [37.7, 3275.0], [37.8, 3285.0], [37.9, 3285.0], [38.0, 3288.0], [38.1, 3288.0], [38.2, 3291.0], [38.3, 3291.0], [38.4, 3296.0], [38.5, 3296.0], [38.6, 3297.0], [38.7, 3297.0], [38.8, 3299.0], [38.9, 3299.0], [39.0, 3305.0], [39.1, 3305.0], [39.2, 3319.0], [39.3, 3319.0], [39.4, 3328.0], [39.5, 3328.0], [39.6, 3329.0], [39.7, 3329.0], [39.8, 3337.0], [39.9, 3337.0], [40.0, 3338.0], [40.1, 3338.0], [40.2, 3342.0], [40.3, 3342.0], [40.4, 3345.0], [40.5, 3345.0], [40.6, 3351.0], [40.7, 3351.0], [40.8, 3371.0], [40.9, 3371.0], [41.0, 3377.0], [41.1, 3377.0], [41.2, 3378.0], [41.3, 3378.0], [41.4, 3384.0], [41.5, 3384.0], [41.6, 3385.0], [41.7, 3387.0], [41.8, 3387.0], [41.9, 3391.0], [42.0, 3391.0], [42.1, 3401.0], [42.2, 3401.0], [42.3, 3405.0], [42.4, 3405.0], [42.5, 3406.0], [42.6, 3406.0], [42.7, 3406.0], [42.8, 3406.0], [42.9, 3413.0], [43.0, 3413.0], [43.1, 3423.0], [43.2, 3423.0], [43.3, 3424.0], [43.4, 3424.0], [43.5, 3425.0], [43.6, 3425.0], [43.7, 3425.0], [43.8, 3425.0], [43.9, 3437.0], [44.0, 3437.0], [44.1, 3442.0], [44.2, 3442.0], [44.3, 3448.0], [44.4, 3448.0], [44.5, 3452.0], [44.6, 3452.0], [44.7, 3453.0], [44.8, 3453.0], [44.9, 3455.0], [45.0, 3455.0], [45.1, 3469.0], [45.2, 3469.0], [45.3, 3480.0], [45.4, 3480.0], [45.5, 3495.0], [45.6, 3495.0], [45.7, 3501.0], [45.8, 3501.0], [45.9, 3503.0], [46.0, 3503.0], [46.1, 3505.0], [46.2, 3505.0], [46.3, 3508.0], [46.4, 3508.0], [46.5, 3516.0], [46.6, 3516.0], [46.7, 3517.0], [46.8, 3517.0], [46.9, 3527.0], [47.0, 3527.0], [47.1, 3529.0], [47.2, 3529.0], [47.3, 3531.0], [47.4, 3531.0], [47.5, 3532.0], [47.6, 3532.0], [47.7, 3534.0], [47.8, 3534.0], [47.9, 3535.0], [48.0, 3535.0], [48.1, 3547.0], [48.2, 3547.0], [48.3, 3559.0], [48.4, 3559.0], [48.5, 3565.0], [48.6, 3565.0], [48.7, 3566.0], [48.8, 3566.0], [48.9, 3572.0], [49.0, 3572.0], [49.1, 3573.0], [49.2, 3573.0], [49.3, 3574.0], [49.4, 3574.0], [49.5, 3583.0], [49.6, 3583.0], [49.7, 3586.0], [49.8, 3586.0], [49.9, 3591.0], [50.0, 3594.0], [50.1, 3594.0], [50.2, 3597.0], [50.3, 3597.0], [50.4, 3598.0], [50.5, 3598.0], [50.6, 3602.0], [50.7, 3602.0], [50.8, 3604.0], [50.9, 3604.0], [51.0, 3609.0], [51.1, 3609.0], [51.2, 3614.0], [51.3, 3614.0], [51.4, 3614.0], [51.5, 3614.0], [51.6, 3635.0], [51.7, 3635.0], [51.8, 3657.0], [51.9, 3657.0], [52.0, 3676.0], [52.1, 3676.0], [52.2, 3678.0], [52.3, 3678.0], [52.4, 3690.0], [52.5, 3690.0], [52.6, 3705.0], [52.7, 3705.0], [52.8, 3727.0], [52.9, 3727.0], [53.0, 3751.0], [53.1, 3751.0], [53.2, 3754.0], [53.3, 3754.0], [53.4, 3765.0], [53.5, 3765.0], [53.6, 3785.0], [53.7, 3785.0], [53.8, 3793.0], [53.9, 3793.0], [54.0, 3798.0], [54.1, 3798.0], [54.2, 3821.0], [54.3, 3821.0], [54.4, 3823.0], [54.5, 3823.0], [54.6, 3839.0], [54.7, 3839.0], [54.8, 3851.0], [54.9, 3851.0], [55.0, 3854.0], [55.1, 3854.0], [55.2, 3870.0], [55.3, 3870.0], [55.4, 3904.0], [55.5, 3904.0], [55.6, 3913.0], [55.7, 3913.0], [55.8, 3919.0], [55.9, 3919.0], [56.0, 3953.0], [56.1, 3953.0], [56.2, 3969.0], [56.3, 3969.0], [56.4, 3971.0], [56.5, 3971.0], [56.6, 3974.0], [56.7, 3974.0], [56.8, 3996.0], [56.9, 3996.0], [57.0, 4017.0], [57.1, 4017.0], [57.2, 4023.0], [57.3, 4023.0], [57.4, 4037.0], [57.5, 4037.0], [57.6, 4053.0], [57.7, 4053.0], [57.8, 4085.0], [57.9, 4085.0], [58.0, 4092.0], [58.1, 4092.0], [58.2, 4113.0], [58.3, 4113.0], [58.4, 4118.0], [58.5, 4139.0], [58.6, 4139.0], [58.7, 4147.0], [58.8, 4147.0], [58.9, 4149.0], [59.0, 4149.0], [59.1, 4198.0], [59.2, 4198.0], [59.3, 4219.0], [59.4, 4219.0], [59.5, 4224.0], [59.6, 4224.0], [59.7, 4239.0], [59.8, 4239.0], [59.9, 4252.0], [60.0, 4252.0], [60.1, 4266.0], [60.2, 4266.0], [60.3, 4274.0], [60.4, 4274.0], [60.5, 4301.0], [60.6, 4301.0], [60.7, 4327.0], [60.8, 4327.0], [60.9, 4373.0], [61.0, 4373.0], [61.1, 4375.0], [61.2, 4375.0], [61.3, 4378.0], [61.4, 4378.0], [61.5, 4379.0], [61.6, 4379.0], [61.7, 4404.0], [61.8, 4404.0], [61.9, 4432.0], [62.0, 4432.0], [62.1, 4434.0], [62.2, 4434.0], [62.3, 4468.0], [62.4, 4468.0], [62.5, 4472.0], [62.6, 4472.0], [62.7, 4475.0], [62.8, 4475.0], [62.9, 4494.0], [63.0, 4494.0], [63.1, 4504.0], [63.2, 4504.0], [63.3, 4529.0], [63.4, 4529.0], [63.5, 4546.0], [63.6, 4546.0], [63.7, 4552.0], [63.8, 4552.0], [63.9, 4560.0], [64.0, 4560.0], [64.1, 4586.0], [64.2, 4586.0], [64.3, 4596.0], [64.4, 4596.0], [64.5, 4638.0], [64.6, 4638.0], [64.7, 4647.0], [64.8, 4647.0], [64.9, 4663.0], [65.0, 4663.0], [65.1, 4708.0], [65.2, 4708.0], [65.3, 4899.0], [65.4, 4899.0], [65.5, 4901.0], [65.6, 4901.0], [65.7, 4931.0], [65.8, 4931.0], [65.9, 4993.0], [66.0, 4993.0], [66.1, 5397.0], [66.2, 5397.0], [66.3, 5444.0], [66.4, 5444.0], [66.5, 5451.0], [66.6, 5451.0], [66.7, 5457.0], [66.8, 5478.0], [66.9, 5478.0], [67.0, 5499.0], [67.1, 5499.0], [67.2, 5502.0], [67.3, 5502.0], [67.4, 5518.0], [67.5, 5518.0], [67.6, 5541.0], [67.7, 5541.0], [67.8, 5570.0], [67.9, 5570.0], [68.0, 5712.0], [68.1, 5712.0], [68.2, 5897.0], [68.3, 5897.0], [68.4, 6091.0], [68.5, 6091.0], [68.6, 6176.0], [68.7, 6176.0], [68.8, 6338.0], [68.9, 6338.0], [69.0, 6429.0], [69.1, 6429.0], [69.2, 6439.0], [69.3, 6439.0], [69.4, 6518.0], [69.5, 6518.0], [69.6, 6527.0], [69.7, 6527.0], [69.8, 6680.0], [69.9, 6680.0], [70.0, 6686.0], [70.1, 6686.0], [70.2, 6716.0], [70.3, 6716.0], [70.4, 6781.0], [70.5, 6781.0], [70.6, 6806.0], [70.7, 6806.0], [70.8, 6812.0], [70.9, 6812.0], [71.0, 6831.0], [71.1, 6831.0], [71.2, 6862.0], [71.3, 6862.0], [71.4, 6866.0], [71.5, 6866.0], [71.6, 6931.0], [71.7, 6931.0], [71.8, 6957.0], [71.9, 6957.0], [72.0, 6979.0], [72.1, 6979.0], [72.2, 6996.0], [72.3, 6996.0], [72.4, 7168.0], [72.5, 7168.0], [72.6, 7222.0], [72.7, 7222.0], [72.8, 7244.0], [72.9, 7244.0], [73.0, 7254.0], [73.1, 7254.0], [73.2, 7257.0], [73.3, 7257.0], [73.4, 7282.0], [73.5, 7282.0], [73.6, 7295.0], [73.7, 7295.0], [73.8, 7297.0], [73.9, 7297.0], [74.0, 7407.0], [74.1, 7407.0], [74.2, 7418.0], [74.3, 7418.0], [74.4, 7425.0], [74.5, 7425.0], [74.6, 7441.0], [74.7, 7441.0], [74.8, 7469.0], [74.9, 7469.0], [75.0, 7498.0], [75.1, 7573.0], [75.2, 7573.0], [75.3, 7664.0], [75.4, 7664.0], [75.5, 7764.0], [75.6, 7764.0], [75.7, 7879.0], [75.8, 7879.0], [75.9, 7940.0], [76.0, 7940.0], [76.1, 8018.0], [76.2, 8018.0], [76.3, 8035.0], [76.4, 8035.0], [76.5, 8119.0], [76.6, 8119.0], [76.7, 8125.0], [76.8, 8125.0], [76.9, 8142.0], [77.0, 8142.0], [77.1, 8245.0], [77.2, 8245.0], [77.3, 8259.0], [77.4, 8259.0], [77.5, 8264.0], [77.6, 8264.0], [77.7, 8299.0], [77.8, 8299.0], [77.9, 8555.0], [78.0, 8555.0], [78.1, 8638.0], [78.2, 8638.0], [78.3, 8653.0], [78.4, 8653.0], [78.5, 8714.0], [78.6, 8714.0], [78.7, 8747.0], [78.8, 8747.0], [78.9, 8756.0], [79.0, 8756.0], [79.1, 8757.0], [79.2, 8757.0], [79.3, 8793.0], [79.4, 8793.0], [79.5, 8806.0], [79.6, 8806.0], [79.7, 8806.0], [79.8, 8806.0], [79.9, 8880.0], [80.0, 8880.0], [80.1, 8883.0], [80.2, 8883.0], [80.3, 8904.0], [80.4, 8904.0], [80.5, 8931.0], [80.6, 8931.0], [80.7, 8934.0], [80.8, 8934.0], [80.9, 8950.0], [81.0, 8950.0], [81.1, 8957.0], [81.2, 8957.0], [81.3, 8962.0], [81.4, 8962.0], [81.5, 8968.0], [81.6, 8968.0], [81.7, 9066.0], [81.8, 9066.0], [81.9, 9070.0], [82.0, 9070.0], [82.1, 9077.0], [82.2, 9077.0], [82.3, 9146.0], [82.4, 9146.0], [82.5, 9158.0], [82.6, 9158.0], [82.7, 9234.0], [82.8, 9234.0], [82.9, 9246.0], [83.0, 9246.0], [83.1, 9296.0], [83.2, 9296.0], [83.3, 9302.0], [83.4, 9369.0], [83.5, 9369.0], [83.6, 9375.0], [83.7, 9375.0], [83.8, 9391.0], [83.9, 9391.0], [84.0, 9407.0], [84.1, 9407.0], [84.2, 9437.0], [84.3, 9437.0], [84.4, 9447.0], [84.5, 9447.0], [84.6, 9488.0], [84.7, 9488.0], [84.8, 9518.0], [84.9, 9518.0], [85.0, 9527.0], [85.1, 9527.0], [85.2, 9566.0], [85.3, 9566.0], [85.4, 9646.0], [85.5, 9646.0], [85.6, 9648.0], [85.7, 9648.0], [85.8, 9657.0], [85.9, 9657.0], [86.0, 9685.0], [86.1, 9685.0], [86.2, 9737.0], [86.3, 9737.0], [86.4, 9743.0], [86.5, 9743.0], [86.6, 9792.0], [86.7, 9792.0], [86.8, 9800.0], [86.9, 9800.0], [87.0, 9806.0], [87.1, 9806.0], [87.2, 9885.0], [87.3, 9885.0], [87.4, 9895.0], [87.5, 9895.0], [87.6, 9906.0], [87.7, 9906.0], [87.8, 9975.0], [87.9, 9975.0], [88.0, 9987.0], [88.1, 9987.0], [88.2, 10003.0], [88.3, 10003.0], [88.4, 10006.0], [88.5, 10006.0], [88.6, 10058.0], [88.7, 10058.0], [88.8, 10060.0], [88.9, 10060.0], [89.0, 10067.0], [89.1, 10067.0], [89.2, 10070.0], [89.3, 10070.0], [89.4, 10132.0], [89.5, 10132.0], [89.6, 10165.0], [89.7, 10165.0], [89.8, 10170.0], [89.9, 10170.0], [90.0, 10216.0], [90.1, 10216.0], [90.2, 10261.0], [90.3, 10261.0], [90.4, 10269.0], [90.5, 10269.0], [90.6, 10297.0], [90.7, 10297.0], [90.8, 10363.0], [90.9, 10363.0], [91.0, 10374.0], [91.1, 10374.0], [91.2, 10383.0], [91.3, 10383.0], [91.4, 10543.0], [91.5, 10543.0], [91.6, 10546.0], [91.7, 10547.0], [91.8, 10547.0], [91.9, 10554.0], [92.0, 10554.0], [92.1, 10603.0], [92.2, 10603.0], [92.3, 10611.0], [92.4, 10611.0], [92.5, 10619.0], [92.6, 10619.0], [92.7, 10645.0], [92.8, 10645.0], [92.9, 10702.0], [93.0, 10702.0], [93.1, 10834.0], [93.2, 10834.0], [93.3, 10842.0], [93.4, 10842.0], [93.5, 10842.0], [93.6, 10842.0], [93.7, 10938.0], [93.8, 10938.0], [93.9, 10956.0], [94.0, 10956.0], [94.1, 11067.0], [94.2, 11067.0], [94.3, 11118.0], [94.4, 11118.0], [94.5, 11151.0], [94.6, 11151.0], [94.7, 11161.0], [94.8, 11161.0], [94.9, 11179.0], [95.0, 11179.0], [95.1, 11199.0], [95.2, 11199.0], [95.3, 11199.0], [95.4, 11199.0], [95.5, 11206.0], [95.6, 11206.0], [95.7, 11231.0], [95.8, 11231.0], [95.9, 11273.0], [96.0, 11273.0], [96.1, 11277.0], [96.2, 11277.0], [96.3, 11299.0], [96.4, 11299.0], [96.5, 11349.0], [96.6, 11349.0], [96.7, 11445.0], [96.8, 11445.0], [96.9, 11491.0], [97.0, 11491.0], [97.1, 11579.0], [97.2, 11579.0], [97.3, 11610.0], [97.4, 11610.0], [97.5, 11729.0], [97.6, 11729.0], [97.7, 11737.0], [97.8, 11737.0], [97.9, 11754.0], [98.0, 11754.0], [98.1, 11794.0], [98.2, 11794.0], [98.3, 11820.0], [98.4, 11820.0], [98.5, 11918.0], [98.6, 11918.0], [98.7, 11967.0], [98.8, 11967.0], [98.9, 11986.0], [99.0, 11986.0], [99.1, 11988.0], [99.2, 11988.0], [99.3, 12053.0], [99.4, 12053.0], [99.5, 12082.0], [99.6, 12082.0], [99.7, 12133.0], [99.8, 12133.0], [99.9, 12165.0], [100.0, 12165.0]], "isOverall": false, "label": "services Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 125.0, "series": [{"data": [[0.0, 18.0], [600.0, 18.0], [1400.0, 1.0], [1500.0, 6.0], [1600.0, 14.0], [1700.0, 23.0], [1800.0, 25.0], [1900.0, 16.0], [2000.0, 11.0], [2100.0, 15.0], [2300.0, 15.0], [2200.0, 14.0], [2400.0, 10.0], [2500.0, 8.0], [2600.0, 3.0], [3000.0, 3.0], [3100.0, 5.0], [3300.0, 1.0], [3200.0, 1.0], [3400.0, 1.0], [3500.0, 7.0], [3700.0, 3.0], [3600.0, 3.0], [3800.0, 4.0], [3900.0, 2.0], [4000.0, 2.0], [4300.0, 3.0], [4200.0, 5.0], [4100.0, 3.0], [4600.0, 3.0], [4500.0, 2.0], [4400.0, 2.0], [4800.0, 4.0], [4700.0, 3.0], [5100.0, 10.0], [5000.0, 9.0], [4900.0, 8.0], [5300.0, 11.0], [5200.0, 12.0], [5600.0, 2.0], [5500.0, 9.0], [5400.0, 12.0], [5700.0, 5.0], [5900.0, 2.0], [6600.0, 2.0], [6800.0, 2.0], [6900.0, 2.0], [7000.0, 1.0], [7400.0, 1.0], [7300.0, 5.0], [7200.0, 3.0], [7600.0, 2.0], [7500.0, 3.0], [7800.0, 5.0], [7900.0, 1.0], [8100.0, 2.0], [8000.0, 1.0], [8300.0, 1.0], [8700.0, 1.0], [8600.0, 2.0], [8500.0, 1.0], [8400.0, 3.0], [8200.0, 4.0], [9200.0, 1.0], [9100.0, 2.0], [8900.0, 3.0], [8800.0, 1.0], [9700.0, 2.0], [9600.0, 2.0], [9500.0, 1.0], [9400.0, 2.0], [10000.0, 3.0], [10200.0, 1.0], [10100.0, 2.0], [9900.0, 1.0], [10700.0, 4.0], [10500.0, 2.0], [10400.0, 4.0], [11000.0, 7.0], [11200.0, 3.0], [11100.0, 4.0], [10900.0, 2.0], [10800.0, 3.0], [11600.0, 2.0], [11500.0, 2.0], [11400.0, 1.0], [11300.0, 1.0], [12100.0, 2.0], [11900.0, 1.0], [100.0, 6.0], [200.0, 1.0], [300.0, 4.0], [400.0, 59.0], [500.0, 1.0]], "isOverall": false, "label": "contact Request", "isController": false}, {"data": [[300.0, 2.0], [400.0, 46.0], [500.0, 1.0], [600.0, 14.0], [1200.0, 3.0], [1300.0, 5.0], [1400.0, 6.0], [1500.0, 5.0], [1600.0, 1.0], [1700.0, 3.0], [1800.0, 4.0], [1900.0, 3.0], [2000.0, 2.0], [2100.0, 3.0], [2200.0, 3.0], [2300.0, 3.0], [2400.0, 3.0], [2500.0, 3.0], [2600.0, 3.0], [2700.0, 2.0], [2900.0, 3.0], [3000.0, 4.0], [3100.0, 1.0], [3200.0, 4.0], [3300.0, 1.0], [3400.0, 5.0], [3500.0, 2.0], [3600.0, 1.0], [3700.0, 2.0], [3800.0, 3.0], [3900.0, 3.0], [4000.0, 4.0], [4100.0, 1.0], [4200.0, 1.0], [4300.0, 7.0], [4400.0, 3.0], [4500.0, 4.0], [4600.0, 3.0], [4700.0, 5.0], [4800.0, 4.0], [4900.0, 6.0], [5000.0, 5.0], [5100.0, 3.0], [5200.0, 5.0], [5300.0, 3.0], [5400.0, 5.0], [5500.0, 2.0], [5600.0, 3.0], [5700.0, 6.0], [5800.0, 4.0], [5900.0, 3.0], [6000.0, 4.0], [6100.0, 5.0], [6200.0, 5.0], [6300.0, 3.0], [6400.0, 5.0], [6500.0, 1.0], [6600.0, 2.0], [6700.0, 4.0], [6800.0, 2.0], [6900.0, 3.0], [7000.0, 2.0], [7100.0, 3.0], [7200.0, 3.0], [7400.0, 3.0], [7300.0, 1.0], [7500.0, 4.0], [7600.0, 4.0], [7700.0, 5.0], [7800.0, 3.0], [7900.0, 5.0], [8000.0, 4.0], [8100.0, 1.0], [8200.0, 5.0], [8300.0, 2.0], [8400.0, 4.0], [8500.0, 2.0], [8600.0, 5.0], [8700.0, 1.0], [8800.0, 4.0], [8900.0, 3.0], [9000.0, 2.0], [9100.0, 3.0], [9200.0, 3.0], [9300.0, 2.0], [9400.0, 4.0], [9500.0, 4.0], [9600.0, 4.0], [9700.0, 4.0], [9800.0, 4.0], [9900.0, 3.0], [10000.0, 3.0], [10100.0, 5.0], [10200.0, 3.0], [10300.0, 1.0], [10400.0, 5.0], [10500.0, 2.0], [10600.0, 4.0], [10700.0, 6.0], [10800.0, 3.0], [10900.0, 4.0], [11000.0, 5.0], [11100.0, 5.0], [11200.0, 6.0], [11300.0, 6.0], [11400.0, 4.0], [11500.0, 5.0], [11700.0, 6.0], [11600.0, 6.0], [11800.0, 6.0], [11900.0, 3.0], [12000.0, 4.0], [12100.0, 5.0], [12200.0, 8.0], [12300.0, 5.0], [12400.0, 14.0], [12500.0, 18.0], [12600.0, 12.0]], "isOverall": false, "label": "home Request", "isController": false}, {"data": [[0.0, 125.0], [600.0, 8.0], [1500.0, 1.0], [1800.0, 2.0], [2000.0, 2.0], [2100.0, 2.0], [2300.0, 2.0], [2400.0, 1.0], [2500.0, 2.0], [2600.0, 1.0], [2700.0, 1.0], [2800.0, 2.0], [2900.0, 2.0], [3000.0, 1.0], [3200.0, 1.0], [3400.0, 3.0], [3600.0, 1.0], [3700.0, 2.0], [3800.0, 3.0], [4000.0, 1.0], [4100.0, 3.0], [4200.0, 1.0], [4300.0, 1.0], [4400.0, 1.0], [4500.0, 2.0], [4600.0, 1.0], [4700.0, 1.0], [4800.0, 2.0], [5000.0, 3.0], [5100.0, 4.0], [5300.0, 1.0], [5500.0, 2.0], [5600.0, 5.0], [5700.0, 5.0], [5800.0, 8.0], [6100.0, 9.0], [6000.0, 9.0], [5900.0, 5.0], [6200.0, 7.0], [6300.0, 7.0], [6500.0, 6.0], [6600.0, 3.0], [6400.0, 3.0], [6700.0, 7.0], [6900.0, 5.0], [6800.0, 5.0], [7000.0, 6.0], [7100.0, 12.0], [7200.0, 7.0], [7300.0, 6.0], [7400.0, 12.0], [7500.0, 10.0], [7600.0, 7.0], [7700.0, 9.0], [7800.0, 5.0], [7900.0, 4.0], [8000.0, 6.0], [8100.0, 1.0], [8200.0, 6.0], [8300.0, 6.0], [8500.0, 6.0], [8600.0, 3.0], [8400.0, 4.0], [8800.0, 1.0], [9100.0, 3.0], [9200.0, 3.0], [9300.0, 3.0], [9500.0, 3.0], [9800.0, 1.0], [9900.0, 3.0], [10000.0, 2.0], [10100.0, 2.0], [10200.0, 3.0], [10400.0, 2.0], [10300.0, 1.0], [10500.0, 1.0], [10600.0, 5.0], [10700.0, 4.0], [10800.0, 3.0], [11000.0, 2.0], [11100.0, 4.0], [11200.0, 1.0], [11300.0, 4.0], [11500.0, 3.0], [11600.0, 2.0], [11700.0, 1.0], [11400.0, 1.0], [12000.0, 1.0], [11900.0, 1.0], [11800.0, 2.0], [100.0, 14.0], [200.0, 4.0], [300.0, 4.0], [400.0, 42.0], [500.0, 1.0]], "isOverall": false, "label": "about Request", "isController": false}, {"data": [[0.0, 56.0], [600.0, 22.0], [2900.0, 1.0], [3000.0, 3.0], [3100.0, 12.0], [3300.0, 16.0], [3200.0, 15.0], [3400.0, 18.0], [3500.0, 25.0], [3700.0, 8.0], [3600.0, 10.0], [3800.0, 6.0], [3900.0, 8.0], [4000.0, 6.0], [4100.0, 6.0], [4300.0, 6.0], [4200.0, 6.0], [4500.0, 7.0], [4600.0, 3.0], [4400.0, 7.0], [4700.0, 1.0], [4800.0, 1.0], [4900.0, 3.0], [5300.0, 1.0], [5400.0, 5.0], [5500.0, 4.0], [5700.0, 1.0], [5800.0, 1.0], [6000.0, 1.0], [6100.0, 1.0], [6300.0, 1.0], [6500.0, 2.0], [6600.0, 2.0], [6400.0, 2.0], [6700.0, 2.0], [6800.0, 5.0], [6900.0, 4.0], [7100.0, 1.0], [7200.0, 7.0], [7400.0, 6.0], [7600.0, 1.0], [7500.0, 1.0], [7700.0, 1.0], [7900.0, 1.0], [7800.0, 1.0], [8100.0, 3.0], [8000.0, 2.0], [8200.0, 4.0], [8700.0, 5.0], [8600.0, 2.0], [8500.0, 1.0], [8900.0, 7.0], [9000.0, 3.0], [9200.0, 3.0], [9100.0, 2.0], [8800.0, 4.0], [9300.0, 4.0], [9600.0, 4.0], [9700.0, 3.0], [9500.0, 3.0], [9400.0, 4.0], [10000.0, 6.0], [10200.0, 4.0], [10100.0, 3.0], [9900.0, 3.0], [9800.0, 4.0], [10300.0, 3.0], [10500.0, 4.0], [10600.0, 4.0], [10700.0, 1.0], [10800.0, 3.0], [11000.0, 1.0], [11100.0, 6.0], [11200.0, 5.0], [10900.0, 2.0], [11700.0, 4.0], [11500.0, 1.0], [11600.0, 1.0], [11400.0, 2.0], [11300.0, 1.0], [12100.0, 2.0], [12000.0, 2.0], [11900.0, 4.0], [11800.0, 1.0], [100.0, 12.0], [200.0, 3.0], [300.0, 8.0], [400.0, 64.0], [500.0, 1.0]], "isOverall": false, "label": "services Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 12600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 15.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1475.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 15.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1475.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 534.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 119.96153846153844, "minX": 1.7170464E12, "maxY": 336.9584178498989, "series": [{"data": [[1.71704646E12, 336.9584178498989], [1.7170464E12, 119.96153846153844]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71704646E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 12473.0, "series": [{"data": [[2.0, 1509.0], [3.0, 1595.0], [4.0, 1492.0], [5.0, 1556.0], [6.0, 1558.0], [7.0, 1637.0], [8.0, 1590.0], [9.0, 1646.0], [10.0, 1642.0], [11.0, 1608.0], [12.0, 1657.0], [13.0, 1657.0], [14.0, 1611.0], [15.0, 1659.0], [16.0, 1649.0], [17.0, 1679.0], [18.0, 1708.0], [19.0, 1667.0], [20.0, 1693.0], [21.0, 1723.0], [22.0, 1720.0], [23.0, 1680.0], [24.0, 1693.0], [25.0, 1734.0], [26.0, 1750.0], [27.0, 1747.0], [28.0, 1715.0], [29.0, 1772.0], [30.0, 1744.0], [31.0, 1753.0], [33.0, 1738.0], [32.0, 1772.0], [35.0, 1753.0], [34.0, 1790.0], [37.0, 1750.0], [36.0, 1801.0], [39.0, 1795.0], [38.0, 1777.0], [41.0, 1784.0], [40.0, 1771.0], [43.0, 1793.0], [42.0, 1818.0], [45.0, 1808.0], [44.0, 1782.0], [47.0, 1793.0], [46.0, 1824.0], [49.0, 1805.0], [48.0, 1826.0], [51.0, 1834.0], [50.0, 1794.0], [53.0, 1806.0], [52.0, 1829.0], [55.0, 1856.0], [54.0, 1865.0], [57.0, 1826.0], [56.0, 1815.0], [59.0, 1859.0], [58.0, 1860.0], [61.0, 1880.0], [60.0, 1856.0], [62.0, 1863.0], [70.0, 1931.0], [69.0, 1878.0], [68.0, 1886.0], [79.0, 1982.0], [78.0, 1935.0], [83.0, 1984.0], [82.0, 1991.0], [81.0, 1972.0], [80.0, 1939.0], [87.0, 2008.0], [86.0, 1991.0], [85.0, 1996.0], [84.0, 2012.0], [91.0, 2079.0], [90.0, 2046.0], [89.0, 2030.0], [88.0, 2047.0], [95.0, 2059.0], [94.0, 2102.0], [93.0, 2038.0], [92.0, 2043.0], [99.0, 2145.0], [98.0, 2070.0], [97.0, 2126.0], [96.0, 2115.0], [103.0, 2161.0], [102.0, 2092.0], [101.0, 2145.0], [100.0, 2111.0], [107.0, 2147.0], [106.0, 2129.0], [105.0, 2175.0], [104.0, 2100.0], [111.0, 2200.0], [110.0, 2139.0], [109.0, 2157.0], [108.0, 2215.0], [115.0, 2165.0], [114.0, 2221.0], [113.0, 2167.0], [112.0, 2216.0], [119.0, 2219.0], [118.0, 2270.0], [117.0, 2262.0], [116.0, 2249.0], [123.0, 2304.0], [122.0, 2260.0], [121.0, 2267.0], [120.0, 2247.0], [127.0, 2308.0], [126.0, 2293.0], [125.0, 2288.0], [124.0, 2282.0], [135.0, 2316.0], [134.0, 2365.0], [133.0, 2357.0], [132.0, 2352.0], [131.0, 2353.0], [130.0, 2339.0], [129.0, 2327.0], [128.0, 2304.0], [143.0, 2443.0], [142.0, 2389.0], [141.0, 2412.0], [140.0, 2377.0], [139.0, 2414.0], [138.0, 2342.0], [137.0, 2361.0], [136.0, 2340.0], [151.0, 2489.0], [150.0, 2481.0], [149.0, 2518.0], [148.0, 2494.0], [147.0, 2443.0], [146.0, 2484.0], [145.0, 2409.0], [144.0, 2438.0], [159.0, 2561.0], [158.0, 2608.0], [157.0, 2573.0], [156.0, 2544.0], [155.0, 2526.0], [154.0, 2543.0], [153.0, 2529.0], [152.0, 2513.0], [167.0, 3161.0], [166.0, 3136.0], [165.0, 3072.0], [164.0, 3073.0], [163.0, 3101.0], [162.0, 3092.0], [161.0, 2618.0], [160.0, 2608.0], [175.0, 3544.0], [174.0, 3526.0], [173.0, 3511.0], [172.0, 3426.0], [171.0, 3368.0], [170.0, 3270.0], [169.0, 3162.0], [168.0, 3194.0], [183.0, 3719.0], [182.0, 3638.0], [181.0, 3622.0], [180.0, 3591.0], [179.0, 3577.0], [178.0, 3614.0], [177.0, 3546.0], [176.0, 3583.0], [191.0, 3947.0], [190.0, 3935.0], [189.0, 3865.0], [188.0, 3847.0], [187.0, 3827.0], [186.0, 3796.0], [185.0, 3805.0], [184.0, 3743.0], [199.0, 4292.0], [198.0, 4242.0], [197.0, 4283.0], [196.0, 4110.0], [195.0, 4109.0], [194.0, 4105.0], [193.0, 4033.0], [192.0, 4024.0], [207.0, 4597.0], [206.0, 4499.0], [205.0, 4427.0], [204.0, 4386.0], [203.0, 4334.0], [202.0, 4305.0], [201.0, 4253.0], [200.0, 4259.0], [215.0, 4732.0], [214.0, 4825.0], [213.0, 4698.0], [212.0, 4739.0], [211.0, 4668.0], [210.0, 4712.0], [209.0, 4653.0], [208.0, 4569.0], [223.0, 4941.0], [222.0, 4960.0], [221.0, 4903.0], [220.0, 4920.0], [219.0, 4973.0], [218.0, 4820.0], [217.0, 4837.0], [216.0, 4881.0], [231.0, 5050.0], [230.0, 5021.0], [229.0, 5016.0], [228.0, 4961.0], [227.0, 5023.0], [226.0, 4997.0], [225.0, 4970.0], [224.0, 5004.0], [239.0, 5106.0], [238.0, 5132.0], [237.0, 5105.0], [236.0, 5096.0], [235.0, 5106.0], [234.0, 5070.0], [233.0, 5046.0], [232.0, 5070.0], [247.0, 5205.0], [246.0, 5224.0], [245.0, 5175.0], [244.0, 5183.0], [243.0, 5214.0], [242.0, 5126.0], [241.0, 5173.0], [240.0, 5157.0], [255.0, 5268.0], [254.0, 5252.0], [253.0, 5249.0], [252.0, 5289.0], [251.0, 5243.0], [250.0, 5215.0], [249.0, 5244.0], [248.0, 5178.0], [270.0, 5451.0], [271.0, 5440.0], [269.0, 5366.0], [268.0, 5398.0], [267.0, 5413.0], [266.0, 5380.0], [265.0, 5376.0], [264.0, 5362.0], [263.0, 5308.0], [257.0, 5303.0], [256.0, 5295.0], [259.0, 5271.0], [258.0, 5330.0], [262.0, 5352.0], [261.0, 5309.0], [260.0, 5346.0], [286.0, 5554.0], [287.0, 5578.0], [285.0, 5580.0], [284.0, 5486.0], [283.0, 5558.0], [282.0, 5460.0], [281.0, 5448.0], [280.0, 5451.0], [279.0, 5434.0], [273.0, 5514.0], [272.0, 5500.0], [275.0, 5503.0], [274.0, 5498.0], [278.0, 5486.0], [277.0, 5497.0], [276.0, 5479.0], [302.0, 6928.0], [303.0, 6803.0], [301.0, 6970.0], [300.0, 6681.0], [299.0, 6689.0], [298.0, 5943.0], [297.0, 5939.0], [296.0, 5724.0], [295.0, 5767.0], [289.0, 5587.0], [288.0, 5586.0], [291.0, 5691.0], [290.0, 5654.0], [294.0, 5733.0], [293.0, 5797.0], [292.0, 5725.0], [318.0, 7802.0], [319.0, 7423.0], [317.0, 7354.0], [316.0, 7847.0], [315.0, 7835.0], [314.0, 7232.0], [313.0, 7237.0], [312.0, 7212.0], [311.0, 7567.0], [305.0, 7350.0], [304.0, 7358.0], [307.0, 7376.0], [306.0, 6851.0], [310.0, 7635.0], [309.0, 7032.0], [308.0, 7341.0], [334.0, 8480.0], [335.0, 8541.0], [333.0, 8463.0], [332.0, 8490.0], [331.0, 8226.0], [330.0, 8262.0], [329.0, 8290.0], [328.0, 7826.0], [327.0, 8219.0], [321.0, 7532.0], [320.0, 7881.0], [323.0, 7980.0], [322.0, 8022.0], [326.0, 8122.0], [325.0, 7620.0], [324.0, 7571.0], [350.0, 9543.0], [351.0, 9689.0], [349.0, 9430.0], [348.0, 9404.0], [347.0, 9227.0], [346.0, 9168.0], [345.0, 9182.0], [344.0, 8922.0], [343.0, 8835.0], [337.0, 8128.0], [336.0, 8613.0], [339.0, 8732.0], [338.0, 8649.0], [342.0, 8903.0], [341.0, 8906.0], [340.0, 8352.0], [366.0, 10555.0], [367.0, 10749.0], [365.0, 10432.0], [364.0, 10567.0], [363.0, 10455.0], [362.0, 10400.0], [361.0, 10426.0], [360.0, 10294.0], [359.0, 10104.0], [353.0, 9707.0], [352.0, 9669.0], [355.0, 9978.0], [354.0, 9707.0], [358.0, 10117.0], [357.0, 10066.0], [356.0, 10053.0], [382.0, 11181.0], [383.0, 11179.0], [381.0, 11146.0], [380.0, 11098.0], [379.0, 11024.0], [378.0, 11080.0], [377.0, 11000.0], [375.0, 11034.0], [369.0, 10783.0], [368.0, 10791.0], [371.0, 10886.0], [370.0, 10835.0], [374.0, 11003.0], [373.0, 10908.0], [372.0, 10871.0], [398.0, 11052.0], [399.0, 10789.0], [397.0, 196.0], [396.0, 12134.0], [395.0, 12140.0], [394.0, 11999.0], [393.0, 11634.0], [392.0, 11537.0], [391.0, 11626.0], [385.0, 11190.0], [384.0, 11246.0], [387.0, 11270.0], [386.0, 11226.0], [390.0, 11558.0], [389.0, 11438.0], [388.0, 11367.0], [414.0, 1.0], [415.0, 643.0], [413.0, 658.0], [412.0, 621.0], [411.0, 611.0], [410.0, 435.0], [409.0, 404.0], [408.0, 1.0], [407.0, 0.0], [401.0, 102.0], [400.0, 10069.0], [403.0, 197.0], [402.0, 209.0], [406.0, 0.0], [405.0, 7.0], [404.0, 1.0], [429.0, 611.0], [424.0, 402.0], [427.0, 391.5], [428.0, 273.0], [419.0, 1.0], [418.0, 416.0], [417.0, 0.0], [416.0, 429.0], [431.0, 284.6666666666667], [426.0, 1.0], [425.0, 0.0], [423.0, 385.0], [422.0, 637.0], [421.0, 423.0], [420.0, 445.0], [446.0, 425.6666666666667], [439.0, 411.0], [440.0, 439.5], [445.0, 430.6666666666667], [434.0, 428.0], [433.0, 646.0], [432.0, 0.0], [447.0, 416.0], [443.0, 429.0], [442.0, 433.0], [441.0, 0.0], [438.0, 622.0], [437.0, 644.0], [436.0, 421.0], [462.0, 437.0], [457.0, 430.0], [454.0, 211.0], [453.0, 421.5], [455.0, 639.0], [449.0, 435.0], [448.0, 436.0], [451.0, 392.0], [450.0, 416.0], [458.0, 427.0], [463.0, 450.0], [461.0, 394.0], [460.0, 425.0], [459.0, 429.0], [456.0, 416.0], [476.0, 421.0], [466.0, 422.8], [467.0, 489.5], [468.0, 329.0], [469.0, 439.0], [475.0, 345.6666666666667], [474.0, 420.6666666666667], [473.0, 400.0], [472.0, 406.0], [471.0, 451.0], [465.0, 645.0], [464.0, 0.0], [470.0, 423.0], [1.0, 1517.0]], "isOverall": false, "label": "contact Request", "isController": false}, {"data": [[251.51383399209533, 3881.9130434782587]], "isOverall": false, "label": "contact Request-Aggregated", "isController": false}, {"data": [[66.0, 1285.0], [67.0, 1309.0], [71.0, 1354.0], [72.0, 1318.5], [75.0, 1352.0], [78.0, 1409.5], [82.0, 1438.0], [84.0, 1467.5], [90.0, 1552.0], [92.0, 1541.0], [93.0, 1475.0], [94.0, 1499.0], [95.0, 1438.0], [102.0, 1584.5], [105.0, 1729.0], [108.0, 1787.0], [112.0, 1825.0], [117.0, 1856.0], [120.0, 1872.0], [124.0, 1913.0], [126.0, 1976.0], [128.0, 1979.0], [134.0, 2072.0], [135.0, 2077.0], [138.0, 2110.0], [142.0, 2154.5], [146.0, 2203.0], [149.0, 2251.0], [150.0, 2245.0], [152.0, 2353.6666666666665], [163.0, 2423.0], [166.0, 2472.0], [168.0, 2494.0], [173.0, 2559.0], [174.0, 2559.0], [178.0, 2608.0], [179.0, 2643.0], [180.0, 2587.0], [185.0, 2672.0], [188.0, 2790.0], [193.0, 2782.0], [197.0, 2942.0], [203.0, 2983.0], [204.0, 3019.0], [205.0, 2984.0], [210.0, 3076.0], [212.0, 3092.0], [213.0, 3089.0], [217.0, 3155.0], [220.0, 3226.3333333333335], [228.0, 3233.0], [230.0, 3354.0], [235.0, 3405.0], [236.0, 3415.0], [240.0, 3454.0], [241.0, 3433.0], [245.0, 3494.0], [248.0, 3581.0], [252.0, 3569.0], [254.0, 3657.0], [262.0, 3736.0], [263.0, 3801.0], [264.0, 3790.0], [269.0, 3833.0], [272.0, 3902.0], [273.0, 3845.0], [278.0, 3963.0], [280.0, 4020.0], [282.0, 3999.0], [286.0, 4072.0], [287.0, 4065.0], [288.0, 4066.0], [298.0, 4164.0], [299.0, 4262.0], [302.0, 4314.0], [304.0, 4339.0], [307.0, 4376.0], [308.0, 4328.0], [310.0, 4384.0], [312.0, 4397.0], [314.0, 4389.0], [315.0, 4427.0], [321.0, 4507.0], [322.0, 4473.0], [327.0, 4589.0], [328.0, 4561.0], [329.0, 4561.0], [333.0, 4622.0], [334.0, 4635.0], [339.0, 4661.0], [340.0, 4712.0], [344.0, 4774.0], [346.0, 4779.0], [348.0, 4759.0], [349.0, 4854.0], [353.0, 4854.0], [359.0, 4907.0], [360.0, 4863.0], [361.0, 4966.0], [363.0, 4950.0], [364.0, 4983.0], [367.0, 4959.0], [368.0, 4970.5], [371.0, 5017.0], [373.0, 5079.0], [376.0, 5046.0], [378.0, 5103.0], [380.0, 5061.0], [383.0, 12245.5], [377.0, 12292.0], [398.0, 11161.285714285716], [384.0, 5182.0], [385.0, 8802.5], [387.0, 12461.0], [397.0, 11875.117647058823], [396.0, 12403.342105263162], [391.0, 5267.0], [389.0, 12473.0], [392.0, 5264.0], [393.0, 11883.7], [394.0, 10769.0], [395.0, 11362.666666666668], [399.0, 11140.441176470587], [413.0, 5443.0], [402.0, 9119.714285714284], [401.0, 9946.0], [400.0, 10430.640000000001], [403.0, 9508.666666666666], [407.0, 8433.04761904762], [406.0, 8831.0], [404.0, 8826.250000000002], [405.0, 7741.0], [409.0, 7098.666666666667], [411.0, 5490.0], [414.0, 7594.900000000001], [415.0, 7719.0], [408.0, 8072.0], [410.0, 7929.0], [416.0, 7121.0], [423.0, 5599.0], [424.0, 5668.0], [427.0, 6519.5], [428.0, 6589.5], [431.0, 5741.0], [425.0, 7437.5], [420.0, 7553.25], [417.0, 7622.0], [444.0, 4449.75], [433.0, 5800.0], [432.0, 5753.0], [435.0, 3094.0], [437.0, 5814.0], [436.0, 7255.666666666667], [438.0, 7131.666666666667], [439.0, 556.0], [440.0, 5869.0], [443.0, 7071.0], [447.0, 3176.5], [445.0, 3805.5], [446.0, 419.0], [449.0, 5978.0], [448.0, 6475.5], [450.0, 540.0], [451.0, 6953.0], [460.0, 6209.0], [461.0, 3285.5], [462.0, 3301.5], [463.0, 2527.166666666667], [452.0, 432.0], [453.0, 6073.0], [454.0, 2926.4], [455.0, 3729.0], [456.0, 6143.0], [457.0, 2342.166666666667], [458.0, 2465.4444444444443], [466.0, 2645.875], [465.0, 1438.1666666666665], [467.0, 1965.25], [476.0, 2544.666666666667], [468.0, 3484.0], [469.0, 2491.8333333333335], [470.0, 2508.0], [471.0, 560.5], [472.0, 441.0], [473.0, 6407.0], [474.0, 2425.8333333333335], [475.0, 3462.5]], "isOverall": false, "label": "home Request", "isController": false}, {"data": [[370.57707509881425, 6841.077075098818]], "isOverall": false, "label": "home Request-Aggregated", "isController": false}, {"data": [[143.0, 1538.0], [152.0, 1814.0], [161.0, 1879.0], [173.0, 2021.0], [176.0, 2089.0], [179.0, 2141.0], [182.0, 2136.0], [194.0, 2317.0], [196.0, 2351.0], [205.0, 2451.0], [210.0, 2519.0], [213.0, 2582.0], [220.0, 2665.0], [230.0, 2781.0], [234.0, 2846.0], [235.0, 2860.0], [239.0, 2912.0], [242.0, 2946.0], [254.0, 3033.0], [249.0, 5706.0], [262.0, 3200.0], [266.0, 5678.0], [263.0, 5680.0], [284.0, 5942.0], [287.0, 6001.0], [279.0, 3481.0], [274.0, 5763.0], [273.0, 5681.0], [283.0, 3496.5], [286.0, 5987.0], [282.0, 5906.0], [281.0, 5840.333333333333], [278.0, 5796.0], [277.0, 5698.0], [276.0, 5741.0], [302.0, 7097.857142857142], [295.0, 3662.0], [289.0, 6021.0], [288.0, 5986.0], [291.0, 6076.0], [290.0, 6042.666666666667], [303.0, 7159.75], [301.0, 6992.0], [300.0, 6924.25], [299.0, 6848.0], [298.0, 6482.999999999999], [296.0, 6213.299999999999], [294.0, 6080.0], [293.0, 6141.0], [319.0, 7778.666666666666], [305.0, 6058.333333333333], [304.0, 7165.0], [306.0, 7310.5], [311.0, 7473.333333333333], [310.0, 7436.0], [309.0, 7435.75], [308.0, 7397.0], [307.0, 5580.5], [312.0, 6240.666666666667], [318.0, 6752.25], [317.0, 7687.0], [315.0, 7632.0], [314.0, 7590.0], [313.0, 7522.875000000001], [332.0, 7481.6], [321.0, 3885.0], [320.0, 7821.0], [333.0, 8495.0], [329.0, 8238.0], [327.0, 8230.666666666666], [326.0, 8109.0], [325.0, 7973.2], [324.0, 7886.0], [322.0, 7898.0], [342.0, 4150.0], [343.0, 4157.0], [347.0, 4186.0], [339.0, 8581.666666666666], [338.0, 8523.0], [337.0, 8508.0], [336.0, 8449.666666666666], [354.0, 4250.0], [359.0, 4346.0], [366.0, 4410.0], [375.0, 4511.0], [376.0, 4527.0], [383.0, 11676.0], [382.0, 11809.0], [380.0, 11660.0], [378.0, 11486.0], [389.0, 4691.0], [398.0, 9497.75], [399.0, 10079.450000000003], [397.0, 11258.375], [396.0, 5864.5], [392.0, 12023.5], [387.0, 11874.0], [412.0, 7376.0], [415.0, 3585.5], [400.0, 7133.3125], [401.0, 5675.4], [403.0, 2292.875], [402.0, 7709.0], [408.0, 2492.4], [414.0, 1796.5833333333335], [410.0, 1.0], [409.0, 1.0], [407.0, 1759.2962962962963], [406.0, 3314.2], [405.0, 2771.666666666667], [404.0, 1841.0714285714287], [429.0, 5074.0], [418.0, 6373.666666666667], [422.0, 5074.0], [420.0, 0.0], [423.0, 6942.0], [417.0, 0.0], [416.0, 0.0], [424.0, 171.5], [427.0, 72.0], [428.0, 2602.25], [431.0, 2751.2], [430.0, 5113.0], [425.0, 0.5], [444.0, 0.0], [432.0, 2567.0], [434.0, 11.0], [435.0, 0.0], [437.0, 1.0], [436.0, 2094.285714285714], [438.0, 0.0], [440.0, 0.0], [445.0, 1933.0], [447.0, 0.0], [443.0, 1334.8333333333333], [442.0, 449.0], [449.0, 209.0], [448.0, 141.66666666666669], [451.0, 342.2], [460.0, 1.0], [461.0, 359.66666666666663], [462.0, 198.5], [463.0, 1271.8333333333333], [453.0, 0.0], [454.0, 1168.1666666666667], [455.0, 287.33333333333337], [456.0, 281.6666666666667], [457.0, 207.0], [458.0, 1804.4285714285713], [466.0, 870.4444444444446], [465.0, 1748.5], [467.0, 254.8], [476.0, 364.25], [468.0, 316.0], [469.0, 1328.8], [470.0, 2156.666666666667], [472.0, 429.0], [473.0, 1679.5], [474.0, 251.25], [475.0, 0.0]], "isOverall": false, "label": "about Request", "isController": false}, {"data": [[375.56916996047386, 4447.460474308304]], "isOverall": false, "label": "about Request-Aggregated", "isController": false}, {"data": [[167.0, 3185.3333333333335], [166.0, 3152.0], [165.0, 3145.6666666666665], [164.0, 3189.0], [162.0, 3111.0], [161.0, 3096.6], [160.0, 2968.0], [174.0, 3518.125], [173.0, 3525.5], [172.0, 3450.076923076923], [171.0, 3406.0], [170.0, 3320.2222222222226], [169.0, 3263.1428571428573], [168.0, 3208.5], [183.0, 3744.0], [182.0, 3658.333333333333], [181.0, 3614.0], [180.0, 3590.2], [179.0, 3591.0], [177.0, 3576.2000000000003], [176.0, 3547.0], [191.0, 3961.6], [190.0, 3943.5], [189.0, 3904.0], [188.0, 3870.0], [187.0, 3832.25], [185.0, 3814.0], [184.0, 3754.3333333333335], [198.0, 4274.0], [196.0, 4189.6], [193.0, 4054.6666666666665], [207.0, 4580.666666666667], [206.0, 4519.75], [205.0, 4451.5], [204.0, 4475.0], [202.0, 4383.5], [201.0, 4375.0], [200.0, 4314.0], [209.0, 4649.333333333333], [284.0, 5555.5], [281.0, 5457.0], [278.0, 5444.0], [276.0, 5478.0], [275.0, 5484.5], [274.0, 5502.0], [302.0, 6715.666666666667], [300.0, 6434.0], [298.0, 6432.5], [291.0, 6176.0], [319.0, 7616.666666666667], [318.0, 7416.0], [315.0, 7418.0], [314.0, 7879.0], [313.0, 7266.4], [311.0, 7222.0], [310.0, 7168.0], [308.0, 6996.0], [307.0, 6979.0], [306.0, 6853.0], [333.0, 8555.0], [330.0, 8018.0], [329.0, 8264.0], [327.0, 8245.0], [326.0, 7764.0], [325.0, 7903.2], [350.0, 9556.75], [351.0, 7829.666666666667], [348.0, 9452.25], [339.0, 8754.333333333334], [338.0, 8679.333333333334], [347.0, 9356.0], [346.0, 9234.0], [345.0, 9183.333333333334], [344.0, 9035.0], [343.0, 8918.5], [342.0, 8968.0], [340.0, 8866.0], [366.0, 10615.0], [367.0, 10702.0], [365.0, 10547.0], [355.0, 9981.0], [354.0, 9861.714285714286], [352.0, 9767.5], [363.0, 10546.0], [361.0, 10543.0], [360.0, 10323.75], [359.0, 10132.0], [358.0, 10193.0], [357.0, 10112.5], [356.0, 10067.0], [383.0, 11223.0], [380.0, 11183.0], [378.0, 11162.0], [373.0, 10947.0], [369.0, 10842.0], [397.0, 5528.714285714286], [385.0, 4546.0], [399.0, 4839.818181818182], [398.0, 3683.3333333333335], [396.0, 8112.0], [387.0, 11445.0], [386.0, 11311.0], [394.0, 12022.0], [393.0, 11820.0], [392.0, 11579.0], [390.0, 11610.0], [389.0, 11491.0], [412.0, 0.0], [414.0, 1547.6], [415.0, 209.0], [413.0, 433.0], [409.0, 535.0], [408.0, 3749.5], [407.0, 1098.875], [401.0, 3846.6], [400.0, 4039.2999999999997], [403.0, 4471.25], [402.0, 1544.3333333333335], [406.0, 2753.6666666666665], [405.0, 4150.0], [404.0, 1831.6], [428.0, 142.33333333333334], [418.0, 1634.0], [417.0, 6957.0], [416.0, 594.25], [419.0, 6931.0], [422.0, 4931.0], [423.0, 42.0], [424.0, 4899.0], [429.0, 2496.5], [430.0, 0.0], [431.0, 132.66666666666666], [427.0, 654.0], [426.0, 6806.0], [425.0, 2078.75], [446.0, 437.0], [432.0, 2386.0], [434.0, 645.0], [438.0, 528.5], [437.0, 424.0], [436.0, 316.3333333333333], [440.0, 430.5], [444.0, 446.0], [445.0, 384.2], [447.0, 423.0], [443.0, 367.5], [442.0, 506.0], [441.0, 3469.0], [461.0, 419.0], [450.0, 426.5], [454.0, 1377.0], [455.0, 410.0], [456.0, 661.0], [458.0, 1472.75], [457.0, 502.3333333333333], [463.0, 429.8333333333333], [460.0, 424.0], [451.0, 417.75], [466.0, 446.83333333333337], [465.0, 340.0], [464.0, 6091.0], [467.0, 322.5], [476.0, 496.3333333333333], [468.0, 3074.5], [469.0, 214.5], [470.0, 326.8], [471.0, 424.0], [472.0, 421.0], [473.0, 281.3333333333333], [474.0, 531.0], [475.0, 5897.0]], "isOverall": false, "label": "services Request", "isController": false}, {"data": [[327.87351778656114, 4409.300395256916]], "isOverall": false, "label": "services Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 476.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 103.63333333333334, "minX": 1.7170464E12, "maxY": 1442102.05, "series": [{"data": [[1.71704646E12, 1442102.05], [1.7170464E12, 105003.26666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71704646E12, 3124.3166666666666], [1.7170464E12, 103.63333333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71704646E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1844.404255319149, "minX": 1.7170464E12, "maxY": 7352.7189542483675, "series": [{"data": [[1.71704646E12, 3881.9130434782587]], "isOverall": false, "label": "contact Request", "isController": false}, {"data": [[1.71704646E12, 7352.7189542483675], [1.7170464E12, 1844.404255319149]], "isOverall": false, "label": "home Request", "isController": false}, {"data": [[1.71704646E12, 4473.201596806385], [1.7170464E12, 1868.2]], "isOverall": false, "label": "about Request", "isController": false}, {"data": [[1.71704646E12, 4409.300395256916]], "isOverall": false, "label": "services Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71704646E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1426.1702127659576, "minX": 1.7170464E12, "maxY": 6949.220043572991, "series": [{"data": [[1.71704646E12, 3824.8794466403206]], "isOverall": false, "label": "contact Request", "isController": false}, {"data": [[1.71704646E12, 6949.220043572991], [1.7170464E12, 1426.1702127659576]], "isOverall": false, "label": "home Request", "isController": false}, {"data": [[1.71704646E12, 4304.307385229541], [1.7170464E12, 1671.0]], "isOverall": false, "label": "about Request", "isController": false}, {"data": [[1.71704646E12, 4342.4169960474355]], "isOverall": false, "label": "services Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71704646E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7170464E12, "maxY": 434.8496732026146, "series": [{"data": [[1.71704646E12, 140.11660079051396]], "isOverall": false, "label": "contact Request", "isController": false}, {"data": [[1.71704646E12, 434.8496732026146], [1.7170464E12, 434.65957446808517]], "isOverall": false, "label": "home Request", "isController": false}, {"data": [[1.71704646E12, 53.02594810379247], [1.7170464E12, 0.0]], "isOverall": false, "label": "about Request", "isController": false}, {"data": [[1.71704646E12, 167.45256916996033]], "isOverall": false, "label": "services Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71704646E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1284.0, "minX": 1.7170464E12, "maxY": 12680.0, "series": [{"data": [[1.71704646E12, 12680.0], [1.7170464E12, 2608.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71704646E12, 1492.0], [1.7170464E12, 1284.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71704646E12, 11305.400000000001], [1.7170464E12, 2457.3]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71704646E12, 12593.0], [1.7170464E12, 2608.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71704646E12, 6461.0], [1.7170464E12, 1828.5]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.71704646E12, 12047.3], [1.7170464E12, 2559.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71704646E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 8.0, "maxY": 11976.5, "series": [{"data": [[34.0, 5046.0], [39.0, 11976.5], [45.0, 10713.5], [48.0, 11107.5], [50.0, 9432.5], [55.0, 8828.0], [59.0, 8207.0], [58.0, 7553.5], [61.0, 9391.0], [60.0, 8241.5], [69.0, 6974.0], [77.0, 5939.0], [78.0, 1787.0], [82.0, 7641.0], [80.0, 3389.0], [85.0, 3851.0], [95.0, 11161.0], [99.0, 2308.0], [101.0, 5050.0], [123.0, 5796.5], [8.0, 1336.0], [131.0, 6974.5], [203.0, 6355.5], [21.0, 1565.0], [23.0, 2694.5], [25.0, 2790.0], [29.0, 4164.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[131.0, 421.0], [34.0, 196.0], [39.0, 123.0], [82.0, 1.0], [45.0, 157.0], [48.0, 144.0], [203.0, 424.0], [50.0, 7.5], [55.0, 1.0], [59.0, 1.0], [123.0, 404.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 203.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 8.0, "maxY": 11975.0, "series": [{"data": [[34.0, 4641.0], [39.0, 11975.0], [45.0, 10310.5], [48.0, 10709.0], [50.0, 9062.5], [55.0, 8423.0], [59.0, 7843.0], [58.0, 7392.5], [61.0, 9391.0], [60.0, 8119.0], [69.0, 6850.0], [77.0, 5780.0], [78.0, 1784.5], [82.0, 7227.0], [80.0, 3388.5], [85.0, 3851.0], [95.0, 11160.0], [99.0, 2303.0], [101.0, 5049.0], [123.0, 5396.5], [8.0, 924.0], [131.0, 6715.0], [203.0, 6009.0], [21.0, 1133.0], [23.0, 2388.0], [25.0, 2452.0], [29.0, 3785.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[131.0, 0.0], [34.0, 0.0], [39.0, 0.0], [82.0, 0.0], [45.0, 0.0], [48.0, 0.0], [203.0, 0.0], [50.0, 0.0], [55.0, 0.0], [59.0, 0.0], [123.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 203.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 3.8333333333333335, "minX": 1.7170464E12, "maxY": 29.9, "series": [{"data": [[1.71704646E12, 29.9], [1.7170464E12, 3.8333333333333335]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71704646E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.8666666666666667, "minX": 1.7170464E12, "maxY": 23.966666666666665, "series": [{"data": [[1.71704646E12, 23.966666666666665], [1.7170464E12, 0.8666666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.71704646E12, 3.816666666666667]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLHandshakeException", "isController": false}, {"data": [[1.71704646E12, 1.1]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.71704646E12, 3.9833333333333334]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71704646E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.7170464E12, "maxY": 6.65, "series": [{"data": [[1.71704646E12, 2.7666666666666666]], "isOverall": false, "label": "services Request-failure", "isController": false}, {"data": [[1.71704646E12, 6.6], [1.7170464E12, 0.7833333333333333]], "isOverall": false, "label": "home Request-success", "isController": false}, {"data": [[1.71704646E12, 5.666666666666667]], "isOverall": false, "label": "services Request-success", "isController": false}, {"data": [[1.71704646E12, 1.05]], "isOverall": false, "label": "home Request-failure", "isController": false}, {"data": [[1.71704646E12, 3.3]], "isOverall": false, "label": "about Request-failure", "isController": false}, {"data": [[1.71704646E12, 1.7833333333333334]], "isOverall": false, "label": "contact Request-failure", "isController": false}, {"data": [[1.71704646E12, 5.05], [1.7170464E12, 0.08333333333333333]], "isOverall": false, "label": "about Request-success", "isController": false}, {"data": [[1.71704646E12, 6.65]], "isOverall": false, "label": "contact Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71704646E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.8666666666666667, "minX": 1.7170464E12, "maxY": 23.966666666666665, "series": [{"data": [[1.71704646E12, 23.966666666666665], [1.7170464E12, 0.8666666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.71704646E12, 8.9]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71704646E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

